   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_spi.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  21              	.LC0:
  22 0000 6C69622F 		.ascii	"lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_s"
  22      63686970 
  22      2F53544D 
  22      33324634 
  22      78785F53 
  23 0033 70692E63 		.ascii	"pi.c\000"
  23      00
  24              		.section	.text.SPI_I2S_DeInit,"ax",%progbits
  25              		.align	2
  26              		.global	SPI_I2S_DeInit
  27              		.thumb
  28              		.thumb_func
  30              	SPI_I2S_DeInit:
  31              	.LFB110:
  32              		.file 1 "lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c"
   1:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
   2:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   ******************************************************************************
   3:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @file    stm32f4xx_spi.c
   4:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @author  MCD Application Team
   5:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @version V1.0.0
   6:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @date    30-September-2011
   7:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief   This file provides firmware functions to manage the following 
   8:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          functionalities of the Serial peripheral interface (SPI):
   9:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *           - Initialization and Configuration
  10:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *           - Data transfers functions
  11:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *           - Hardware CRC Calculation
  12:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *           - DMA transfers management
  13:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *           - Interrupts and flags management 
  14:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *           
  15:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *  @verbatim
  16:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          
  17:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *                    
  18:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          ===================================================================
  19:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *                                 How to use this driver
  20:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          ===================================================================
  21:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *    
  22:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          1. Enable peripheral clock using the following functions 
  23:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *             RCC_APB2PeriphClockCmd(RCC_APB2Periph_SPI1, ENABLE) for SPI1
  24:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *             RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI2, ENABLE) for SPI2
  25:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *             RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE) for SPI3.
  26:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *
  27:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          2. Enable SCK, MOSI, MISO and NSS GPIO clocks using RCC_AHB1PeriphClockCmd()
  28:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *             function.
  29:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *             In I2S mode, if an external clock source is used then the I2S CKIN pin GPIO
  30:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *             clock should also be enabled.
  31:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *
  32:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          3. Peripherals alternate function: 
  33:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  34:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  35:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *                 - Configure the desired pin in alternate function by:
  36:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  37:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  38:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  39:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *                 - Call GPIO_Init() function
  40:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *              In I2S mode, if an external clock source is used then the I2S CKIN pin
  41:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *              should be also configured in Alternate function Push-pull pull-up mode. 
  42:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *        
  43:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          4. Program the Polarity, Phase, First Data, Baud Rate Prescaler, Slave 
  44:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *             Management, Peripheral Mode and CRC Polynomial values using the SPI_Init()
  45:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *             function.
  46:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *             In I2S mode, program the Mode, Standard, Data Format, MCLK Output, Audio 
  47:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *             frequency and Polarity using I2S_Init() function.
  48:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *             For I2S mode, make sure that either:
  49:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *              - I2S PLL is configured using the functions RCC_I2SCLKConfig(RCC_I2S2CLKSource_PLL
  50:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *                RCC_PLLI2SCmd(ENABLE) and RCC_GetFlagStatus(RCC_FLAG_PLLI2SRDY).
  51:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *              or 
  52:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *              - External clock source is configured using the function 
  53:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *                RCC_I2SCLKConfig(RCC_I2S2CLKSource_Ext) and after setting correctly the define c
  54:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *                I2S_EXTERNAL_CLOCK_VAL in the stm32f4xx_conf.h file. 
  55:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *
  56:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          5. Enable the NVIC and the corresponding interrupt using the function 
  57:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *             SPI_ITConfig() if you need to use interrupt mode. 
  58:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *
  59:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          6. When using the DMA mode 
  60:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *                   - Configure the DMA using DMA_Init() function
  61:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *                   - Active the needed channel Request using SPI_I2S_DMACmd() function
  62:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * 
  63:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          7. Enable the SPI using the SPI_Cmd() function or enable the I2S using
  64:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *             I2S_Cmd().
  65:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * 
  66:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          8. Enable the DMA using the DMA_Cmd() function when using DMA mode. 
  67:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *
  68:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          9. Optionally, you can enable/configure the following parameters without
  69:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *             re-initialization (i.e there is no need to call again SPI_Init() function):
  70:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *              - When bidirectional mode (SPI_Direction_1Line_Rx or SPI_Direction_1Line_Tx)
  71:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *                is programmed as Data direction parameter using the SPI_Init() function
  72:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *                it can be possible to switch between SPI_Direction_Tx or SPI_Direction_Rx
  73:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *                using the SPI_BiDirectionalLineConfig() function.
  74:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *              - When SPI_NSS_Soft is selected as Slave Select Management parameter 
  75:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *                using the SPI_Init() function it can be possible to manage the 
  76:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *                NSS internal signal using the SPI_NSSInternalSoftwareConfig() function.
  77:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *              - Reconfigure the data size using the SPI_DataSizeConfig() function  
  78:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *              - Enable or disable the SS output using the SPI_SSOutputCmd() function  
  79:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          
  80:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          10. To use the CRC Hardware calculation feature refer to the Peripheral 
  81:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *              CRC hardware Calculation subsection.
  82:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *   
  83:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *
  84:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          It is possible to use SPI in I2S full duplex mode, in this case, each SPI 
  85:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          peripheral is able to manage sending and receiving data simultaneously
  86:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          using two data lines. Each SPI peripheral has an extended block called I2Sxext
  87:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          (ie. I2S2ext for SPI2 and I2S3ext for SPI3).
  88:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          The extension block is not a full SPI IP, it is used only as I2S slave to
  89:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          implement full duplex mode. The extension block uses the same clock sources
  90:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          as its master.          
  91:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          To configure I2S full duplex you have to:
  92:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            
  93:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          1. Configure SPIx in I2S mode (I2S_Init() function) as described above. 
  94:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *           
  95:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          2. Call the I2S_FullDuplexConfig() function using the same strucutre passed to  
  96:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *             I2S_Init() function.
  97:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            
  98:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          3. Call I2S_Cmd() for SPIx then for its extended block.
  99:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          
 100:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          4. To configure interrupts or DMA requests and to get/clear flag status, 
 101:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *             use I2Sxext instance for the extension block.
 102:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *             
 103:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          Functions that can be called with I2Sxext instances are:
 104:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          I2S_Cmd(), I2S_FullDuplexConfig(), SPI_I2S_ReceiveData(), SPI_I2S_SendData(), 
 105:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          SPI_I2S_DMACmd(), SPI_I2S_ITConfig(), SPI_I2S_GetFlagStatus(), SPI_I2S_ClearFlag(),
 106:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          SPI_I2S_GetITStatus() and SPI_I2S_ClearITPendingBit().
 107:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *                 
 108:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          Example: To use SPI3 in Full duplex mode (SPI3 is Master Tx, I2S3ext is Slave Rx):
 109:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            
 110:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI3, ENABLE);   
 111:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          I2S_StructInit(&I2SInitStruct);
 112:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          I2SInitStruct.Mode = I2S_Mode_MasterTx;     
 113:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          I2S_Init(SPI3, &I2SInitStruct);
 114:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          I2S_FullDuplexConfig(SPI3ext, &I2SInitStruct)
 115:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          I2S_Cmd(SPI3, ENABLE);
 116:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          I2S_Cmd(SPI3ext, ENABLE);
 117:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          ...
 118:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          while (SPI_I2S_GetFlagStatus(SPI2, SPI_FLAG_TXE) == RESET)
 119:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          {}
 120:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          SPI_I2S_SendData(SPI3, txdata[i]);
 121:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          ...  
 122:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          while (SPI_I2S_GetFlagStatus(I2S3ext, SPI_FLAG_RXNE) == RESET)
 123:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          {}
 124:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          rxdata[i] = SPI_I2S_ReceiveData(I2S3ext);
 125:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          ...          
 126:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *              
 127:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *     
 128:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note    In I2S mode: if an external clock is used as source clock for the I2S,  
 129:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          then the define I2S_EXTERNAL_CLOCK_VAL in file stm32f4xx_conf.h should 
 130:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          be enabled and set to the value of the source clock frequency (in Hz).
 131:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * 
 132:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note    In SPI mode: To use the SPI TI mode, call the function SPI_TIModeCmd() 
 133:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          just after calling the function SPI_Init().
 134:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *
 135:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *  @endverbatim  
 136:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *                                  
 137:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   ******************************************************************************
 138:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @attention
 139:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *
 140:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 141:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 142:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 143:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 144:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 145:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 146:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *
 147:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 148:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   ******************************************************************************  
 149:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */ 
 150:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 151:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /* Includes ------------------------------------------------------------------*/
 152:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** #include "stm32f4xx_spi.h"
 153:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** #include "stm32f4xx_rcc.h"
 154:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 155:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 156:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @{
 157:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 158:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 159:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /** @defgroup SPI 
 160:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief SPI driver modules
 161:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @{
 162:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */ 
 163:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 164:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /* Private typedef -----------------------------------------------------------*/
 165:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /* Private define ------------------------------------------------------------*/
 166:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 167:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /* SPI registers Masks */
 168:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** #define CR1_CLEAR_MASK            ((uint16_t)0x3040)
 169:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** #define I2SCFGR_CLEAR_MASK        ((uint16_t)0xF040)
 170:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 171:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /* RCC PLLs masks */
 172:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** #define PLLCFGR_PPLR_MASK         ((uint32_t)0x70000000)
 173:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** #define PLLCFGR_PPLN_MASK         ((uint32_t)0x00007FC0)
 174:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 175:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** #define SPI_CR2_FRF               ((uint16_t)0x0010)
 176:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** #define SPI_SR_TIFRFE             ((uint16_t)0x0100)
 177:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 178:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /* Private macro -------------------------------------------------------------*/
 179:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /* Private variables ---------------------------------------------------------*/
 180:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /* Private function prototypes -----------------------------------------------*/
 181:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /* Private functions ---------------------------------------------------------*/
 182:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 183:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /** @defgroup SPI_Private_Functions
 184:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @{
 185:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 186:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 187:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /** @defgroup SPI_Group1 Initialization and Configuration functions
 188:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  *  @brief   Initialization and Configuration functions 
 189:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  *
 190:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @verbatim   
 191:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ===============================================================================
 192:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   Initialization and Configuration functions
 193:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ===============================================================================  
 194:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 195:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   This section provides a set of functions allowing to initialize the SPI Direction,
 196:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPI Mode, SPI Data Size, SPI Polarity, SPI Phase, SPI NSS Management, SPI Baud
 197:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   Rate Prescaler, SPI First Bit and SPI CRC Polynomial.
 198:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 199:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   The SPI_Init() function follows the SPI configuration procedures for Master mode
 200:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   and Slave mode (details for these procedures are available in reference manual
 201:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   (RM0090)).
 202:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 203:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @endverbatim
 204:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @{
 205:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 206:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 207:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 208:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Deinitialize the SPIx peripheral registers to their default reset values.
 209:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2 or 3 
 210:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode.   
 211:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         
 212:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   The extended I2S blocks (ie. I2S2ext and I2S3ext blocks) are deinitialized
 213:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         when the relative I2S peripheral is deinitialized (the extended block's clock
 214:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         is managed by the I2S peripheral clock).
 215:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *             
 216:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 217:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 218:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_I2S_DeInit(SPI_TypeDef* SPIx)
 219:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
  33              		.loc 1 219 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 8
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 82B0     		sub	sp, sp, #8
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 16
  45 0004 00AF     		add	r7, sp, #0
  46              	.LCFI2:
  47              		.cfi_def_cfa_register 7
  48 0006 7860     		str	r0, [r7, #4]
 220:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 221:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
  49              		.loc 1 221 0
  50 0008 7A68     		ldr	r2, [r7, #4]
  51 000a 4FF44053 		mov	r3, #12288
  52 000e C4F20103 		movt	r3, 16385
  53 0012 9A42     		cmp	r2, r3
  54 0014 14D0     		beq	.L2
  55              		.loc 1 221 0 is_stmt 0 discriminator 1
  56 0016 7A68     		ldr	r2, [r7, #4]
  57 0018 4FF46053 		mov	r3, #14336
  58 001c C4F20003 		movt	r3, 16384
  59 0020 9A42     		cmp	r2, r3
  60 0022 0DD0     		beq	.L2
  61 0024 7A68     		ldr	r2, [r7, #4]
  62 0026 4FF47053 		mov	r3, #15360
  63 002a C4F20003 		movt	r3, 16384
  64 002e 9A42     		cmp	r2, r3
  65 0030 06D0     		beq	.L2
  66 0032 40F20000 		movw	r0, #:lower16:.LC0
  67 0036 C0F20000 		movt	r0, #:upper16:.LC0
  68 003a DD21     		movs	r1, #221
  69 003c FFF7FEFF 		bl	assert_failed
  70              	.L2:
 222:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 223:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (SPIx == SPI1)
  71              		.loc 1 223 0 is_stmt 1
  72 0040 7A68     		ldr	r2, [r7, #4]
  73 0042 4FF44053 		mov	r3, #12288
  74 0046 C4F20103 		movt	r3, 16385
  75 004a 9A42     		cmp	r2, r3
  76 004c 0AD1     		bne	.L3
 224:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 225:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Enable SPI1 reset state */
 226:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, ENABLE);
  77              		.loc 1 226 0
  78 004e 4FF48050 		mov	r0, #4096
  79 0052 0121     		movs	r1, #1
  80 0054 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 227:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Release SPI1 from reset state */
 228:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, DISABLE);
  81              		.loc 1 228 0
  82 0058 4FF48050 		mov	r0, #4096
  83 005c 0021     		movs	r1, #0
  84 005e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  85 0062 22E0     		b	.L1
  86              	.L3:
 229:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 230:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else if (SPIx == SPI2)
  87              		.loc 1 230 0
  88 0064 7A68     		ldr	r2, [r7, #4]
  89 0066 4FF46053 		mov	r3, #14336
  90 006a C4F20003 		movt	r3, 16384
  91 006e 9A42     		cmp	r2, r3
  92 0070 0AD1     		bne	.L5
 231:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 232:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Enable SPI2 reset state */
 233:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, ENABLE);
  93              		.loc 1 233 0
  94 0072 4FF48040 		mov	r0, #16384
  95 0076 0121     		movs	r1, #1
  96 0078 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 234:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Release SPI2 from reset state */
 235:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, DISABLE);
  97              		.loc 1 235 0
  98 007c 4FF48040 		mov	r0, #16384
  99 0080 0021     		movs	r1, #0
 100 0082 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 101 0086 10E0     		b	.L1
 102              	.L5:
 236:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     }
 237:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
 238:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 239:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     if (SPIx == SPI3)
 103              		.loc 1 239 0
 104 0088 7A68     		ldr	r2, [r7, #4]
 105 008a 4FF47053 		mov	r3, #15360
 106 008e C4F20003 		movt	r3, 16384
 107 0092 9A42     		cmp	r2, r3
 108 0094 09D1     		bne	.L1
 240:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     {
 241:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       /* Enable SPI3 reset state */
 242:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE);
 109              		.loc 1 242 0
 110 0096 4FF40040 		mov	r0, #32768
 111 009a 0121     		movs	r1, #1
 112 009c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 243:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       /* Release SPI3 from reset state */
 244:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, DISABLE);
 113              		.loc 1 244 0
 114 00a0 4FF40040 		mov	r0, #32768
 115 00a4 0021     		movs	r1, #0
 116 00a6 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 117              	.L1:
 245:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     }
 246:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 247:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 118              		.loc 1 247 0
 119 00aa 0837     		adds	r7, r7, #8
 120 00ac BD46     		mov	sp, r7
 121              		@ sp needed
 122 00ae 80BD     		pop	{r7, pc}
 123              		.cfi_endproc
 124              	.LFE110:
 126              		.section	.text.SPI_Init,"ax",%progbits
 127              		.align	2
 128              		.global	SPI_Init
 129              		.thumb
 130              		.thumb_func
 132              	SPI_Init:
 133              	.LFB111:
 248:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 249:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 250:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Initializes the SPIx peripheral according to the specified 
 251:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         parameters in the SPI_InitStruct.
 252:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 253:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPI_InitStruct: pointer to a SPI_InitTypeDef structure that
 254:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         contains the configuration information for the specified SPI peripheral.
 255:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 256:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 257:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_Init(SPI_TypeDef* SPIx, SPI_InitTypeDef* SPI_InitStruct)
 258:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 134              		.loc 1 258 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 16
 137              		@ frame_needed = 1, uses_anonymous_args = 0
 138 0000 80B5     		push	{r7, lr}
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 7, -8
 142              		.cfi_offset 14, -4
 143 0002 84B0     		sub	sp, sp, #16
 144              	.LCFI4:
 145              		.cfi_def_cfa_offset 24
 146 0004 00AF     		add	r7, sp, #0
 147              	.LCFI5:
 148              		.cfi_def_cfa_register 7
 149 0006 7860     		str	r0, [r7, #4]
 150 0008 3960     		str	r1, [r7]
 259:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint16_t tmpreg = 0;
 151              		.loc 1 259 0
 152 000a 0023     		movs	r3, #0
 153 000c FB81     		strh	r3, [r7, #14]	@ movhi
 260:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 261:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* check the parameters */
 262:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 154              		.loc 1 262 0
 155 000e 7A68     		ldr	r2, [r7, #4]
 156 0010 4FF44053 		mov	r3, #12288
 157 0014 C4F20103 		movt	r3, 16385
 158 0018 9A42     		cmp	r2, r3
 159 001a 15D0     		beq	.L7
 160              		.loc 1 262 0 is_stmt 0 discriminator 1
 161 001c 7A68     		ldr	r2, [r7, #4]
 162 001e 4FF46053 		mov	r3, #14336
 163 0022 C4F20003 		movt	r3, 16384
 164 0026 9A42     		cmp	r2, r3
 165 0028 0ED0     		beq	.L7
 166 002a 7A68     		ldr	r2, [r7, #4]
 167 002c 4FF47053 		mov	r3, #15360
 168 0030 C4F20003 		movt	r3, 16384
 169 0034 9A42     		cmp	r2, r3
 170 0036 07D0     		beq	.L7
 171 0038 40F20000 		movw	r0, #:lower16:.LC0
 172 003c C0F20000 		movt	r0, #:upper16:.LC0
 173 0040 4FF48371 		mov	r1, #262
 174 0044 FFF7FEFF 		bl	assert_failed
 175              	.L7:
 263:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 264:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the SPI parameters */
 265:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_DIRECTION_MODE(SPI_InitStruct->SPI_Direction));
 176              		.loc 1 265 0 is_stmt 1
 177 0048 3B68     		ldr	r3, [r7]
 178 004a 1B88     		ldrh	r3, [r3]
 179 004c 002B     		cmp	r3, #0
 180 004e 16D0     		beq	.L8
 181              		.loc 1 265 0 is_stmt 0 discriminator 1
 182 0050 3B68     		ldr	r3, [r7]
 183 0052 1B88     		ldrh	r3, [r3]
 184 0054 B3F5806F 		cmp	r3, #1024
 185 0058 11D0     		beq	.L8
 186 005a 3B68     		ldr	r3, [r7]
 187 005c 1B88     		ldrh	r3, [r3]
 188 005e B3F5004F 		cmp	r3, #32768
 189 0062 0CD0     		beq	.L8
 190 0064 3B68     		ldr	r3, [r7]
 191 0066 1B88     		ldrh	r3, [r3]
 192 0068 B3F5404F 		cmp	r3, #49152
 193 006c 07D0     		beq	.L8
 194 006e 40F20000 		movw	r0, #:lower16:.LC0
 195 0072 C0F20000 		movt	r0, #:upper16:.LC0
 196 0076 40F20911 		movw	r1, #265
 197 007a FFF7FEFF 		bl	assert_failed
 198              	.L8:
 266:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_MODE(SPI_InitStruct->SPI_Mode));
 199              		.loc 1 266 0 is_stmt 1
 200 007e 3B68     		ldr	r3, [r7]
 201 0080 5B88     		ldrh	r3, [r3, #2]
 202 0082 B3F5827F 		cmp	r3, #260
 203 0086 0BD0     		beq	.L9
 204              		.loc 1 266 0 is_stmt 0 discriminator 1
 205 0088 3B68     		ldr	r3, [r7]
 206 008a 5B88     		ldrh	r3, [r3, #2]
 207 008c 002B     		cmp	r3, #0
 208 008e 07D0     		beq	.L9
 209 0090 40F20000 		movw	r0, #:lower16:.LC0
 210 0094 C0F20000 		movt	r0, #:upper16:.LC0
 211 0098 4FF48571 		mov	r1, #266
 212 009c FFF7FEFF 		bl	assert_failed
 213              	.L9:
 267:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_DATASIZE(SPI_InitStruct->SPI_DataSize));
 214              		.loc 1 267 0 is_stmt 1
 215 00a0 3B68     		ldr	r3, [r7]
 216 00a2 9B88     		ldrh	r3, [r3, #4]
 217 00a4 B3F5006F 		cmp	r3, #2048
 218 00a8 0BD0     		beq	.L10
 219              		.loc 1 267 0 is_stmt 0 discriminator 1
 220 00aa 3B68     		ldr	r3, [r7]
 221 00ac 9B88     		ldrh	r3, [r3, #4]
 222 00ae 002B     		cmp	r3, #0
 223 00b0 07D0     		beq	.L10
 224 00b2 40F20000 		movw	r0, #:lower16:.LC0
 225 00b6 C0F20000 		movt	r0, #:upper16:.LC0
 226 00ba 40F20B11 		movw	r1, #267
 227 00be FFF7FEFF 		bl	assert_failed
 228              	.L10:
 268:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_CPOL(SPI_InitStruct->SPI_CPOL));
 229              		.loc 1 268 0 is_stmt 1
 230 00c2 3B68     		ldr	r3, [r7]
 231 00c4 DB88     		ldrh	r3, [r3, #6]
 232 00c6 002B     		cmp	r3, #0
 233 00c8 0BD0     		beq	.L11
 234              		.loc 1 268 0 is_stmt 0 discriminator 1
 235 00ca 3B68     		ldr	r3, [r7]
 236 00cc DB88     		ldrh	r3, [r3, #6]
 237 00ce 022B     		cmp	r3, #2
 238 00d0 07D0     		beq	.L11
 239 00d2 40F20000 		movw	r0, #:lower16:.LC0
 240 00d6 C0F20000 		movt	r0, #:upper16:.LC0
 241 00da 4FF48671 		mov	r1, #268
 242 00de FFF7FEFF 		bl	assert_failed
 243              	.L11:
 269:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_CPHA(SPI_InitStruct->SPI_CPHA));
 244              		.loc 1 269 0 is_stmt 1
 245 00e2 3B68     		ldr	r3, [r7]
 246 00e4 1B89     		ldrh	r3, [r3, #8]
 247 00e6 002B     		cmp	r3, #0
 248 00e8 0BD0     		beq	.L12
 249              		.loc 1 269 0 is_stmt 0 discriminator 1
 250 00ea 3B68     		ldr	r3, [r7]
 251 00ec 1B89     		ldrh	r3, [r3, #8]
 252 00ee 012B     		cmp	r3, #1
 253 00f0 07D0     		beq	.L12
 254 00f2 40F20000 		movw	r0, #:lower16:.LC0
 255 00f6 C0F20000 		movt	r0, #:upper16:.LC0
 256 00fa 40F20D11 		movw	r1, #269
 257 00fe FFF7FEFF 		bl	assert_failed
 258              	.L12:
 270:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_NSS(SPI_InitStruct->SPI_NSS));
 259              		.loc 1 270 0 is_stmt 1
 260 0102 3B68     		ldr	r3, [r7]
 261 0104 5B89     		ldrh	r3, [r3, #10]
 262 0106 B3F5007F 		cmp	r3, #512
 263 010a 0BD0     		beq	.L13
 264              		.loc 1 270 0 is_stmt 0 discriminator 1
 265 010c 3B68     		ldr	r3, [r7]
 266 010e 5B89     		ldrh	r3, [r3, #10]
 267 0110 002B     		cmp	r3, #0
 268 0112 07D0     		beq	.L13
 269 0114 40F20000 		movw	r0, #:lower16:.LC0
 270 0118 C0F20000 		movt	r0, #:upper16:.LC0
 271 011c 4FF48771 		mov	r1, #270
 272 0120 FFF7FEFF 		bl	assert_failed
 273              	.L13:
 271:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(SPI_InitStruct->SPI_BaudRatePrescaler));
 274              		.loc 1 271 0 is_stmt 1
 275 0124 3B68     		ldr	r3, [r7]
 276 0126 9B89     		ldrh	r3, [r3, #12]
 277 0128 002B     		cmp	r3, #0
 278 012a 23D0     		beq	.L14
 279              		.loc 1 271 0 is_stmt 0 discriminator 1
 280 012c 3B68     		ldr	r3, [r7]
 281 012e 9B89     		ldrh	r3, [r3, #12]
 282 0130 082B     		cmp	r3, #8
 283 0132 1FD0     		beq	.L14
 284 0134 3B68     		ldr	r3, [r7]
 285 0136 9B89     		ldrh	r3, [r3, #12]
 286 0138 102B     		cmp	r3, #16
 287 013a 1BD0     		beq	.L14
 288 013c 3B68     		ldr	r3, [r7]
 289 013e 9B89     		ldrh	r3, [r3, #12]
 290 0140 182B     		cmp	r3, #24
 291 0142 17D0     		beq	.L14
 292 0144 3B68     		ldr	r3, [r7]
 293 0146 9B89     		ldrh	r3, [r3, #12]
 294 0148 202B     		cmp	r3, #32
 295 014a 13D0     		beq	.L14
 296 014c 3B68     		ldr	r3, [r7]
 297 014e 9B89     		ldrh	r3, [r3, #12]
 298 0150 282B     		cmp	r3, #40
 299 0152 0FD0     		beq	.L14
 300 0154 3B68     		ldr	r3, [r7]
 301 0156 9B89     		ldrh	r3, [r3, #12]
 302 0158 302B     		cmp	r3, #48
 303 015a 0BD0     		beq	.L14
 304 015c 3B68     		ldr	r3, [r7]
 305 015e 9B89     		ldrh	r3, [r3, #12]
 306 0160 382B     		cmp	r3, #56
 307 0162 07D0     		beq	.L14
 308 0164 40F20000 		movw	r0, #:lower16:.LC0
 309 0168 C0F20000 		movt	r0, #:upper16:.LC0
 310 016c 40F20F11 		movw	r1, #271
 311 0170 FFF7FEFF 		bl	assert_failed
 312              	.L14:
 272:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_FIRST_BIT(SPI_InitStruct->SPI_FirstBit));
 313              		.loc 1 272 0 is_stmt 1
 314 0174 3B68     		ldr	r3, [r7]
 315 0176 DB89     		ldrh	r3, [r3, #14]
 316 0178 002B     		cmp	r3, #0
 317 017a 0BD0     		beq	.L15
 318              		.loc 1 272 0 is_stmt 0 discriminator 1
 319 017c 3B68     		ldr	r3, [r7]
 320 017e DB89     		ldrh	r3, [r3, #14]
 321 0180 802B     		cmp	r3, #128
 322 0182 07D0     		beq	.L15
 323 0184 40F20000 		movw	r0, #:lower16:.LC0
 324 0188 C0F20000 		movt	r0, #:upper16:.LC0
 325 018c 4FF48871 		mov	r1, #272
 326 0190 FFF7FEFF 		bl	assert_failed
 327              	.L15:
 273:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_CRC_POLYNOMIAL(SPI_InitStruct->SPI_CRCPolynomial));
 328              		.loc 1 273 0 is_stmt 1
 329 0194 3B68     		ldr	r3, [r7]
 330 0196 1B8A     		ldrh	r3, [r3, #16]
 331 0198 002B     		cmp	r3, #0
 332 019a 07D1     		bne	.L16
 333              		.loc 1 273 0 is_stmt 0 discriminator 1
 334 019c 40F20000 		movw	r0, #:lower16:.LC0
 335 01a0 C0F20000 		movt	r0, #:upper16:.LC0
 336 01a4 40F21111 		movw	r1, #273
 337 01a8 FFF7FEFF 		bl	assert_failed
 338              	.L16:
 274:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 275:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /*---------------------------- SPIx CR1 Configuration ------------------------*/
 276:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Get the SPIx CR1 value */
 277:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   tmpreg = SPIx->CR1;
 339              		.loc 1 277 0 is_stmt 1
 340 01ac 7B68     		ldr	r3, [r7, #4]
 341 01ae 1B88     		ldrh	r3, [r3]	@ movhi
 342 01b0 FB81     		strh	r3, [r7, #14]	@ movhi
 278:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Clear BIDIMode, BIDIOE, RxONLY, SSM, SSI, LSBFirst, BR, MSTR, CPOL and CPHA bits */
 279:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   tmpreg &= CR1_CLEAR_MASK;
 343              		.loc 1 279 0
 344 01b2 FB89     		ldrh	r3, [r7, #14]	@ movhi
 345 01b4 03F44153 		and	r3, r3, #12352
 346 01b8 FB81     		strh	r3, [r7, #14]	@ movhi
 280:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Configure SPIx: direction, NSS management, first transmitted bit, BaudRate prescaler
 281:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      master/salve mode, CPOL and CPHA */
 282:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Set BIDImode, BIDIOE and RxONLY bits according to SPI_Direction value */
 283:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Set SSM, SSI and MSTR bits according to SPI_Mode and SPI_NSS values */
 284:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Set LSBFirst bit according to SPI_FirstBit value */
 285:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Set BR bits according to SPI_BaudRatePrescaler value */
 286:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Set CPOL bit according to SPI_CPOL value */
 287:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Set CPHA bit according to SPI_CPHA value */
 288:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 347              		.loc 1 288 0
 348 01ba 3B68     		ldr	r3, [r7]
 349 01bc 1A88     		ldrh	r2, [r3]
 350 01be 3B68     		ldr	r3, [r7]
 351 01c0 5B88     		ldrh	r3, [r3, #2]
 352 01c2 1343     		orrs	r3, r3, r2
 353 01c4 9AB2     		uxth	r2, r3
 289:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 354              		.loc 1 289 0
 355 01c6 3B68     		ldr	r3, [r7]
 356 01c8 9B88     		ldrh	r3, [r3, #4]
 288:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 357              		.loc 1 288 0
 358 01ca 1343     		orrs	r3, r3, r2
 359 01cc 9AB2     		uxth	r2, r3
 360              		.loc 1 289 0
 361 01ce 3B68     		ldr	r3, [r7]
 362 01d0 DB88     		ldrh	r3, [r3, #6]
 288:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 363              		.loc 1 288 0
 364 01d2 1343     		orrs	r3, r3, r2
 365 01d4 9AB2     		uxth	r2, r3
 290:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_CPHA | SPI_InitStruct->SPI_NSS |  
 366              		.loc 1 290 0
 367 01d6 3B68     		ldr	r3, [r7]
 368 01d8 1B89     		ldrh	r3, [r3, #8]
 288:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 369              		.loc 1 288 0
 370 01da 1343     		orrs	r3, r3, r2
 371 01dc 9AB2     		uxth	r2, r3
 372              		.loc 1 290 0
 373 01de 3B68     		ldr	r3, [r7]
 374 01e0 5B89     		ldrh	r3, [r3, #10]
 288:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 375              		.loc 1 288 0
 376 01e2 1343     		orrs	r3, r3, r2
 377 01e4 9AB2     		uxth	r2, r3
 291:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_BaudRatePrescaler | SPI_InitStruct->SPI_FirstBit);
 378              		.loc 1 291 0
 379 01e6 3B68     		ldr	r3, [r7]
 380 01e8 9B89     		ldrh	r3, [r3, #12]
 288:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 381              		.loc 1 288 0
 382 01ea 1343     		orrs	r3, r3, r2
 383 01ec 9AB2     		uxth	r2, r3
 384              		.loc 1 291 0
 385 01ee 3B68     		ldr	r3, [r7]
 386 01f0 DB89     		ldrh	r3, [r3, #14]
 288:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 387              		.loc 1 288 0
 388 01f2 1343     		orrs	r3, r3, r2
 389 01f4 9AB2     		uxth	r2, r3
 390 01f6 FB89     		ldrh	r3, [r7, #14]	@ movhi
 391 01f8 1343     		orrs	r3, r3, r2
 392 01fa FB81     		strh	r3, [r7, #14]	@ movhi
 292:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Write to SPIx CR1 */
 293:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->CR1 = tmpreg;
 393              		.loc 1 293 0
 394 01fc 7B68     		ldr	r3, [r7, #4]
 395 01fe FA89     		ldrh	r2, [r7, #14]	@ movhi
 396 0200 1A80     		strh	r2, [r3]	@ movhi
 294:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 295:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Activate the SPI mode (Reset I2SMOD bit in I2SCFGR register) */
 296:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->I2SCFGR &= (uint16_t)~((uint16_t)SPI_I2SCFGR_I2SMOD);
 397              		.loc 1 296 0
 398 0202 7B68     		ldr	r3, [r7, #4]
 399 0204 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 400 0206 9BB2     		uxth	r3, r3
 401 0208 23F40063 		bic	r3, r3, #2048
 402 020c 9AB2     		uxth	r2, r3
 403 020e 7B68     		ldr	r3, [r7, #4]
 404 0210 9A83     		strh	r2, [r3, #28]	@ movhi
 297:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /*---------------------------- SPIx CRCPOLY Configuration --------------------*/
 298:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Write to SPIx CRCPOLY */
 299:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->CRCPR = SPI_InitStruct->SPI_CRCPolynomial;
 405              		.loc 1 299 0
 406 0212 3B68     		ldr	r3, [r7]
 407 0214 1A8A     		ldrh	r2, [r3, #16]
 408 0216 7B68     		ldr	r3, [r7, #4]
 409 0218 1A82     		strh	r2, [r3, #16]	@ movhi
 300:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 410              		.loc 1 300 0
 411 021a 1037     		adds	r7, r7, #16
 412 021c BD46     		mov	sp, r7
 413              		@ sp needed
 414 021e 80BD     		pop	{r7, pc}
 415              		.cfi_endproc
 416              	.LFE111:
 418              		.section	.text.I2S_Init,"ax",%progbits
 419              		.align	2
 420              		.global	I2S_Init
 421              		.thumb
 422              		.thumb_func
 424              	I2S_Init:
 425              	.LFB112:
 301:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 302:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 303:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Initializes the SPIx peripheral according to the specified 
 304:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         parameters in the I2S_InitStruct.
 305:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be  2 or 3 to select the SPI peripheral (configured in I2S mode).
 306:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  I2S_InitStruct: pointer to an I2S_InitTypeDef structure that
 307:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         contains the configuration information for the specified SPI peripheral
 308:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         configured in I2S mode.
 309:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *           
 310:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   The function calculates the optimal prescaler needed to obtain the most 
 311:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         accurate audio frequency (depending on the I2S clock source, the PLL values 
 312:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         and the product configuration). But in case the prescaler value is greater 
 313:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         than 511, the default value (0x02) will be configured instead.    
 314:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * 
 315:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   if an external clock is used as source clock for the I2S, then the define
 316:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         I2S_EXTERNAL_CLOCK_VAL in file stm32f4xx_conf.h should be enabled and set
 317:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         to the value of the the source clock frequency (in Hz).
 318:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *  
 319:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 320:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 321:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void I2S_Init(SPI_TypeDef* SPIx, I2S_InitTypeDef* I2S_InitStruct)
 322:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 426              		.loc 1 322 0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 40
 429              		@ frame_needed = 1, uses_anonymous_args = 0
 430 0000 80B5     		push	{r7, lr}
 431              	.LCFI6:
 432              		.cfi_def_cfa_offset 8
 433              		.cfi_offset 7, -8
 434              		.cfi_offset 14, -4
 435 0002 8AB0     		sub	sp, sp, #40
 436              	.LCFI7:
 437              		.cfi_def_cfa_offset 48
 438 0004 00AF     		add	r7, sp, #0
 439              	.LCFI8:
 440              		.cfi_def_cfa_register 7
 441 0006 7860     		str	r0, [r7, #4]
 442 0008 3960     		str	r1, [r7]
 323:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint16_t tmpreg = 0, i2sdiv = 2, i2sodd = 0, packetlength = 1;
 443              		.loc 1 323 0
 444 000a 0023     		movs	r3, #0
 445 000c 7B83     		strh	r3, [r7, #26]	@ movhi
 446 000e 0223     		movs	r3, #2
 447 0010 FB84     		strh	r3, [r7, #38]	@ movhi
 448 0012 0023     		movs	r3, #0
 449 0014 BB84     		strh	r3, [r7, #36]	@ movhi
 450 0016 0123     		movs	r3, #1
 451 0018 7B84     		strh	r3, [r7, #34]	@ movhi
 324:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint32_t tmp = 0, i2sclk = 0;
 452              		.loc 1 324 0
 453 001a 0023     		movs	r3, #0
 454 001c FB61     		str	r3, [r7, #28]
 455 001e 0023     		movs	r3, #0
 456 0020 7B61     		str	r3, [r7, #20]
 325:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** #ifndef I2S_EXTERNAL_CLOCK_VAL
 326:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint32_t pllm = 0, plln = 0, pllr = 0;
 457              		.loc 1 326 0
 458 0022 0023     		movs	r3, #0
 459 0024 3B61     		str	r3, [r7, #16]
 460 0026 0023     		movs	r3, #0
 461 0028 FB60     		str	r3, [r7, #12]
 462 002a 0023     		movs	r3, #0
 463 002c BB60     		str	r3, [r7, #8]
 327:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** #endif /* I2S_EXTERNAL_CLOCK_VAL */
 328:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 329:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the I2S parameters */
 330:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_23_PERIPH(SPIx));
 464              		.loc 1 330 0
 465 002e 7A68     		ldr	r2, [r7, #4]
 466 0030 4FF46053 		mov	r3, #14336
 467 0034 C4F20003 		movt	r3, 16384
 468 0038 9A42     		cmp	r2, r3
 469 003a 0ED0     		beq	.L18
 470              		.loc 1 330 0 is_stmt 0 discriminator 1
 471 003c 7A68     		ldr	r2, [r7, #4]
 472 003e 4FF47053 		mov	r3, #15360
 473 0042 C4F20003 		movt	r3, 16384
 474 0046 9A42     		cmp	r2, r3
 475 0048 07D0     		beq	.L18
 476 004a 40F20000 		movw	r0, #:lower16:.LC0
 477 004e C0F20000 		movt	r0, #:upper16:.LC0
 478 0052 4FF4A571 		mov	r1, #330
 479 0056 FFF7FEFF 		bl	assert_failed
 480              	.L18:
 331:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_MODE(I2S_InitStruct->I2S_Mode));
 481              		.loc 1 331 0 is_stmt 1
 482 005a 3B68     		ldr	r3, [r7]
 483 005c 1B88     		ldrh	r3, [r3]
 484 005e 002B     		cmp	r3, #0
 485 0060 16D0     		beq	.L19
 486              		.loc 1 331 0 is_stmt 0 discriminator 1
 487 0062 3B68     		ldr	r3, [r7]
 488 0064 1B88     		ldrh	r3, [r3]
 489 0066 B3F5807F 		cmp	r3, #256
 490 006a 11D0     		beq	.L19
 491 006c 3B68     		ldr	r3, [r7]
 492 006e 1B88     		ldrh	r3, [r3]
 493 0070 B3F5007F 		cmp	r3, #512
 494 0074 0CD0     		beq	.L19
 495 0076 3B68     		ldr	r3, [r7]
 496 0078 1B88     		ldrh	r3, [r3]
 497 007a B3F5407F 		cmp	r3, #768
 498 007e 07D0     		beq	.L19
 499 0080 40F20000 		movw	r0, #:lower16:.LC0
 500 0084 C0F20000 		movt	r0, #:upper16:.LC0
 501 0088 40F24B11 		movw	r1, #331
 502 008c FFF7FEFF 		bl	assert_failed
 503              	.L19:
 332:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_STANDARD(I2S_InitStruct->I2S_Standard));
 504              		.loc 1 332 0 is_stmt 1
 505 0090 3B68     		ldr	r3, [r7]
 506 0092 5B88     		ldrh	r3, [r3, #2]
 507 0094 002B     		cmp	r3, #0
 508 0096 17D0     		beq	.L20
 509              		.loc 1 332 0 is_stmt 0 discriminator 1
 510 0098 3B68     		ldr	r3, [r7]
 511 009a 5B88     		ldrh	r3, [r3, #2]
 512 009c 102B     		cmp	r3, #16
 513 009e 13D0     		beq	.L20
 514 00a0 3B68     		ldr	r3, [r7]
 515 00a2 5B88     		ldrh	r3, [r3, #2]
 516 00a4 202B     		cmp	r3, #32
 517 00a6 0FD0     		beq	.L20
 518 00a8 3B68     		ldr	r3, [r7]
 519 00aa 5B88     		ldrh	r3, [r3, #2]
 520 00ac 302B     		cmp	r3, #48
 521 00ae 0BD0     		beq	.L20
 522 00b0 3B68     		ldr	r3, [r7]
 523 00b2 5B88     		ldrh	r3, [r3, #2]
 524 00b4 B02B     		cmp	r3, #176
 525 00b6 07D0     		beq	.L20
 526 00b8 40F20000 		movw	r0, #:lower16:.LC0
 527 00bc C0F20000 		movt	r0, #:upper16:.LC0
 528 00c0 4FF4A671 		mov	r1, #332
 529 00c4 FFF7FEFF 		bl	assert_failed
 530              	.L20:
 333:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_DATA_FORMAT(I2S_InitStruct->I2S_DataFormat));
 531              		.loc 1 333 0 is_stmt 1
 532 00c8 3B68     		ldr	r3, [r7]
 533 00ca 9B88     		ldrh	r3, [r3, #4]
 534 00cc 002B     		cmp	r3, #0
 535 00ce 13D0     		beq	.L21
 536              		.loc 1 333 0 is_stmt 0 discriminator 1
 537 00d0 3B68     		ldr	r3, [r7]
 538 00d2 9B88     		ldrh	r3, [r3, #4]
 539 00d4 012B     		cmp	r3, #1
 540 00d6 0FD0     		beq	.L21
 541 00d8 3B68     		ldr	r3, [r7]
 542 00da 9B88     		ldrh	r3, [r3, #4]
 543 00dc 032B     		cmp	r3, #3
 544 00de 0BD0     		beq	.L21
 545 00e0 3B68     		ldr	r3, [r7]
 546 00e2 9B88     		ldrh	r3, [r3, #4]
 547 00e4 052B     		cmp	r3, #5
 548 00e6 07D0     		beq	.L21
 549 00e8 40F20000 		movw	r0, #:lower16:.LC0
 550 00ec C0F20000 		movt	r0, #:upper16:.LC0
 551 00f0 40F24D11 		movw	r1, #333
 552 00f4 FFF7FEFF 		bl	assert_failed
 553              	.L21:
 334:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_MCLK_OUTPUT(I2S_InitStruct->I2S_MCLKOutput));
 554              		.loc 1 334 0 is_stmt 1
 555 00f8 3B68     		ldr	r3, [r7]
 556 00fa DB88     		ldrh	r3, [r3, #6]
 557 00fc B3F5007F 		cmp	r3, #512
 558 0100 0BD0     		beq	.L22
 559              		.loc 1 334 0 is_stmt 0 discriminator 1
 560 0102 3B68     		ldr	r3, [r7]
 561 0104 DB88     		ldrh	r3, [r3, #6]
 562 0106 002B     		cmp	r3, #0
 563 0108 07D0     		beq	.L22
 564 010a 40F20000 		movw	r0, #:lower16:.LC0
 565 010e C0F20000 		movt	r0, #:upper16:.LC0
 566 0112 4FF4A771 		mov	r1, #334
 567 0116 FFF7FEFF 		bl	assert_failed
 568              	.L22:
 335:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_AUDIO_FREQ(I2S_InitStruct->I2S_AudioFreq));
 569              		.loc 1 335 0 is_stmt 1
 570 011a 3B68     		ldr	r3, [r7]
 571 011c 9B68     		ldr	r3, [r3, #8]
 572 011e B3F5FA5F 		cmp	r3, #8000
 573 0122 07D3     		bcc	.L23
 574              		.loc 1 335 0 is_stmt 0 discriminator 2
 575 0124 3B68     		ldr	r3, [r7]
 576 0126 9A68     		ldr	r2, [r3, #8]
 577 0128 4FF46E43 		mov	r3, #60928
 578 012c C0F20203 		movt	r3, 2
 579 0130 9A42     		cmp	r2, r3
 580 0132 0BD9     		bls	.L24
 581              	.L23:
 582              		.loc 1 335 0 discriminator 1
 583 0134 3B68     		ldr	r3, [r7]
 584 0136 9B68     		ldr	r3, [r3, #8]
 585 0138 022B     		cmp	r3, #2
 586 013a 07D0     		beq	.L24
 587 013c 40F20000 		movw	r0, #:lower16:.LC0
 588 0140 C0F20000 		movt	r0, #:upper16:.LC0
 589 0144 40F24F11 		movw	r1, #335
 590 0148 FFF7FEFF 		bl	assert_failed
 591              	.L24:
 336:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_CPOL(I2S_InitStruct->I2S_CPOL));  
 592              		.loc 1 336 0 is_stmt 1
 593 014c 3B68     		ldr	r3, [r7]
 594 014e 9B89     		ldrh	r3, [r3, #12]
 595 0150 002B     		cmp	r3, #0
 596 0152 0BD0     		beq	.L25
 597              		.loc 1 336 0 is_stmt 0 discriminator 1
 598 0154 3B68     		ldr	r3, [r7]
 599 0156 9B89     		ldrh	r3, [r3, #12]
 600 0158 082B     		cmp	r3, #8
 601 015a 07D0     		beq	.L25
 602 015c 40F20000 		movw	r0, #:lower16:.LC0
 603 0160 C0F20000 		movt	r0, #:upper16:.LC0
 604 0164 4FF4A871 		mov	r1, #336
 605 0168 FFF7FEFF 		bl	assert_failed
 606              	.L25:
 337:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 338:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /*----------------------- SPIx I2SCFGR & I2SPR Configuration -----------------*/
 339:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Clear I2SMOD, I2SE, I2SCFG, PCMSYNC, I2SSTD, CKPOL, DATLEN and CHLEN bits */
 340:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->I2SCFGR &= I2SCFGR_CLEAR_MASK; 
 607              		.loc 1 340 0 is_stmt 1
 608 016c 7B68     		ldr	r3, [r7, #4]
 609 016e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 610 0170 9BB2     		uxth	r3, r3
 611 0172 23F47B63 		bic	r3, r3, #4016
 612 0176 23F00F03 		bic	r3, r3, #15
 613 017a 9AB2     		uxth	r2, r3
 614 017c 7B68     		ldr	r3, [r7, #4]
 615 017e 9A83     		strh	r2, [r3, #28]	@ movhi
 341:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->I2SPR = 0x0002;
 616              		.loc 1 341 0
 617 0180 7B68     		ldr	r3, [r7, #4]
 618 0182 0222     		movs	r2, #2
 619 0184 1A84     		strh	r2, [r3, #32]	@ movhi
 342:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 343:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Get the I2SCFGR register value */
 344:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   tmpreg = SPIx->I2SCFGR;
 620              		.loc 1 344 0
 621 0186 7B68     		ldr	r3, [r7, #4]
 622 0188 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 623 018a 7B83     		strh	r3, [r7, #26]	@ movhi
 345:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 346:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* If the default value has to be written, reinitialize i2sdiv and i2sodd*/
 347:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if(I2S_InitStruct->I2S_AudioFreq == I2S_AudioFreq_Default)
 624              		.loc 1 347 0
 625 018c 3B68     		ldr	r3, [r7]
 626 018e 9B68     		ldr	r3, [r3, #8]
 627 0190 022B     		cmp	r3, #2
 628 0192 04D1     		bne	.L26
 348:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 349:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     i2sodd = (uint16_t)0;
 629              		.loc 1 349 0
 630 0194 0023     		movs	r3, #0
 631 0196 BB84     		strh	r3, [r7, #36]	@ movhi
 350:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     i2sdiv = (uint16_t)2;   
 632              		.loc 1 350 0
 633 0198 0223     		movs	r3, #2
 634 019a FB84     		strh	r3, [r7, #38]	@ movhi
 635 019c 89E0     		b	.L27
 636              	.L26:
 351:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 352:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* If the requested audio frequency is not the default, compute the prescaler */
 353:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
 354:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 355:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Check the frame length (For the Prescaler computing) *******************/
 356:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     if(I2S_InitStruct->I2S_DataFormat == I2S_DataFormat_16b)
 637              		.loc 1 356 0
 638 019e 3B68     		ldr	r3, [r7]
 639 01a0 9B88     		ldrh	r3, [r3, #4]
 640 01a2 002B     		cmp	r3, #0
 641 01a4 02D1     		bne	.L28
 357:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     {
 358:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       /* Packet length is 16 bits */
 359:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       packetlength = 1;
 642              		.loc 1 359 0
 643 01a6 0123     		movs	r3, #1
 644 01a8 7B84     		strh	r3, [r7, #34]	@ movhi
 645 01aa 01E0     		b	.L29
 646              	.L28:
 360:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     }
 361:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     else
 362:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     {
 363:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       /* Packet length is 32 bits */
 364:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       packetlength = 2;
 647              		.loc 1 364 0
 648 01ac 0223     		movs	r3, #2
 649 01ae 7B84     		strh	r3, [r7, #34]	@ movhi
 650              	.L29:
 365:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     }
 366:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 367:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Get I2S source Clock frequency  ****************************************/
 368:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       
 369:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* If an external I2S clock has to be used, this define should be set  
 370:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        in the project configuration or in the stm32f4xx_conf.h file */
 371:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   #ifdef I2S_EXTERNAL_CLOCK_VAL     
 372:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Set external clock as I2S clock source */
 373:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     if ((RCC->CFGR & RCC_CFGR_I2SSRC) == 0)
 374:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     {
 375:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       RCC->CFGR |= (uint32_t)RCC_CFGR_I2SSRC;
 376:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     }
 377:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     
 378:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Set the I2S clock to the external clock  value */
 379:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     i2sclk = I2S_EXTERNAL_CLOCK_VAL;
 380:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 381:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   #else /* There is no define for External I2S clock source */
 382:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Set PLLI2S as I2S clock source */
 383:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     if ((RCC->CFGR & RCC_CFGR_I2SSRC) != 0)
 651              		.loc 1 383 0
 652 01b0 4FF46053 		mov	r3, #14336
 653 01b4 C4F20203 		movt	r3, 16386
 654 01b8 9B68     		ldr	r3, [r3, #8]
 655 01ba 03F40003 		and	r3, r3, #8388608
 656 01be 002B     		cmp	r3, #0
 657 01c0 0BD0     		beq	.L30
 384:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     {
 385:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       RCC->CFGR &= ~(uint32_t)RCC_CFGR_I2SSRC;
 658              		.loc 1 385 0
 659 01c2 4FF46053 		mov	r3, #14336
 660 01c6 C4F20203 		movt	r3, 16386
 661 01ca 4FF46052 		mov	r2, #14336
 662 01ce C4F20202 		movt	r2, 16386
 663 01d2 9268     		ldr	r2, [r2, #8]
 664 01d4 22F40002 		bic	r2, r2, #8388608
 665 01d8 9A60     		str	r2, [r3, #8]
 666              	.L30:
 386:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     }    
 387:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     
 388:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Get the PLLI2SN value */
 389:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     plln = (uint32_t)(((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SN) >> 6) & \
 667              		.loc 1 389 0
 668 01da 4FF46053 		mov	r3, #14336
 669 01de C4F20203 		movt	r3, 16386
 670 01e2 D3F88420 		ldr	r2, [r3, #132]
 671 01e6 47F6C073 		movw	r3, #32704
 672 01ea 1340     		ands	r3, r3, r2
 673 01ec 9B09     		lsrs	r3, r3, #6
 674 01ee C3F30803 		ubfx	r3, r3, #0, #9
 675 01f2 FB60     		str	r3, [r7, #12]
 390:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                       (RCC_PLLI2SCFGR_PLLI2SN >> 6));
 391:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     
 392:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Get the PLLI2SR value */
 393:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     pllr = (uint32_t)(((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> 28) & \
 676              		.loc 1 393 0
 677 01f4 4FF46053 		mov	r3, #14336
 678 01f8 C4F20203 		movt	r3, 16386
 679 01fc D3F88430 		ldr	r3, [r3, #132]
 680 0200 03F0E043 		and	r3, r3, #1879048192
 681 0204 1B0F     		lsrs	r3, r3, #28
 682 0206 03F00703 		and	r3, r3, #7
 683 020a BB60     		str	r3, [r7, #8]
 394:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                       (RCC_PLLI2SCFGR_PLLI2SR >> 28));
 395:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     
 396:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Get the PLLM value */
 397:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     pllm = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM);      
 684              		.loc 1 397 0
 685 020c 4FF46053 		mov	r3, #14336
 686 0210 C4F20203 		movt	r3, 16386
 687 0214 5B68     		ldr	r3, [r3, #4]
 688 0216 03F03F03 		and	r3, r3, #63
 689 021a 3B61     		str	r3, [r7, #16]
 398:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     
 399:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Get the I2S source clock value */
 400:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     i2sclk = (uint32_t)(((HSE_VALUE / pllm) * plln) / pllr);
 690              		.loc 1 400 0
 691 021c 47F64003 		movw	r3, #30784
 692 0220 C0F27D13 		movt	r3, 381
 693 0224 3A69     		ldr	r2, [r7, #16]
 694 0226 B3FBF2F3 		udiv	r3, r3, r2
 695 022a FA68     		ldr	r2, [r7, #12]
 696 022c 02FB03F2 		mul	r2, r2, r3
 697 0230 BB68     		ldr	r3, [r7, #8]
 698 0232 B2FBF3F3 		udiv	r3, r2, r3
 699 0236 7B61     		str	r3, [r7, #20]
 401:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   #endif /* I2S_EXTERNAL_CLOCK_VAL */
 402:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     
 403:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Compute the Real divider depending on the MCLK output state, with a floating point */
 404:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     if(I2S_InitStruct->I2S_MCLKOutput == I2S_MCLKOutput_Enable)
 700              		.loc 1 404 0
 701 0238 3B68     		ldr	r3, [r7]
 702 023a DB88     		ldrh	r3, [r3, #6]
 703 023c B3F5007F 		cmp	r3, #512
 704 0240 0FD1     		bne	.L31
 405:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     {
 406:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       /* MCLK output is enabled */
 407:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       tmp = (uint16_t)(((((i2sclk / 256) * 10) / I2S_InitStruct->I2S_AudioFreq)) + 5);
 705              		.loc 1 407 0
 706 0242 7B69     		ldr	r3, [r7, #20]
 707 0244 1A0A     		lsrs	r2, r3, #8
 708 0246 1346     		mov	r3, r2
 709 0248 9B00     		lsls	r3, r3, #2
 710 024a 1344     		add	r3, r3, r2
 711 024c 5B00     		lsls	r3, r3, #1
 712 024e 1A46     		mov	r2, r3
 713 0250 3B68     		ldr	r3, [r7]
 714 0252 9B68     		ldr	r3, [r3, #8]
 715 0254 B2FBF3F3 		udiv	r3, r2, r3
 716 0258 9BB2     		uxth	r3, r3
 717 025a 0533     		adds	r3, r3, #5
 718 025c 9BB2     		uxth	r3, r3
 719 025e FB61     		str	r3, [r7, #28]
 720 0260 11E0     		b	.L32
 721              	.L31:
 408:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     }
 409:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     else
 410:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     {
 411:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       /* MCLK output is disabled */
 412:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       tmp = (uint16_t)(((((i2sclk / (32 * packetlength)) *10 ) / I2S_InitStruct->I2S_AudioFreq)) + 
 722              		.loc 1 412 0
 723 0262 7B8C     		ldrh	r3, [r7, #34]
 724 0264 5B01     		lsls	r3, r3, #5
 725 0266 7A69     		ldr	r2, [r7, #20]
 726 0268 B2FBF3F2 		udiv	r2, r2, r3
 727 026c 1346     		mov	r3, r2
 728 026e 9B00     		lsls	r3, r3, #2
 729 0270 1344     		add	r3, r3, r2
 730 0272 5B00     		lsls	r3, r3, #1
 731 0274 1A46     		mov	r2, r3
 732 0276 3B68     		ldr	r3, [r7]
 733 0278 9B68     		ldr	r3, [r3, #8]
 734 027a B2FBF3F3 		udiv	r3, r2, r3
 735 027e 9BB2     		uxth	r3, r3
 736 0280 0533     		adds	r3, r3, #5
 737 0282 9BB2     		uxth	r3, r3
 738 0284 FB61     		str	r3, [r7, #28]
 739              	.L32:
 413:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     }
 414:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     
 415:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Remove the flatting point */
 416:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     tmp = tmp / 10;  
 740              		.loc 1 416 0
 741 0286 FA69     		ldr	r2, [r7, #28]
 742 0288 4CF6CD43 		movw	r3, #52429
 743 028c CCF6CC43 		movt	r3, 52428
 744 0290 A3FB0213 		umull	r1, r3, r3, r2
 745 0294 DB08     		lsrs	r3, r3, #3
 746 0296 FB61     		str	r3, [r7, #28]
 417:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       
 418:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Check the parity of the divider */
 419:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     i2sodd = (uint16_t)(tmp & (uint16_t)0x0001);
 747              		.loc 1 419 0
 748 0298 FB69     		ldr	r3, [r7, #28]
 749 029a 9BB2     		uxth	r3, r3
 750 029c 03F00103 		and	r3, r3, #1
 751 02a0 BB84     		strh	r3, [r7, #36]	@ movhi
 420:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    
 421:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Compute the i2sdiv prescaler */
 422:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     i2sdiv = (uint16_t)((tmp - i2sodd) / 2);
 752              		.loc 1 422 0
 753 02a2 BB8C     		ldrh	r3, [r7, #36]
 754 02a4 FA69     		ldr	r2, [r7, #28]
 755 02a6 D31A     		subs	r3, r2, r3
 756 02a8 5B08     		lsrs	r3, r3, #1
 757 02aa FB84     		strh	r3, [r7, #38]	@ movhi
 423:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    
 424:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Get the Mask for the Odd bit (SPI_I2SPR[8]) register */
 425:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     i2sodd = (uint16_t) (i2sodd << 8);
 758              		.loc 1 425 0
 759 02ac BB8C     		ldrh	r3, [r7, #36]	@ movhi
 760 02ae 1B02     		lsls	r3, r3, #8
 761 02b0 BB84     		strh	r3, [r7, #36]	@ movhi
 762              	.L27:
 426:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 427:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 428:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Test if the divider is 1 or 0 or greater than 0xFF */
 429:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if ((i2sdiv < 2) || (i2sdiv > 0xFF))
 763              		.loc 1 429 0
 764 02b2 FB8C     		ldrh	r3, [r7, #38]
 765 02b4 012B     		cmp	r3, #1
 766 02b6 02D9     		bls	.L33
 767              		.loc 1 429 0 is_stmt 0 discriminator 1
 768 02b8 FB8C     		ldrh	r3, [r7, #38]
 769 02ba FF2B     		cmp	r3, #255
 770 02bc 03D9     		bls	.L34
 771              	.L33:
 430:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 431:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Set the default values */
 432:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     i2sdiv = 2;
 772              		.loc 1 432 0 is_stmt 1
 773 02be 0223     		movs	r3, #2
 774 02c0 FB84     		strh	r3, [r7, #38]	@ movhi
 433:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     i2sodd = 0;
 775              		.loc 1 433 0
 776 02c2 0023     		movs	r3, #0
 777 02c4 BB84     		strh	r3, [r7, #36]	@ movhi
 778              	.L34:
 434:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 435:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 436:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Write to SPIx I2SPR register the computed value */
 437:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->I2SPR = (uint16_t)((uint16_t)i2sdiv | (uint16_t)(i2sodd | (uint16_t)I2S_InitStruct->I2S_MCL
 779              		.loc 1 437 0
 780 02c6 3B68     		ldr	r3, [r7]
 781 02c8 DA88     		ldrh	r2, [r3, #6]
 782 02ca BB8C     		ldrh	r3, [r7, #36]	@ movhi
 783 02cc 1343     		orrs	r3, r3, r2
 784 02ce 9AB2     		uxth	r2, r3
 785 02d0 FB8C     		ldrh	r3, [r7, #38]	@ movhi
 786 02d2 1343     		orrs	r3, r3, r2
 787 02d4 9AB2     		uxth	r2, r3
 788 02d6 7B68     		ldr	r3, [r7, #4]
 789 02d8 1A84     		strh	r2, [r3, #32]	@ movhi
 438:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  
 439:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Configure the I2S with the SPI_InitStruct values */
 440:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   tmpreg |= (uint16_t)((uint16_t)SPI_I2SCFGR_I2SMOD | (uint16_t)(I2S_InitStruct->I2S_Mode | \
 790              		.loc 1 440 0
 791 02da 3B68     		ldr	r3, [r7]
 792 02dc 1A88     		ldrh	r2, [r3]
 441:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 793              		.loc 1 441 0
 794 02de 3B68     		ldr	r3, [r7]
 795 02e0 5988     		ldrh	r1, [r3, #2]
 796 02e2 3B68     		ldr	r3, [r7]
 797 02e4 9888     		ldrh	r0, [r3, #4]
 442:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   (uint16_t)I2S_InitStruct->I2S_CPOL))));
 798              		.loc 1 442 0
 799 02e6 3B68     		ldr	r3, [r7]
 800 02e8 9B89     		ldrh	r3, [r3, #12]
 441:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 801              		.loc 1 441 0
 802 02ea 0343     		orrs	r3, r3, r0
 803 02ec 9BB2     		uxth	r3, r3
 804 02ee 0B43     		orrs	r3, r3, r1
 805 02f0 9BB2     		uxth	r3, r3
 440:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 806              		.loc 1 440 0
 807 02f2 1343     		orrs	r3, r3, r2
 808 02f4 9AB2     		uxth	r2, r3
 809 02f6 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 810 02f8 1343     		orrs	r3, r3, r2
 811 02fa 9BB2     		uxth	r3, r3
 812 02fc 43F40063 		orr	r3, r3, #2048
 813 0300 7B83     		strh	r3, [r7, #26]	@ movhi
 443:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  
 444:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Write to SPIx I2SCFGR */  
 445:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->I2SCFGR = tmpreg;
 814              		.loc 1 445 0
 815 0302 7B68     		ldr	r3, [r7, #4]
 816 0304 7A8B     		ldrh	r2, [r7, #26]	@ movhi
 817 0306 9A83     		strh	r2, [r3, #28]	@ movhi
 446:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 818              		.loc 1 446 0
 819 0308 2837     		adds	r7, r7, #40
 820 030a BD46     		mov	sp, r7
 821              		@ sp needed
 822 030c 80BD     		pop	{r7, pc}
 823              		.cfi_endproc
 824              	.LFE112:
 826 030e 00BF     		.section	.text.SPI_StructInit,"ax",%progbits
 827              		.align	2
 828              		.global	SPI_StructInit
 829              		.thumb
 830              		.thumb_func
 832              	SPI_StructInit:
 833              	.LFB113:
 447:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 448:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 449:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Fills each SPI_InitStruct member with its default value.
 450:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPI_InitStruct: pointer to a SPI_InitTypeDef structure which will be initialized.
 451:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 452:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 453:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_StructInit(SPI_InitTypeDef* SPI_InitStruct)
 454:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 834              		.loc 1 454 0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 8
 837              		@ frame_needed = 1, uses_anonymous_args = 0
 838              		@ link register save eliminated.
 839 0000 80B4     		push	{r7}
 840              	.LCFI9:
 841              		.cfi_def_cfa_offset 4
 842              		.cfi_offset 7, -4
 843 0002 83B0     		sub	sp, sp, #12
 844              	.LCFI10:
 845              		.cfi_def_cfa_offset 16
 846 0004 00AF     		add	r7, sp, #0
 847              	.LCFI11:
 848              		.cfi_def_cfa_register 7
 849 0006 7860     		str	r0, [r7, #4]
 455:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /*--------------- Reset SPI init structure parameters values -----------------*/
 456:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the SPI_Direction member */
 457:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_Direction = SPI_Direction_2Lines_FullDuplex;
 850              		.loc 1 457 0
 851 0008 7B68     		ldr	r3, [r7, #4]
 852 000a 0022     		movs	r2, #0
 853 000c 1A80     		strh	r2, [r3]	@ movhi
 458:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* initialize the SPI_Mode member */
 459:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_Mode = SPI_Mode_Slave;
 854              		.loc 1 459 0
 855 000e 7B68     		ldr	r3, [r7, #4]
 856 0010 0022     		movs	r2, #0
 857 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 460:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* initialize the SPI_DataSize member */
 461:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_DataSize = SPI_DataSize_8b;
 858              		.loc 1 461 0
 859 0014 7B68     		ldr	r3, [r7, #4]
 860 0016 0022     		movs	r2, #0
 861 0018 9A80     		strh	r2, [r3, #4]	@ movhi
 462:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the SPI_CPOL member */
 463:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_CPOL = SPI_CPOL_Low;
 862              		.loc 1 463 0
 863 001a 7B68     		ldr	r3, [r7, #4]
 864 001c 0022     		movs	r2, #0
 865 001e DA80     		strh	r2, [r3, #6]	@ movhi
 464:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the SPI_CPHA member */
 465:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_CPHA = SPI_CPHA_1Edge;
 866              		.loc 1 465 0
 867 0020 7B68     		ldr	r3, [r7, #4]
 868 0022 0022     		movs	r2, #0
 869 0024 1A81     		strh	r2, [r3, #8]	@ movhi
 466:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the SPI_NSS member */
 467:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_NSS = SPI_NSS_Hard;
 870              		.loc 1 467 0
 871 0026 7B68     		ldr	r3, [r7, #4]
 872 0028 0022     		movs	r2, #0
 873 002a 5A81     		strh	r2, [r3, #10]	@ movhi
 468:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the SPI_BaudRatePrescaler member */
 469:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_2;
 874              		.loc 1 469 0
 875 002c 7B68     		ldr	r3, [r7, #4]
 876 002e 0022     		movs	r2, #0
 877 0030 9A81     		strh	r2, [r3, #12]	@ movhi
 470:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the SPI_FirstBit member */
 471:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_FirstBit = SPI_FirstBit_MSB;
 878              		.loc 1 471 0
 879 0032 7B68     		ldr	r3, [r7, #4]
 880 0034 0022     		movs	r2, #0
 881 0036 DA81     		strh	r2, [r3, #14]	@ movhi
 472:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the SPI_CRCPolynomial member */
 473:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_CRCPolynomial = 7;
 882              		.loc 1 473 0
 883 0038 7B68     		ldr	r3, [r7, #4]
 884 003a 0722     		movs	r2, #7
 885 003c 1A82     		strh	r2, [r3, #16]	@ movhi
 474:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 886              		.loc 1 474 0
 887 003e 0C37     		adds	r7, r7, #12
 888 0040 BD46     		mov	sp, r7
 889              		@ sp needed
 890 0042 5DF8047B 		ldr	r7, [sp], #4
 891 0046 7047     		bx	lr
 892              		.cfi_endproc
 893              	.LFE113:
 895              		.section	.text.I2S_StructInit,"ax",%progbits
 896              		.align	2
 897              		.global	I2S_StructInit
 898              		.thumb
 899              		.thumb_func
 901              	I2S_StructInit:
 902              	.LFB114:
 475:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 476:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 477:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Fills each I2S_InitStruct member with its default value.
 478:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  I2S_InitStruct: pointer to a I2S_InitTypeDef structure which will be initialized.
 479:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 480:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 481:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void I2S_StructInit(I2S_InitTypeDef* I2S_InitStruct)
 482:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 903              		.loc 1 482 0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 8
 906              		@ frame_needed = 1, uses_anonymous_args = 0
 907              		@ link register save eliminated.
 908 0000 80B4     		push	{r7}
 909              	.LCFI12:
 910              		.cfi_def_cfa_offset 4
 911              		.cfi_offset 7, -4
 912 0002 83B0     		sub	sp, sp, #12
 913              	.LCFI13:
 914              		.cfi_def_cfa_offset 16
 915 0004 00AF     		add	r7, sp, #0
 916              	.LCFI14:
 917              		.cfi_def_cfa_register 7
 918 0006 7860     		str	r0, [r7, #4]
 483:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /*--------------- Reset I2S init structure parameters values -----------------*/
 484:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the I2S_Mode member */
 485:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_Mode = I2S_Mode_SlaveTx;
 919              		.loc 1 485 0
 920 0008 7B68     		ldr	r3, [r7, #4]
 921 000a 0022     		movs	r2, #0
 922 000c 1A80     		strh	r2, [r3]	@ movhi
 486:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 487:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the I2S_Standard member */
 488:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_Standard = I2S_Standard_Phillips;
 923              		.loc 1 488 0
 924 000e 7B68     		ldr	r3, [r7, #4]
 925 0010 0022     		movs	r2, #0
 926 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 489:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 490:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the I2S_DataFormat member */
 491:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_DataFormat = I2S_DataFormat_16b;
 927              		.loc 1 491 0
 928 0014 7B68     		ldr	r3, [r7, #4]
 929 0016 0022     		movs	r2, #0
 930 0018 9A80     		strh	r2, [r3, #4]	@ movhi
 492:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 493:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the I2S_MCLKOutput member */
 494:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_MCLKOutput = I2S_MCLKOutput_Disable;
 931              		.loc 1 494 0
 932 001a 7B68     		ldr	r3, [r7, #4]
 933 001c 0022     		movs	r2, #0
 934 001e DA80     		strh	r2, [r3, #6]	@ movhi
 495:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 496:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the I2S_AudioFreq member */
 497:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_AudioFreq = I2S_AudioFreq_Default;
 935              		.loc 1 497 0
 936 0020 7B68     		ldr	r3, [r7, #4]
 937 0022 0222     		movs	r2, #2
 938 0024 9A60     		str	r2, [r3, #8]
 498:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 499:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the I2S_CPOL member */
 500:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_CPOL = I2S_CPOL_Low;
 939              		.loc 1 500 0
 940 0026 7B68     		ldr	r3, [r7, #4]
 941 0028 0022     		movs	r2, #0
 942 002a 9A81     		strh	r2, [r3, #12]	@ movhi
 501:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 943              		.loc 1 501 0
 944 002c 0C37     		adds	r7, r7, #12
 945 002e BD46     		mov	sp, r7
 946              		@ sp needed
 947 0030 5DF8047B 		ldr	r7, [sp], #4
 948 0034 7047     		bx	lr
 949              		.cfi_endproc
 950              	.LFE114:
 952 0036 00BF     		.section	.text.SPI_Cmd,"ax",%progbits
 953              		.align	2
 954              		.global	SPI_Cmd
 955              		.thumb
 956              		.thumb_func
 958              	SPI_Cmd:
 959              	.LFB115:
 502:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 503:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 504:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Enables or disables the specified SPI peripheral.
 505:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 506:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  NewState: new state of the SPIx peripheral. 
 507:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 508:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 509:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 510:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 511:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 960              		.loc 1 511 0
 961              		.cfi_startproc
 962              		@ args = 0, pretend = 0, frame = 8
 963              		@ frame_needed = 1, uses_anonymous_args = 0
 964 0000 80B5     		push	{r7, lr}
 965              	.LCFI15:
 966              		.cfi_def_cfa_offset 8
 967              		.cfi_offset 7, -8
 968              		.cfi_offset 14, -4
 969 0002 82B0     		sub	sp, sp, #8
 970              	.LCFI16:
 971              		.cfi_def_cfa_offset 16
 972 0004 00AF     		add	r7, sp, #0
 973              	.LCFI17:
 974              		.cfi_def_cfa_register 7
 975 0006 7860     		str	r0, [r7, #4]
 976 0008 0B46     		mov	r3, r1
 977 000a FB70     		strb	r3, [r7, #3]
 512:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 513:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 978              		.loc 1 513 0
 979 000c 7A68     		ldr	r2, [r7, #4]
 980 000e 4FF44053 		mov	r3, #12288
 981 0012 C4F20103 		movt	r3, 16385
 982 0016 9A42     		cmp	r2, r3
 983 0018 15D0     		beq	.L38
 984              		.loc 1 513 0 is_stmt 0 discriminator 1
 985 001a 7A68     		ldr	r2, [r7, #4]
 986 001c 4FF46053 		mov	r3, #14336
 987 0020 C4F20003 		movt	r3, 16384
 988 0024 9A42     		cmp	r2, r3
 989 0026 0ED0     		beq	.L38
 990 0028 7A68     		ldr	r2, [r7, #4]
 991 002a 4FF47053 		mov	r3, #15360
 992 002e C4F20003 		movt	r3, 16384
 993 0032 9A42     		cmp	r2, r3
 994 0034 07D0     		beq	.L38
 995 0036 40F20000 		movw	r0, #:lower16:.LC0
 996 003a C0F20000 		movt	r0, #:upper16:.LC0
 997 003e 40F20121 		movw	r1, #513
 998 0042 FFF7FEFF 		bl	assert_failed
 999              	.L38:
 514:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1000              		.loc 1 514 0 is_stmt 1
 1001 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1002 0048 002B     		cmp	r3, #0
 1003 004a 0AD0     		beq	.L39
 1004              		.loc 1 514 0 is_stmt 0 discriminator 1
 1005 004c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1006 004e 012B     		cmp	r3, #1
 1007 0050 07D0     		beq	.L39
 1008 0052 40F20000 		movw	r0, #:lower16:.LC0
 1009 0056 C0F20000 		movt	r0, #:upper16:.LC0
 1010 005a 40F20221 		movw	r1, #514
 1011 005e FFF7FEFF 		bl	assert_failed
 1012              	.L39:
 515:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 1013              		.loc 1 515 0 is_stmt 1
 1014 0062 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1015 0064 002B     		cmp	r3, #0
 1016 0066 08D0     		beq	.L40
 516:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 517:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Enable the selected SPI peripheral */
 518:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR1 |= SPI_CR1_SPE;
 1017              		.loc 1 518 0
 1018 0068 7B68     		ldr	r3, [r7, #4]
 1019 006a 1B88     		ldrh	r3, [r3]	@ movhi
 1020 006c 9BB2     		uxth	r3, r3
 1021 006e 43F04003 		orr	r3, r3, #64
 1022 0072 9AB2     		uxth	r2, r3
 1023 0074 7B68     		ldr	r3, [r7, #4]
 1024 0076 1A80     		strh	r2, [r3]	@ movhi
 1025 0078 07E0     		b	.L37
 1026              	.L40:
 519:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 520:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
 521:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 522:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Disable the selected SPI peripheral */
 523:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR1 &= (uint16_t)~((uint16_t)SPI_CR1_SPE);
 1027              		.loc 1 523 0
 1028 007a 7B68     		ldr	r3, [r7, #4]
 1029 007c 1B88     		ldrh	r3, [r3]	@ movhi
 1030 007e 9BB2     		uxth	r3, r3
 1031 0080 23F04003 		bic	r3, r3, #64
 1032 0084 9AB2     		uxth	r2, r3
 1033 0086 7B68     		ldr	r3, [r7, #4]
 1034 0088 1A80     		strh	r2, [r3]	@ movhi
 1035              	.L37:
 524:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 525:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 1036              		.loc 1 525 0
 1037 008a 0837     		adds	r7, r7, #8
 1038 008c BD46     		mov	sp, r7
 1039              		@ sp needed
 1040 008e 80BD     		pop	{r7, pc}
 1041              		.cfi_endproc
 1042              	.LFE115:
 1044              		.section	.text.I2S_Cmd,"ax",%progbits
 1045              		.align	2
 1046              		.global	I2S_Cmd
 1047              		.thumb
 1048              		.thumb_func
 1050              	I2S_Cmd:
 1051              	.LFB116:
 526:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 527:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 528:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Enables or disables the specified SPI peripheral (in I2S mode).
 529:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 2 or 3 to select the SPI peripheral (or I2Sxext 
 530:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         for full duplex mode).
 531:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  NewState: new state of the SPIx peripheral. 
 532:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         This parameter can be: ENABLE or DISABLE.
 533:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 534:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 535:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void I2S_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 536:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 1052              		.loc 1 536 0
 1053              		.cfi_startproc
 1054              		@ args = 0, pretend = 0, frame = 8
 1055              		@ frame_needed = 1, uses_anonymous_args = 0
 1056 0000 80B5     		push	{r7, lr}
 1057              	.LCFI18:
 1058              		.cfi_def_cfa_offset 8
 1059              		.cfi_offset 7, -8
 1060              		.cfi_offset 14, -4
 1061 0002 82B0     		sub	sp, sp, #8
 1062              	.LCFI19:
 1063              		.cfi_def_cfa_offset 16
 1064 0004 00AF     		add	r7, sp, #0
 1065              	.LCFI20:
 1066              		.cfi_def_cfa_register 7
 1067 0006 7860     		str	r0, [r7, #4]
 1068 0008 0B46     		mov	r3, r1
 1069 000a FB70     		strb	r3, [r7, #3]
 537:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 538:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_23_PERIPH_EXT(SPIx));
 1070              		.loc 1 538 0
 1071 000c 7A68     		ldr	r2, [r7, #4]
 1072 000e 4FF46053 		mov	r3, #14336
 1073 0012 C4F20003 		movt	r3, 16384
 1074 0016 9A42     		cmp	r2, r3
 1075 0018 19D0     		beq	.L43
 1076              		.loc 1 538 0 is_stmt 0 discriminator 1
 1077 001a 7A68     		ldr	r2, [r7, #4]
 1078 001c 4FF47053 		mov	r3, #15360
 1079 0020 C4F20003 		movt	r3, 16384
 1080 0024 9A42     		cmp	r2, r3
 1081 0026 12D0     		beq	.L43
 1082 0028 7A68     		ldr	r2, [r7, #4]
 1083 002a 4FF45053 		mov	r3, #13312
 1084 002e C4F20003 		movt	r3, 16384
 1085 0032 9A42     		cmp	r2, r3
 1086 0034 0BD0     		beq	.L43
 1087 0036 7B68     		ldr	r3, [r7, #4]
 1088 0038 B3F1402F 		cmp	r3, #1073758208
 1089 003c 07D0     		beq	.L43
 1090 003e 40F20000 		movw	r0, #:lower16:.LC0
 1091 0042 C0F20000 		movt	r0, #:upper16:.LC0
 1092 0046 40F21A21 		movw	r1, #538
 1093 004a FFF7FEFF 		bl	assert_failed
 1094              	.L43:
 539:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1095              		.loc 1 539 0 is_stmt 1
 1096 004e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1097 0050 002B     		cmp	r3, #0
 1098 0052 0AD0     		beq	.L44
 1099              		.loc 1 539 0 is_stmt 0 discriminator 1
 1100 0054 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1101 0056 012B     		cmp	r3, #1
 1102 0058 07D0     		beq	.L44
 1103 005a 40F20000 		movw	r0, #:lower16:.LC0
 1104 005e C0F20000 		movt	r0, #:upper16:.LC0
 1105 0062 40F21B21 		movw	r1, #539
 1106 0066 FFF7FEFF 		bl	assert_failed
 1107              	.L44:
 540:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 541:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 1108              		.loc 1 541 0 is_stmt 1
 1109 006a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1110 006c 002B     		cmp	r3, #0
 1111 006e 08D0     		beq	.L45
 542:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 543:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Enable the selected SPI peripheral (in I2S mode) */
 544:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->I2SCFGR |= SPI_I2SCFGR_I2SE;
 1112              		.loc 1 544 0
 1113 0070 7B68     		ldr	r3, [r7, #4]
 1114 0072 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1115 0074 9BB2     		uxth	r3, r3
 1116 0076 43F48063 		orr	r3, r3, #1024
 1117 007a 9AB2     		uxth	r2, r3
 1118 007c 7B68     		ldr	r3, [r7, #4]
 1119 007e 9A83     		strh	r2, [r3, #28]	@ movhi
 1120 0080 07E0     		b	.L42
 1121              	.L45:
 545:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 546:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
 547:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 548:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Disable the selected SPI peripheral in I2S mode */
 549:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->I2SCFGR &= (uint16_t)~((uint16_t)SPI_I2SCFGR_I2SE);
 1122              		.loc 1 549 0
 1123 0082 7B68     		ldr	r3, [r7, #4]
 1124 0084 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1125 0086 9BB2     		uxth	r3, r3
 1126 0088 23F48063 		bic	r3, r3, #1024
 1127 008c 9AB2     		uxth	r2, r3
 1128 008e 7B68     		ldr	r3, [r7, #4]
 1129 0090 9A83     		strh	r2, [r3, #28]	@ movhi
 1130              	.L42:
 550:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 551:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 1131              		.loc 1 551 0
 1132 0092 0837     		adds	r7, r7, #8
 1133 0094 BD46     		mov	sp, r7
 1134              		@ sp needed
 1135 0096 80BD     		pop	{r7, pc}
 1136              		.cfi_endproc
 1137              	.LFE116:
 1139              		.section	.text.SPI_DataSizeConfig,"ax",%progbits
 1140              		.align	2
 1141              		.global	SPI_DataSizeConfig
 1142              		.thumb
 1143              		.thumb_func
 1145              	SPI_DataSizeConfig:
 1146              	.LFB117:
 552:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 553:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 554:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Configures the data size for the selected SPI.
 555:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 556:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPI_DataSize: specifies the SPI data size.
 557:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
 558:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_DataSize_16b: Set data frame format to 16bit
 559:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_DataSize_8b: Set data frame format to 8bit
 560:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 561:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 562:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_DataSizeConfig(SPI_TypeDef* SPIx, uint16_t SPI_DataSize)
 563:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 1147              		.loc 1 563 0
 1148              		.cfi_startproc
 1149              		@ args = 0, pretend = 0, frame = 8
 1150              		@ frame_needed = 1, uses_anonymous_args = 0
 1151 0000 80B5     		push	{r7, lr}
 1152              	.LCFI21:
 1153              		.cfi_def_cfa_offset 8
 1154              		.cfi_offset 7, -8
 1155              		.cfi_offset 14, -4
 1156 0002 82B0     		sub	sp, sp, #8
 1157              	.LCFI22:
 1158              		.cfi_def_cfa_offset 16
 1159 0004 00AF     		add	r7, sp, #0
 1160              	.LCFI23:
 1161              		.cfi_def_cfa_register 7
 1162 0006 7860     		str	r0, [r7, #4]
 1163 0008 0B46     		mov	r3, r1
 1164 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 564:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 565:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 1165              		.loc 1 565 0
 1166 000c 7A68     		ldr	r2, [r7, #4]
 1167 000e 4FF44053 		mov	r3, #12288
 1168 0012 C4F20103 		movt	r3, 16385
 1169 0016 9A42     		cmp	r2, r3
 1170 0018 15D0     		beq	.L48
 1171              		.loc 1 565 0 is_stmt 0 discriminator 1
 1172 001a 7A68     		ldr	r2, [r7, #4]
 1173 001c 4FF46053 		mov	r3, #14336
 1174 0020 C4F20003 		movt	r3, 16384
 1175 0024 9A42     		cmp	r2, r3
 1176 0026 0ED0     		beq	.L48
 1177 0028 7A68     		ldr	r2, [r7, #4]
 1178 002a 4FF47053 		mov	r3, #15360
 1179 002e C4F20003 		movt	r3, 16384
 1180 0032 9A42     		cmp	r2, r3
 1181 0034 07D0     		beq	.L48
 1182 0036 40F20000 		movw	r0, #:lower16:.LC0
 1183 003a C0F20000 		movt	r0, #:upper16:.LC0
 1184 003e 40F23521 		movw	r1, #565
 1185 0042 FFF7FEFF 		bl	assert_failed
 1186              	.L48:
 566:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_DATASIZE(SPI_DataSize));
 1187              		.loc 1 566 0 is_stmt 1
 1188 0046 7B88     		ldrh	r3, [r7, #2]
 1189 0048 B3F5006F 		cmp	r3, #2048
 1190 004c 0AD0     		beq	.L49
 1191              		.loc 1 566 0 is_stmt 0 discriminator 1
 1192 004e 7B88     		ldrh	r3, [r7, #2]
 1193 0050 002B     		cmp	r3, #0
 1194 0052 07D0     		beq	.L49
 1195 0054 40F20000 		movw	r0, #:lower16:.LC0
 1196 0058 C0F20000 		movt	r0, #:upper16:.LC0
 1197 005c 40F23621 		movw	r1, #566
 1198 0060 FFF7FEFF 		bl	assert_failed
 1199              	.L49:
 567:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Clear DFF bit */
 568:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->CR1 &= (uint16_t)~SPI_DataSize_16b;
 1200              		.loc 1 568 0 is_stmt 1
 1201 0064 7B68     		ldr	r3, [r7, #4]
 1202 0066 1B88     		ldrh	r3, [r3]	@ movhi
 1203 0068 9BB2     		uxth	r3, r3
 1204 006a 23F40063 		bic	r3, r3, #2048
 1205 006e 9AB2     		uxth	r2, r3
 1206 0070 7B68     		ldr	r3, [r7, #4]
 1207 0072 1A80     		strh	r2, [r3]	@ movhi
 569:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Set new DFF bit value */
 570:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->CR1 |= SPI_DataSize;
 1208              		.loc 1 570 0
 1209 0074 7B68     		ldr	r3, [r7, #4]
 1210 0076 1B88     		ldrh	r3, [r3]	@ movhi
 1211 0078 9AB2     		uxth	r2, r3
 1212 007a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1213 007c 1343     		orrs	r3, r3, r2
 1214 007e 9AB2     		uxth	r2, r3
 1215 0080 7B68     		ldr	r3, [r7, #4]
 1216 0082 1A80     		strh	r2, [r3]	@ movhi
 571:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 1217              		.loc 1 571 0
 1218 0084 0837     		adds	r7, r7, #8
 1219 0086 BD46     		mov	sp, r7
 1220              		@ sp needed
 1221 0088 80BD     		pop	{r7, pc}
 1222              		.cfi_endproc
 1223              	.LFE117:
 1225 008a 00BF     		.section	.text.SPI_BiDirectionalLineConfig,"ax",%progbits
 1226              		.align	2
 1227              		.global	SPI_BiDirectionalLineConfig
 1228              		.thumb
 1229              		.thumb_func
 1231              	SPI_BiDirectionalLineConfig:
 1232              	.LFB118:
 572:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 573:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 574:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Selects the data transfer direction in bidirectional mode for the specified SPI.
 575:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 576:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPI_Direction: specifies the data transfer direction in bidirectional mode. 
 577:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
 578:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_Direction_Tx: Selects Tx transmission direction
 579:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_Direction_Rx: Selects Rx receive direction
 580:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 581:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 582:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_BiDirectionalLineConfig(SPI_TypeDef* SPIx, uint16_t SPI_Direction)
 583:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 1233              		.loc 1 583 0
 1234              		.cfi_startproc
 1235              		@ args = 0, pretend = 0, frame = 8
 1236              		@ frame_needed = 1, uses_anonymous_args = 0
 1237 0000 80B5     		push	{r7, lr}
 1238              	.LCFI24:
 1239              		.cfi_def_cfa_offset 8
 1240              		.cfi_offset 7, -8
 1241              		.cfi_offset 14, -4
 1242 0002 82B0     		sub	sp, sp, #8
 1243              	.LCFI25:
 1244              		.cfi_def_cfa_offset 16
 1245 0004 00AF     		add	r7, sp, #0
 1246              	.LCFI26:
 1247              		.cfi_def_cfa_register 7
 1248 0006 7860     		str	r0, [r7, #4]
 1249 0008 0B46     		mov	r3, r1
 1250 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 584:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 585:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 1251              		.loc 1 585 0
 1252 000c 7A68     		ldr	r2, [r7, #4]
 1253 000e 4FF44053 		mov	r3, #12288
 1254 0012 C4F20103 		movt	r3, 16385
 1255 0016 9A42     		cmp	r2, r3
 1256 0018 15D0     		beq	.L51
 1257              		.loc 1 585 0 is_stmt 0 discriminator 1
 1258 001a 7A68     		ldr	r2, [r7, #4]
 1259 001c 4FF46053 		mov	r3, #14336
 1260 0020 C4F20003 		movt	r3, 16384
 1261 0024 9A42     		cmp	r2, r3
 1262 0026 0ED0     		beq	.L51
 1263 0028 7A68     		ldr	r2, [r7, #4]
 1264 002a 4FF47053 		mov	r3, #15360
 1265 002e C4F20003 		movt	r3, 16384
 1266 0032 9A42     		cmp	r2, r3
 1267 0034 07D0     		beq	.L51
 1268 0036 40F20000 		movw	r0, #:lower16:.LC0
 1269 003a C0F20000 		movt	r0, #:upper16:.LC0
 1270 003e 40F24921 		movw	r1, #585
 1271 0042 FFF7FEFF 		bl	assert_failed
 1272              	.L51:
 586:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_DIRECTION(SPI_Direction));
 1273              		.loc 1 586 0 is_stmt 1
 1274 0046 7A88     		ldrh	r2, [r7, #2]
 1275 0048 4BF6FF73 		movw	r3, #49151
 1276 004c 9A42     		cmp	r2, r3
 1277 004e 0BD0     		beq	.L52
 1278              		.loc 1 586 0 is_stmt 0 discriminator 1
 1279 0050 7B88     		ldrh	r3, [r7, #2]
 1280 0052 B3F5804F 		cmp	r3, #16384
 1281 0056 07D0     		beq	.L52
 1282 0058 40F20000 		movw	r0, #:lower16:.LC0
 1283 005c C0F20000 		movt	r0, #:upper16:.LC0
 1284 0060 40F24A21 		movw	r1, #586
 1285 0064 FFF7FEFF 		bl	assert_failed
 1286              	.L52:
 587:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (SPI_Direction == SPI_Direction_Tx)
 1287              		.loc 1 587 0 is_stmt 1
 1288 0068 7B88     		ldrh	r3, [r7, #2]
 1289 006a B3F5804F 		cmp	r3, #16384
 1290 006e 08D1     		bne	.L53
 588:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 589:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Set the Tx only mode */
 590:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR1 |= SPI_Direction_Tx;
 1291              		.loc 1 590 0
 1292 0070 7B68     		ldr	r3, [r7, #4]
 1293 0072 1B88     		ldrh	r3, [r3]	@ movhi
 1294 0074 9BB2     		uxth	r3, r3
 1295 0076 43F48043 		orr	r3, r3, #16384
 1296 007a 9AB2     		uxth	r2, r3
 1297 007c 7B68     		ldr	r3, [r7, #4]
 1298 007e 1A80     		strh	r2, [r3]	@ movhi
 1299 0080 07E0     		b	.L50
 1300              	.L53:
 591:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 592:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
 593:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 594:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Set the Rx only mode */
 595:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR1 &= SPI_Direction_Rx;
 1301              		.loc 1 595 0
 1302 0082 7B68     		ldr	r3, [r7, #4]
 1303 0084 1B88     		ldrh	r3, [r3]	@ movhi
 1304 0086 9BB2     		uxth	r3, r3
 1305 0088 23F48043 		bic	r3, r3, #16384
 1306 008c 9AB2     		uxth	r2, r3
 1307 008e 7B68     		ldr	r3, [r7, #4]
 1308 0090 1A80     		strh	r2, [r3]	@ movhi
 1309              	.L50:
 596:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 597:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 1310              		.loc 1 597 0
 1311 0092 0837     		adds	r7, r7, #8
 1312 0094 BD46     		mov	sp, r7
 1313              		@ sp needed
 1314 0096 80BD     		pop	{r7, pc}
 1315              		.cfi_endproc
 1316              	.LFE118:
 1318              		.section	.text.SPI_NSSInternalSoftwareConfig,"ax",%progbits
 1319              		.align	2
 1320              		.global	SPI_NSSInternalSoftwareConfig
 1321              		.thumb
 1322              		.thumb_func
 1324              	SPI_NSSInternalSoftwareConfig:
 1325              	.LFB119:
 598:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 599:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 600:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Configures internally by software the NSS pin for the selected SPI.
 601:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 602:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPI_NSSInternalSoft: specifies the SPI NSS internal state.
 603:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
 604:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_NSSInternalSoft_Set: Set NSS pin internally
 605:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_NSSInternalSoft_Reset: Reset NSS pin internally
 606:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 607:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 608:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_NSSInternalSoftwareConfig(SPI_TypeDef* SPIx, uint16_t SPI_NSSInternalSoft)
 609:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 1326              		.loc 1 609 0
 1327              		.cfi_startproc
 1328              		@ args = 0, pretend = 0, frame = 8
 1329              		@ frame_needed = 1, uses_anonymous_args = 0
 1330 0000 80B5     		push	{r7, lr}
 1331              	.LCFI27:
 1332              		.cfi_def_cfa_offset 8
 1333              		.cfi_offset 7, -8
 1334              		.cfi_offset 14, -4
 1335 0002 82B0     		sub	sp, sp, #8
 1336              	.LCFI28:
 1337              		.cfi_def_cfa_offset 16
 1338 0004 00AF     		add	r7, sp, #0
 1339              	.LCFI29:
 1340              		.cfi_def_cfa_register 7
 1341 0006 7860     		str	r0, [r7, #4]
 1342 0008 0B46     		mov	r3, r1
 1343 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 610:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 611:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 1344              		.loc 1 611 0
 1345 000c 7A68     		ldr	r2, [r7, #4]
 1346 000e 4FF44053 		mov	r3, #12288
 1347 0012 C4F20103 		movt	r3, 16385
 1348 0016 9A42     		cmp	r2, r3
 1349 0018 15D0     		beq	.L56
 1350              		.loc 1 611 0 is_stmt 0 discriminator 1
 1351 001a 7A68     		ldr	r2, [r7, #4]
 1352 001c 4FF46053 		mov	r3, #14336
 1353 0020 C4F20003 		movt	r3, 16384
 1354 0024 9A42     		cmp	r2, r3
 1355 0026 0ED0     		beq	.L56
 1356 0028 7A68     		ldr	r2, [r7, #4]
 1357 002a 4FF47053 		mov	r3, #15360
 1358 002e C4F20003 		movt	r3, 16384
 1359 0032 9A42     		cmp	r2, r3
 1360 0034 07D0     		beq	.L56
 1361 0036 40F20000 		movw	r0, #:lower16:.LC0
 1362 003a C0F20000 		movt	r0, #:upper16:.LC0
 1363 003e 40F26321 		movw	r1, #611
 1364 0042 FFF7FEFF 		bl	assert_failed
 1365              	.L56:
 612:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_NSS_INTERNAL(SPI_NSSInternalSoft));
 1366              		.loc 1 612 0 is_stmt 1
 1367 0046 7B88     		ldrh	r3, [r7, #2]
 1368 0048 B3F5807F 		cmp	r3, #256
 1369 004c 0CD0     		beq	.L57
 1370              		.loc 1 612 0 is_stmt 0 discriminator 1
 1371 004e 7A88     		ldrh	r2, [r7, #2]
 1372 0050 4FF6FF63 		movw	r3, #65279
 1373 0054 9A42     		cmp	r2, r3
 1374 0056 07D0     		beq	.L57
 1375 0058 40F20000 		movw	r0, #:lower16:.LC0
 1376 005c C0F20000 		movt	r0, #:upper16:.LC0
 1377 0060 4FF41971 		mov	r1, #612
 1378 0064 FFF7FEFF 		bl	assert_failed
 1379              	.L57:
 613:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (SPI_NSSInternalSoft != SPI_NSSInternalSoft_Reset)
 1380              		.loc 1 613 0 is_stmt 1
 1381 0068 7A88     		ldrh	r2, [r7, #2]
 1382 006a 4FF6FF63 		movw	r3, #65279
 1383 006e 9A42     		cmp	r2, r3
 1384 0070 08D0     		beq	.L58
 614:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 615:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Set NSS pin internally by software */
 616:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR1 |= SPI_NSSInternalSoft_Set;
 1385              		.loc 1 616 0
 1386 0072 7B68     		ldr	r3, [r7, #4]
 1387 0074 1B88     		ldrh	r3, [r3]	@ movhi
 1388 0076 9BB2     		uxth	r3, r3
 1389 0078 43F48073 		orr	r3, r3, #256
 1390 007c 9AB2     		uxth	r2, r3
 1391 007e 7B68     		ldr	r3, [r7, #4]
 1392 0080 1A80     		strh	r2, [r3]	@ movhi
 1393 0082 07E0     		b	.L55
 1394              	.L58:
 617:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 618:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
 619:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 620:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Reset NSS pin internally by software */
 621:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR1 &= SPI_NSSInternalSoft_Reset;
 1395              		.loc 1 621 0
 1396 0084 7B68     		ldr	r3, [r7, #4]
 1397 0086 1B88     		ldrh	r3, [r3]	@ movhi
 1398 0088 9BB2     		uxth	r3, r3
 1399 008a 23F48073 		bic	r3, r3, #256
 1400 008e 9AB2     		uxth	r2, r3
 1401 0090 7B68     		ldr	r3, [r7, #4]
 1402 0092 1A80     		strh	r2, [r3]	@ movhi
 1403              	.L55:
 622:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 623:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 1404              		.loc 1 623 0
 1405 0094 0837     		adds	r7, r7, #8
 1406 0096 BD46     		mov	sp, r7
 1407              		@ sp needed
 1408 0098 80BD     		pop	{r7, pc}
 1409              		.cfi_endproc
 1410              	.LFE119:
 1412 009a 00BF     		.section	.text.SPI_SSOutputCmd,"ax",%progbits
 1413              		.align	2
 1414              		.global	SPI_SSOutputCmd
 1415              		.thumb
 1416              		.thumb_func
 1418              	SPI_SSOutputCmd:
 1419              	.LFB120:
 624:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 625:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 626:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Enables or disables the SS output for the selected SPI.
 627:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 628:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  NewState: new state of the SPIx SS output. 
 629:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 630:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 631:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 632:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_SSOutputCmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 633:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 1420              		.loc 1 633 0
 1421              		.cfi_startproc
 1422              		@ args = 0, pretend = 0, frame = 8
 1423              		@ frame_needed = 1, uses_anonymous_args = 0
 1424 0000 80B5     		push	{r7, lr}
 1425              	.LCFI30:
 1426              		.cfi_def_cfa_offset 8
 1427              		.cfi_offset 7, -8
 1428              		.cfi_offset 14, -4
 1429 0002 82B0     		sub	sp, sp, #8
 1430              	.LCFI31:
 1431              		.cfi_def_cfa_offset 16
 1432 0004 00AF     		add	r7, sp, #0
 1433              	.LCFI32:
 1434              		.cfi_def_cfa_register 7
 1435 0006 7860     		str	r0, [r7, #4]
 1436 0008 0B46     		mov	r3, r1
 1437 000a FB70     		strb	r3, [r7, #3]
 634:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 635:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 1438              		.loc 1 635 0
 1439 000c 7A68     		ldr	r2, [r7, #4]
 1440 000e 4FF44053 		mov	r3, #12288
 1441 0012 C4F20103 		movt	r3, 16385
 1442 0016 9A42     		cmp	r2, r3
 1443 0018 15D0     		beq	.L61
 1444              		.loc 1 635 0 is_stmt 0 discriminator 1
 1445 001a 7A68     		ldr	r2, [r7, #4]
 1446 001c 4FF46053 		mov	r3, #14336
 1447 0020 C4F20003 		movt	r3, 16384
 1448 0024 9A42     		cmp	r2, r3
 1449 0026 0ED0     		beq	.L61
 1450 0028 7A68     		ldr	r2, [r7, #4]
 1451 002a 4FF47053 		mov	r3, #15360
 1452 002e C4F20003 		movt	r3, 16384
 1453 0032 9A42     		cmp	r2, r3
 1454 0034 07D0     		beq	.L61
 1455 0036 40F20000 		movw	r0, #:lower16:.LC0
 1456 003a C0F20000 		movt	r0, #:upper16:.LC0
 1457 003e 40F27B21 		movw	r1, #635
 1458 0042 FFF7FEFF 		bl	assert_failed
 1459              	.L61:
 636:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1460              		.loc 1 636 0 is_stmt 1
 1461 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1462 0048 002B     		cmp	r3, #0
 1463 004a 0AD0     		beq	.L62
 1464              		.loc 1 636 0 is_stmt 0 discriminator 1
 1465 004c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1466 004e 012B     		cmp	r3, #1
 1467 0050 07D0     		beq	.L62
 1468 0052 40F20000 		movw	r0, #:lower16:.LC0
 1469 0056 C0F20000 		movt	r0, #:upper16:.LC0
 1470 005a 4FF41F71 		mov	r1, #636
 1471 005e FFF7FEFF 		bl	assert_failed
 1472              	.L62:
 637:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 1473              		.loc 1 637 0 is_stmt 1
 1474 0062 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1475 0064 002B     		cmp	r3, #0
 1476 0066 08D0     		beq	.L63
 638:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 639:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Enable the selected SPI SS output */
 640:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR2 |= (uint16_t)SPI_CR2_SSOE;
 1477              		.loc 1 640 0
 1478 0068 7B68     		ldr	r3, [r7, #4]
 1479 006a 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1480 006c 9BB2     		uxth	r3, r3
 1481 006e 43F00403 		orr	r3, r3, #4
 1482 0072 9AB2     		uxth	r2, r3
 1483 0074 7B68     		ldr	r3, [r7, #4]
 1484 0076 9A80     		strh	r2, [r3, #4]	@ movhi
 1485 0078 07E0     		b	.L60
 1486              	.L63:
 641:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 642:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
 643:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 644:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Disable the selected SPI SS output */
 645:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR2 &= (uint16_t)~((uint16_t)SPI_CR2_SSOE);
 1487              		.loc 1 645 0
 1488 007a 7B68     		ldr	r3, [r7, #4]
 1489 007c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1490 007e 9BB2     		uxth	r3, r3
 1491 0080 23F00403 		bic	r3, r3, #4
 1492 0084 9AB2     		uxth	r2, r3
 1493 0086 7B68     		ldr	r3, [r7, #4]
 1494 0088 9A80     		strh	r2, [r3, #4]	@ movhi
 1495              	.L60:
 646:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 647:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 1496              		.loc 1 647 0
 1497 008a 0837     		adds	r7, r7, #8
 1498 008c BD46     		mov	sp, r7
 1499              		@ sp needed
 1500 008e 80BD     		pop	{r7, pc}
 1501              		.cfi_endproc
 1502              	.LFE120:
 1504              		.section	.text.SPI_TIModeCmd,"ax",%progbits
 1505              		.align	2
 1506              		.global	SPI_TIModeCmd
 1507              		.thumb
 1508              		.thumb_func
 1510              	SPI_TIModeCmd:
 1511              	.LFB121:
 648:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 649:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 650:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Enables or disables the SPIx/I2Sx DMA interface.
 651:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *   
 652:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   This function can be called only after the SPI_Init() function has 
 653:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         been called. 
 654:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   When TI mode is selected, the control bits SSM, SSI, CPOL and CPHA 
 655:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         are not taken into consideration and are configured by hardware
 656:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         respectively to the TI mode requirements.  
 657:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * 
 658:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 
 659:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  NewState: new state of the selected SPI TI communication mode.
 660:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 661:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 662:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 663:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_TIModeCmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 664:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 1512              		.loc 1 664 0
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 8
 1515              		@ frame_needed = 1, uses_anonymous_args = 0
 1516 0000 80B5     		push	{r7, lr}
 1517              	.LCFI33:
 1518              		.cfi_def_cfa_offset 8
 1519              		.cfi_offset 7, -8
 1520              		.cfi_offset 14, -4
 1521 0002 82B0     		sub	sp, sp, #8
 1522              	.LCFI34:
 1523              		.cfi_def_cfa_offset 16
 1524 0004 00AF     		add	r7, sp, #0
 1525              	.LCFI35:
 1526              		.cfi_def_cfa_register 7
 1527 0006 7860     		str	r0, [r7, #4]
 1528 0008 0B46     		mov	r3, r1
 1529 000a FB70     		strb	r3, [r7, #3]
 665:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 666:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 1530              		.loc 1 666 0
 1531 000c 7A68     		ldr	r2, [r7, #4]
 1532 000e 4FF44053 		mov	r3, #12288
 1533 0012 C4F20103 		movt	r3, 16385
 1534 0016 9A42     		cmp	r2, r3
 1535 0018 15D0     		beq	.L66
 1536              		.loc 1 666 0 is_stmt 0 discriminator 1
 1537 001a 7A68     		ldr	r2, [r7, #4]
 1538 001c 4FF46053 		mov	r3, #14336
 1539 0020 C4F20003 		movt	r3, 16384
 1540 0024 9A42     		cmp	r2, r3
 1541 0026 0ED0     		beq	.L66
 1542 0028 7A68     		ldr	r2, [r7, #4]
 1543 002a 4FF47053 		mov	r3, #15360
 1544 002e C4F20003 		movt	r3, 16384
 1545 0032 9A42     		cmp	r2, r3
 1546 0034 07D0     		beq	.L66
 1547 0036 40F20000 		movw	r0, #:lower16:.LC0
 1548 003a C0F20000 		movt	r0, #:upper16:.LC0
 1549 003e 40F29A21 		movw	r1, #666
 1550 0042 FFF7FEFF 		bl	assert_failed
 1551              	.L66:
 667:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1552              		.loc 1 667 0 is_stmt 1
 1553 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1554 0048 002B     		cmp	r3, #0
 1555 004a 0AD0     		beq	.L67
 1556              		.loc 1 667 0 is_stmt 0 discriminator 1
 1557 004c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1558 004e 012B     		cmp	r3, #1
 1559 0050 07D0     		beq	.L67
 1560 0052 40F20000 		movw	r0, #:lower16:.LC0
 1561 0056 C0F20000 		movt	r0, #:upper16:.LC0
 1562 005a 40F29B21 		movw	r1, #667
 1563 005e FFF7FEFF 		bl	assert_failed
 1564              	.L67:
 668:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 669:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 1565              		.loc 1 669 0 is_stmt 1
 1566 0062 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1567 0064 002B     		cmp	r3, #0
 1568 0066 08D0     		beq	.L68
 670:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 671:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Enable the TI mode for the selected SPI peripheral */
 672:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR2 |= SPI_CR2_FRF;
 1569              		.loc 1 672 0
 1570 0068 7B68     		ldr	r3, [r7, #4]
 1571 006a 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1572 006c 9BB2     		uxth	r3, r3
 1573 006e 43F01003 		orr	r3, r3, #16
 1574 0072 9AB2     		uxth	r2, r3
 1575 0074 7B68     		ldr	r3, [r7, #4]
 1576 0076 9A80     		strh	r2, [r3, #4]	@ movhi
 1577 0078 07E0     		b	.L65
 1578              	.L68:
 673:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 674:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
 675:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 676:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Disable the TI mode for the selected SPI peripheral */
 677:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR2 &= (uint16_t)~SPI_CR2_FRF;
 1579              		.loc 1 677 0
 1580 007a 7B68     		ldr	r3, [r7, #4]
 1581 007c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1582 007e 9BB2     		uxth	r3, r3
 1583 0080 23F01003 		bic	r3, r3, #16
 1584 0084 9AB2     		uxth	r2, r3
 1585 0086 7B68     		ldr	r3, [r7, #4]
 1586 0088 9A80     		strh	r2, [r3, #4]	@ movhi
 1587              	.L65:
 678:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 679:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 1588              		.loc 1 679 0
 1589 008a 0837     		adds	r7, r7, #8
 1590 008c BD46     		mov	sp, r7
 1591              		@ sp needed
 1592 008e 80BD     		pop	{r7, pc}
 1593              		.cfi_endproc
 1594              	.LFE121:
 1596              		.section	.text.I2S_FullDuplexConfig,"ax",%progbits
 1597              		.align	2
 1598              		.global	I2S_FullDuplexConfig
 1599              		.thumb
 1600              		.thumb_func
 1602              	I2S_FullDuplexConfig:
 1603              	.LFB122:
 680:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 681:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 682:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Configures the full duplex mode for the I2Sx peripheral using its
 683:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         extension I2Sxext according to the specified parameters in the 
 684:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         I2S_InitStruct.
 685:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  I2Sxext: where x can be  2 or 3 to select the I2S peripheral extension block.
 686:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  I2S_InitStruct: pointer to an I2S_InitTypeDef structure that
 687:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         contains the configuration information for the specified I2S peripheral
 688:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         extension.
 689:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * 
 690:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   The structure pointed by I2S_InitStruct parameter should be the same
 691:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         used for the master I2S peripheral. In this case, if the master is 
 692:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         configured as transmitter, the slave will be receiver and vice versa.
 693:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         Or you can force a different mode by modifying the field I2S_Mode to the
 694:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         value I2S_SlaveRx or I2S_SlaveTx indepedently of the master configuration.    
 695:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         
 696:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   The I2S full duplex extension can be configured in slave mode only.    
 697:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *  
 698:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 699:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 700:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void I2S_FullDuplexConfig(SPI_TypeDef* I2Sxext, I2S_InitTypeDef* I2S_InitStruct)
 701:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 1604              		.loc 1 701 0
 1605              		.cfi_startproc
 1606              		@ args = 0, pretend = 0, frame = 16
 1607              		@ frame_needed = 1, uses_anonymous_args = 0
 1608 0000 80B5     		push	{r7, lr}
 1609              	.LCFI36:
 1610              		.cfi_def_cfa_offset 8
 1611              		.cfi_offset 7, -8
 1612              		.cfi_offset 14, -4
 1613 0002 84B0     		sub	sp, sp, #16
 1614              	.LCFI37:
 1615              		.cfi_def_cfa_offset 24
 1616 0004 00AF     		add	r7, sp, #0
 1617              	.LCFI38:
 1618              		.cfi_def_cfa_register 7
 1619 0006 7860     		str	r0, [r7, #4]
 1620 0008 3960     		str	r1, [r7]
 702:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint16_t tmpreg = 0, tmp = 0;
 1621              		.loc 1 702 0
 1622 000a 0023     		movs	r3, #0
 1623 000c BB81     		strh	r3, [r7, #12]	@ movhi
 1624 000e 0023     		movs	r3, #0
 1625 0010 FB81     		strh	r3, [r7, #14]	@ movhi
 703:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 704:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the I2S parameters */
 705:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_EXT_PERIPH(I2Sxext));
 1626              		.loc 1 705 0
 1627 0012 7A68     		ldr	r2, [r7, #4]
 1628 0014 4FF45053 		mov	r3, #13312
 1629 0018 C4F20003 		movt	r3, 16384
 1630 001c 9A42     		cmp	r2, r3
 1631 001e 0BD0     		beq	.L71
 1632              		.loc 1 705 0 is_stmt 0 discriminator 1
 1633 0020 7B68     		ldr	r3, [r7, #4]
 1634 0022 B3F1402F 		cmp	r3, #1073758208
 1635 0026 07D0     		beq	.L71
 1636 0028 40F20000 		movw	r0, #:lower16:.LC0
 1637 002c C0F20000 		movt	r0, #:upper16:.LC0
 1638 0030 40F2C121 		movw	r1, #705
 1639 0034 FFF7FEFF 		bl	assert_failed
 1640              	.L71:
 706:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_MODE(I2S_InitStruct->I2S_Mode));
 1641              		.loc 1 706 0 is_stmt 1
 1642 0038 3B68     		ldr	r3, [r7]
 1643 003a 1B88     		ldrh	r3, [r3]
 1644 003c 002B     		cmp	r3, #0
 1645 003e 16D0     		beq	.L72
 1646              		.loc 1 706 0 is_stmt 0 discriminator 1
 1647 0040 3B68     		ldr	r3, [r7]
 1648 0042 1B88     		ldrh	r3, [r3]
 1649 0044 B3F5807F 		cmp	r3, #256
 1650 0048 11D0     		beq	.L72
 1651 004a 3B68     		ldr	r3, [r7]
 1652 004c 1B88     		ldrh	r3, [r3]
 1653 004e B3F5007F 		cmp	r3, #512
 1654 0052 0CD0     		beq	.L72
 1655 0054 3B68     		ldr	r3, [r7]
 1656 0056 1B88     		ldrh	r3, [r3]
 1657 0058 B3F5407F 		cmp	r3, #768
 1658 005c 07D0     		beq	.L72
 1659 005e 40F20000 		movw	r0, #:lower16:.LC0
 1660 0062 C0F20000 		movt	r0, #:upper16:.LC0
 1661 0066 40F2C221 		movw	r1, #706
 1662 006a FFF7FEFF 		bl	assert_failed
 1663              	.L72:
 707:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_STANDARD(I2S_InitStruct->I2S_Standard));
 1664              		.loc 1 707 0 is_stmt 1
 1665 006e 3B68     		ldr	r3, [r7]
 1666 0070 5B88     		ldrh	r3, [r3, #2]
 1667 0072 002B     		cmp	r3, #0
 1668 0074 17D0     		beq	.L73
 1669              		.loc 1 707 0 is_stmt 0 discriminator 1
 1670 0076 3B68     		ldr	r3, [r7]
 1671 0078 5B88     		ldrh	r3, [r3, #2]
 1672 007a 102B     		cmp	r3, #16
 1673 007c 13D0     		beq	.L73
 1674 007e 3B68     		ldr	r3, [r7]
 1675 0080 5B88     		ldrh	r3, [r3, #2]
 1676 0082 202B     		cmp	r3, #32
 1677 0084 0FD0     		beq	.L73
 1678 0086 3B68     		ldr	r3, [r7]
 1679 0088 5B88     		ldrh	r3, [r3, #2]
 1680 008a 302B     		cmp	r3, #48
 1681 008c 0BD0     		beq	.L73
 1682 008e 3B68     		ldr	r3, [r7]
 1683 0090 5B88     		ldrh	r3, [r3, #2]
 1684 0092 B02B     		cmp	r3, #176
 1685 0094 07D0     		beq	.L73
 1686 0096 40F20000 		movw	r0, #:lower16:.LC0
 1687 009a C0F20000 		movt	r0, #:upper16:.LC0
 1688 009e 40F2C321 		movw	r1, #707
 1689 00a2 FFF7FEFF 		bl	assert_failed
 1690              	.L73:
 708:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_DATA_FORMAT(I2S_InitStruct->I2S_DataFormat));
 1691              		.loc 1 708 0 is_stmt 1
 1692 00a6 3B68     		ldr	r3, [r7]
 1693 00a8 9B88     		ldrh	r3, [r3, #4]
 1694 00aa 002B     		cmp	r3, #0
 1695 00ac 13D0     		beq	.L74
 1696              		.loc 1 708 0 is_stmt 0 discriminator 1
 1697 00ae 3B68     		ldr	r3, [r7]
 1698 00b0 9B88     		ldrh	r3, [r3, #4]
 1699 00b2 012B     		cmp	r3, #1
 1700 00b4 0FD0     		beq	.L74
 1701 00b6 3B68     		ldr	r3, [r7]
 1702 00b8 9B88     		ldrh	r3, [r3, #4]
 1703 00ba 032B     		cmp	r3, #3
 1704 00bc 0BD0     		beq	.L74
 1705 00be 3B68     		ldr	r3, [r7]
 1706 00c0 9B88     		ldrh	r3, [r3, #4]
 1707 00c2 052B     		cmp	r3, #5
 1708 00c4 07D0     		beq	.L74
 1709 00c6 40F20000 		movw	r0, #:lower16:.LC0
 1710 00ca C0F20000 		movt	r0, #:upper16:.LC0
 1711 00ce 4FF43171 		mov	r1, #708
 1712 00d2 FFF7FEFF 		bl	assert_failed
 1713              	.L74:
 709:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_CPOL(I2S_InitStruct->I2S_CPOL));  
 1714              		.loc 1 709 0 is_stmt 1
 1715 00d6 3B68     		ldr	r3, [r7]
 1716 00d8 9B89     		ldrh	r3, [r3, #12]
 1717 00da 002B     		cmp	r3, #0
 1718 00dc 0BD0     		beq	.L75
 1719              		.loc 1 709 0 is_stmt 0 discriminator 1
 1720 00de 3B68     		ldr	r3, [r7]
 1721 00e0 9B89     		ldrh	r3, [r3, #12]
 1722 00e2 082B     		cmp	r3, #8
 1723 00e4 07D0     		beq	.L75
 1724 00e6 40F20000 		movw	r0, #:lower16:.LC0
 1725 00ea C0F20000 		movt	r0, #:upper16:.LC0
 1726 00ee 40F2C521 		movw	r1, #709
 1727 00f2 FFF7FEFF 		bl	assert_failed
 1728              	.L75:
 710:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 711:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /*----------------------- SPIx I2SCFGR & I2SPR Configuration -----------------*/
 712:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Clear I2SMOD, I2SE, I2SCFG, PCMSYNC, I2SSTD, CKPOL, DATLEN and CHLEN bits */
 713:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   I2Sxext->I2SCFGR &= I2SCFGR_CLEAR_MASK; 
 1729              		.loc 1 713 0 is_stmt 1
 1730 00f6 7B68     		ldr	r3, [r7, #4]
 1731 00f8 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1732 00fa 9BB2     		uxth	r3, r3
 1733 00fc 23F47B63 		bic	r3, r3, #4016
 1734 0100 23F00F03 		bic	r3, r3, #15
 1735 0104 9AB2     		uxth	r2, r3
 1736 0106 7B68     		ldr	r3, [r7, #4]
 1737 0108 9A83     		strh	r2, [r3, #28]	@ movhi
 714:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   I2Sxext->I2SPR = 0x0002;
 1738              		.loc 1 714 0
 1739 010a 7B68     		ldr	r3, [r7, #4]
 1740 010c 0222     		movs	r2, #2
 1741 010e 1A84     		strh	r2, [r3, #32]	@ movhi
 715:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 716:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Get the I2SCFGR register value */
 717:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   tmpreg = I2Sxext->I2SCFGR;
 1742              		.loc 1 717 0
 1743 0110 7B68     		ldr	r3, [r7, #4]
 1744 0112 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1745 0114 BB81     		strh	r3, [r7, #12]	@ movhi
 718:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 719:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Get the mode to be configured for the extended I2S */
 720:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if ((I2S_InitStruct->I2S_Mode == I2S_Mode_MasterTx) || (I2S_InitStruct->I2S_Mode == I2S_Mode_Slav
 1746              		.loc 1 720 0
 1747 0116 3B68     		ldr	r3, [r7]
 1748 0118 1B88     		ldrh	r3, [r3]
 1749 011a B3F5007F 		cmp	r3, #512
 1750 011e 03D0     		beq	.L76
 1751              		.loc 1 720 0 is_stmt 0 discriminator 1
 1752 0120 3B68     		ldr	r3, [r7]
 1753 0122 1B88     		ldrh	r3, [r3]
 1754 0124 002B     		cmp	r3, #0
 1755 0126 03D1     		bne	.L77
 1756              	.L76:
 721:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 722:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     tmp = I2S_Mode_SlaveRx;
 1757              		.loc 1 722 0 is_stmt 1
 1758 0128 4FF48073 		mov	r3, #256
 1759 012c FB81     		strh	r3, [r7, #14]	@ movhi
 1760 012e 0BE0     		b	.L78
 1761              	.L77:
 723:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 724:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
 725:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 726:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     if ((I2S_InitStruct->I2S_Mode == I2S_Mode_MasterRx) || (I2S_InitStruct->I2S_Mode == I2S_Mode_Sl
 1762              		.loc 1 726 0
 1763 0130 3B68     		ldr	r3, [r7]
 1764 0132 1B88     		ldrh	r3, [r3]
 1765 0134 B3F5407F 		cmp	r3, #768
 1766 0138 04D0     		beq	.L79
 1767              		.loc 1 726 0 is_stmt 0 discriminator 1
 1768 013a 3B68     		ldr	r3, [r7]
 1769 013c 1B88     		ldrh	r3, [r3]
 1770 013e B3F5807F 		cmp	r3, #256
 1771 0142 01D1     		bne	.L78
 1772              	.L79:
 727:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     {
 728:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       tmp = I2S_Mode_SlaveTx;
 1773              		.loc 1 728 0 is_stmt 1
 1774 0144 0023     		movs	r3, #0
 1775 0146 FB81     		strh	r3, [r7, #14]	@ movhi
 1776              	.L78:
 729:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     }
 730:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 731:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 732:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  
 733:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Configure the I2S with the SPI_InitStruct values */
 734:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   tmpreg |= (uint16_t)((uint16_t)SPI_I2SCFGR_I2SMOD | (uint16_t)(tmp | \
 735:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 1777              		.loc 1 735 0
 1778 0148 3B68     		ldr	r3, [r7]
 1779 014a 5A88     		ldrh	r2, [r3, #2]
 1780 014c 3B68     		ldr	r3, [r7]
 1781 014e 9988     		ldrh	r1, [r3, #4]
 736:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   (uint16_t)I2S_InitStruct->I2S_CPOL))));
 1782              		.loc 1 736 0
 1783 0150 3B68     		ldr	r3, [r7]
 1784 0152 9B89     		ldrh	r3, [r3, #12]
 735:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   (uint16_t)I2S_InitStruct->I2S_CPOL))));
 1785              		.loc 1 735 0
 1786 0154 0B43     		orrs	r3, r3, r1
 1787 0156 9BB2     		uxth	r3, r3
 1788 0158 1343     		orrs	r3, r3, r2
 1789 015a 9AB2     		uxth	r2, r3
 734:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 1790              		.loc 1 734 0
 1791 015c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1792 015e 1343     		orrs	r3, r3, r2
 1793 0160 9AB2     		uxth	r2, r3
 1794 0162 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1795 0164 1343     		orrs	r3, r3, r2
 1796 0166 9BB2     		uxth	r3, r3
 1797 0168 43F40063 		orr	r3, r3, #2048
 1798 016c BB81     		strh	r3, [r7, #12]	@ movhi
 737:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  
 738:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Write to SPIx I2SCFGR */  
 739:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   I2Sxext->I2SCFGR = tmpreg;
 1799              		.loc 1 739 0
 1800 016e 7B68     		ldr	r3, [r7, #4]
 1801 0170 BA89     		ldrh	r2, [r7, #12]	@ movhi
 1802 0172 9A83     		strh	r2, [r3, #28]	@ movhi
 740:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 1803              		.loc 1 740 0
 1804 0174 1037     		adds	r7, r7, #16
 1805 0176 BD46     		mov	sp, r7
 1806              		@ sp needed
 1807 0178 80BD     		pop	{r7, pc}
 1808              		.cfi_endproc
 1809              	.LFE122:
 1811 017a 00BF     		.section	.text.SPI_I2S_ReceiveData,"ax",%progbits
 1812              		.align	2
 1813              		.global	SPI_I2S_ReceiveData
 1814              		.thumb
 1815              		.thumb_func
 1817              	SPI_I2S_ReceiveData:
 1818              	.LFB123:
 741:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 742:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 743:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @}
 744:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 745:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 746:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /** @defgroup SPI_Group2 Data transfers functions
 747:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  *  @brief   Data transfers functions
 748:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  *
 749:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @verbatim   
 750:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ===============================================================================
 751:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                          Data transfers functions
 752:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ===============================================================================  
 753:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 754:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   This section provides a set of functions allowing to manage the SPI data transfers
 755:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 756:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   In reception, data are received and then stored into an internal Rx buffer while 
 757:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   In transmission, data are first stored into an internal Tx buffer before being 
 758:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   transmitted.
 759:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 760:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   The read access of the SPI_DR register can be done using the SPI_I2S_ReceiveData()
 761:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   function and returns the Rx buffered value. Whereas a write access to the SPI_DR 
 762:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   can be done using SPI_I2S_SendData() function and stores the written data into 
 763:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   Tx buffer.
 764:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 765:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @endverbatim
 766:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @{
 767:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 768:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 769:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 770:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Returns the most recent received data by the SPIx/I2Sx peripheral. 
 771:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2 or 3 
 772:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
 773:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval The value of the received data.
 774:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 775:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** uint16_t SPI_I2S_ReceiveData(SPI_TypeDef* SPIx)
 776:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 1819              		.loc 1 776 0
 1820              		.cfi_startproc
 1821              		@ args = 0, pretend = 0, frame = 8
 1822              		@ frame_needed = 1, uses_anonymous_args = 0
 1823 0000 80B5     		push	{r7, lr}
 1824              	.LCFI39:
 1825              		.cfi_def_cfa_offset 8
 1826              		.cfi_offset 7, -8
 1827              		.cfi_offset 14, -4
 1828 0002 82B0     		sub	sp, sp, #8
 1829              	.LCFI40:
 1830              		.cfi_def_cfa_offset 16
 1831 0004 00AF     		add	r7, sp, #0
 1832              	.LCFI41:
 1833              		.cfi_def_cfa_register 7
 1834 0006 7860     		str	r0, [r7, #4]
 777:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 778:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 1835              		.loc 1 778 0
 1836 0008 7A68     		ldr	r2, [r7, #4]
 1837 000a 4FF44053 		mov	r3, #12288
 1838 000e C4F20103 		movt	r3, 16385
 1839 0012 9A42     		cmp	r2, r3
 1840 0014 20D0     		beq	.L81
 1841              		.loc 1 778 0 is_stmt 0 discriminator 1
 1842 0016 7A68     		ldr	r2, [r7, #4]
 1843 0018 4FF46053 		mov	r3, #14336
 1844 001c C4F20003 		movt	r3, 16384
 1845 0020 9A42     		cmp	r2, r3
 1846 0022 19D0     		beq	.L81
 1847 0024 7A68     		ldr	r2, [r7, #4]
 1848 0026 4FF47053 		mov	r3, #15360
 1849 002a C4F20003 		movt	r3, 16384
 1850 002e 9A42     		cmp	r2, r3
 1851 0030 12D0     		beq	.L81
 1852 0032 7A68     		ldr	r2, [r7, #4]
 1853 0034 4FF45053 		mov	r3, #13312
 1854 0038 C4F20003 		movt	r3, 16384
 1855 003c 9A42     		cmp	r2, r3
 1856 003e 0BD0     		beq	.L81
 1857 0040 7B68     		ldr	r3, [r7, #4]
 1858 0042 B3F1402F 		cmp	r3, #1073758208
 1859 0046 07D0     		beq	.L81
 1860 0048 40F20000 		movw	r0, #:lower16:.LC0
 1861 004c C0F20000 		movt	r0, #:upper16:.LC0
 1862 0050 40F20A31 		movw	r1, #778
 1863 0054 FFF7FEFF 		bl	assert_failed
 1864              	.L81:
 779:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 780:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Return the data in the DR register */
 781:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   return SPIx->DR;
 1865              		.loc 1 781 0 is_stmt 1
 1866 0058 7B68     		ldr	r3, [r7, #4]
 1867 005a 9B89     		ldrh	r3, [r3, #12]	@ movhi
 1868 005c 9BB2     		uxth	r3, r3
 782:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 1869              		.loc 1 782 0
 1870 005e 1846     		mov	r0, r3
 1871 0060 0837     		adds	r7, r7, #8
 1872 0062 BD46     		mov	sp, r7
 1873              		@ sp needed
 1874 0064 80BD     		pop	{r7, pc}
 1875              		.cfi_endproc
 1876              	.LFE123:
 1878 0066 00BF     		.section	.text.SPI_I2S_SendData,"ax",%progbits
 1879              		.align	2
 1880              		.global	SPI_I2S_SendData
 1881              		.thumb
 1882              		.thumb_func
 1884              	SPI_I2S_SendData:
 1885              	.LFB124:
 783:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 784:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 785:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Transmits a Data through the SPIx/I2Sx peripheral.
 786:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2 or 3 
 787:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode.     
 788:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  Data: Data to be transmitted.
 789:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 790:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 791:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_I2S_SendData(SPI_TypeDef* SPIx, uint16_t Data)
 792:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 1886              		.loc 1 792 0
 1887              		.cfi_startproc
 1888              		@ args = 0, pretend = 0, frame = 8
 1889              		@ frame_needed = 1, uses_anonymous_args = 0
 1890 0000 80B5     		push	{r7, lr}
 1891              	.LCFI42:
 1892              		.cfi_def_cfa_offset 8
 1893              		.cfi_offset 7, -8
 1894              		.cfi_offset 14, -4
 1895 0002 82B0     		sub	sp, sp, #8
 1896              	.LCFI43:
 1897              		.cfi_def_cfa_offset 16
 1898 0004 00AF     		add	r7, sp, #0
 1899              	.LCFI44:
 1900              		.cfi_def_cfa_register 7
 1901 0006 7860     		str	r0, [r7, #4]
 1902 0008 0B46     		mov	r3, r1
 1903 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 793:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 794:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 1904              		.loc 1 794 0
 1905 000c 7A68     		ldr	r2, [r7, #4]
 1906 000e 4FF44053 		mov	r3, #12288
 1907 0012 C4F20103 		movt	r3, 16385
 1908 0016 9A42     		cmp	r2, r3
 1909 0018 20D0     		beq	.L84
 1910              		.loc 1 794 0 is_stmt 0 discriminator 1
 1911 001a 7A68     		ldr	r2, [r7, #4]
 1912 001c 4FF46053 		mov	r3, #14336
 1913 0020 C4F20003 		movt	r3, 16384
 1914 0024 9A42     		cmp	r2, r3
 1915 0026 19D0     		beq	.L84
 1916 0028 7A68     		ldr	r2, [r7, #4]
 1917 002a 4FF47053 		mov	r3, #15360
 1918 002e C4F20003 		movt	r3, 16384
 1919 0032 9A42     		cmp	r2, r3
 1920 0034 12D0     		beq	.L84
 1921 0036 7A68     		ldr	r2, [r7, #4]
 1922 0038 4FF45053 		mov	r3, #13312
 1923 003c C4F20003 		movt	r3, 16384
 1924 0040 9A42     		cmp	r2, r3
 1925 0042 0BD0     		beq	.L84
 1926 0044 7B68     		ldr	r3, [r7, #4]
 1927 0046 B3F1402F 		cmp	r3, #1073758208
 1928 004a 07D0     		beq	.L84
 1929 004c 40F20000 		movw	r0, #:lower16:.LC0
 1930 0050 C0F20000 		movt	r0, #:upper16:.LC0
 1931 0054 40F21A31 		movw	r1, #794
 1932 0058 FFF7FEFF 		bl	assert_failed
 1933              	.L84:
 795:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 796:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Write in the DR register the data to be sent */
 797:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->DR = Data;
 1934              		.loc 1 797 0 is_stmt 1
 1935 005c 7B68     		ldr	r3, [r7, #4]
 1936 005e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1937 0060 9A81     		strh	r2, [r3, #12]	@ movhi
 798:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 1938              		.loc 1 798 0
 1939 0062 0837     		adds	r7, r7, #8
 1940 0064 BD46     		mov	sp, r7
 1941              		@ sp needed
 1942 0066 80BD     		pop	{r7, pc}
 1943              		.cfi_endproc
 1944              	.LFE124:
 1946              		.section	.text.SPI_CalculateCRC,"ax",%progbits
 1947              		.align	2
 1948              		.global	SPI_CalculateCRC
 1949              		.thumb
 1950              		.thumb_func
 1952              	SPI_CalculateCRC:
 1953              	.LFB125:
 799:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 800:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 801:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @}
 802:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 803:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 804:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /** @defgroup SPI_Group3 Hardware CRC Calculation functions
 805:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  *  @brief   Hardware CRC Calculation functions
 806:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  *
 807:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @verbatim   
 808:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ===============================================================================
 809:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                          Hardware CRC Calculation functions
 810:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ===============================================================================  
 811:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 812:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   This section provides a set of functions allowing to manage the SPI CRC hardware 
 813:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   calculation
 814:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 815:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPI communication using CRC is possible through the following procedure:
 816:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      1. Program the Data direction, Polarity, Phase, First Data, Baud Rate Prescaler, 
 817:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****         Slave Management, Peripheral Mode and CRC Polynomial values using the SPI_Init()
 818:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****         function.
 819:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      2. Enable the CRC calculation using the SPI_CalculateCRC() function.
 820:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      3. Enable the SPI using the SPI_Cmd() function
 821:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      4. Before writing the last data to the TX buffer, set the CRCNext bit using the 
 822:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       SPI_TransmitCRC() function to indicate that after transmission of the last 
 823:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       data, the CRC should be transmitted.
 824:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      5. After transmitting the last data, the SPI transmits the CRC. The SPI_CR1_CRCNEXT
 825:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****         bit is reset. The CRC is also received and compared against the SPI_RXCRCR 
 826:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****         value. 
 827:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****         If the value does not match, the SPI_FLAG_CRCERR flag is set and an interrupt
 828:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****         can be generated when the SPI_I2S_IT_ERR interrupt is enabled.
 829:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 830:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @note It is advised not to read the calculated CRC values during the communication.
 831:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 832:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @note When the SPI is in slave mode, be careful to enable CRC calculation only 
 833:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       when the clock is stable, that is, when the clock is in the steady state. 
 834:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       If not, a wrong CRC calculation may be done. In fact, the CRC is sensitive 
 835:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       to the SCK slave input clock as soon as CRCEN is set, and this, whatever 
 836:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       the value of the SPE bit.
 837:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 838:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @note With high bitrate frequencies, be careful when transmitting the CRC.
 839:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       As the number of used CPU cycles has to be as low as possible in the CRC 
 840:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       transfer phase, it is forbidden to call software functions in the CRC 
 841:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       transmission sequence to avoid errors in the last data and CRC reception. 
 842:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       In fact, CRCNEXT bit has to be written before the end of the transmission/reception 
 843:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       of the last data.
 844:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 845:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @note For high bit rate frequencies, it is advised to use the DMA mode to avoid the
 846:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       degradation of the SPI speed performance due to CPU accesses impacting the 
 847:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       SPI bandwidth.
 848:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 849:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @note When the STM32F4xx is configured as slave and the NSS hardware mode is 
 850:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       used, the NSS pin needs to be kept low between the data phase and the CRC 
 851:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       phase.
 852:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 853:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @note When the SPI is configured in slave mode with the CRC feature enabled, CRC
 854:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       calculation takes place even if a high level is applied on the NSS pin. 
 855:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       This may happen for example in case of a multi-slave environment where the 
 856:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       communication master addresses slaves alternately.
 857:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 858:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @note Between a slave de-selection (high level on NSS) and a new slave selection 
 859:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       (low level on NSS), the CRC value should be cleared on both master and slave
 860:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       sides in order to resynchronize the master and slave for their respective 
 861:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       CRC calculation.
 862:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 863:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @note To clear the CRC, follow the procedure below:
 864:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****         1. Disable SPI using the SPI_Cmd() function
 865:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****         2. Disable the CRC calculation using the SPI_CalculateCRC() function.
 866:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****         3. Enable the CRC calculation using the SPI_CalculateCRC() function.
 867:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****         4. Enable SPI using the SPI_Cmd() function.
 868:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 869:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @endverbatim
 870:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @{
 871:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 872:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 873:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 874:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Enables or disables the CRC value calculation of the transferred bytes.
 875:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 876:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  NewState: new state of the SPIx CRC value calculation.
 877:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 878:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 879:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 880:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_CalculateCRC(SPI_TypeDef* SPIx, FunctionalState NewState)
 881:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 1954              		.loc 1 881 0
 1955              		.cfi_startproc
 1956              		@ args = 0, pretend = 0, frame = 8
 1957              		@ frame_needed = 1, uses_anonymous_args = 0
 1958 0000 80B5     		push	{r7, lr}
 1959              	.LCFI45:
 1960              		.cfi_def_cfa_offset 8
 1961              		.cfi_offset 7, -8
 1962              		.cfi_offset 14, -4
 1963 0002 82B0     		sub	sp, sp, #8
 1964              	.LCFI46:
 1965              		.cfi_def_cfa_offset 16
 1966 0004 00AF     		add	r7, sp, #0
 1967              	.LCFI47:
 1968              		.cfi_def_cfa_register 7
 1969 0006 7860     		str	r0, [r7, #4]
 1970 0008 0B46     		mov	r3, r1
 1971 000a FB70     		strb	r3, [r7, #3]
 882:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 883:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 1972              		.loc 1 883 0
 1973 000c 7A68     		ldr	r2, [r7, #4]
 1974 000e 4FF44053 		mov	r3, #12288
 1975 0012 C4F20103 		movt	r3, 16385
 1976 0016 9A42     		cmp	r2, r3
 1977 0018 15D0     		beq	.L86
 1978              		.loc 1 883 0 is_stmt 0 discriminator 1
 1979 001a 7A68     		ldr	r2, [r7, #4]
 1980 001c 4FF46053 		mov	r3, #14336
 1981 0020 C4F20003 		movt	r3, 16384
 1982 0024 9A42     		cmp	r2, r3
 1983 0026 0ED0     		beq	.L86
 1984 0028 7A68     		ldr	r2, [r7, #4]
 1985 002a 4FF47053 		mov	r3, #15360
 1986 002e C4F20003 		movt	r3, 16384
 1987 0032 9A42     		cmp	r2, r3
 1988 0034 07D0     		beq	.L86
 1989 0036 40F20000 		movw	r0, #:lower16:.LC0
 1990 003a C0F20000 		movt	r0, #:upper16:.LC0
 1991 003e 40F27331 		movw	r1, #883
 1992 0042 FFF7FEFF 		bl	assert_failed
 1993              	.L86:
 884:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1994              		.loc 1 884 0 is_stmt 1
 1995 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1996 0048 002B     		cmp	r3, #0
 1997 004a 0AD0     		beq	.L87
 1998              		.loc 1 884 0 is_stmt 0 discriminator 1
 1999 004c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2000 004e 012B     		cmp	r3, #1
 2001 0050 07D0     		beq	.L87
 2002 0052 40F20000 		movw	r0, #:lower16:.LC0
 2003 0056 C0F20000 		movt	r0, #:upper16:.LC0
 2004 005a 4FF45D71 		mov	r1, #884
 2005 005e FFF7FEFF 		bl	assert_failed
 2006              	.L87:
 885:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 2007              		.loc 1 885 0 is_stmt 1
 2008 0062 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2009 0064 002B     		cmp	r3, #0
 2010 0066 08D0     		beq	.L88
 886:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 887:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Enable the selected SPI CRC calculation */
 888:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR1 |= SPI_CR1_CRCEN;
 2011              		.loc 1 888 0
 2012 0068 7B68     		ldr	r3, [r7, #4]
 2013 006a 1B88     		ldrh	r3, [r3]	@ movhi
 2014 006c 9BB2     		uxth	r3, r3
 2015 006e 43F40053 		orr	r3, r3, #8192
 2016 0072 9AB2     		uxth	r2, r3
 2017 0074 7B68     		ldr	r3, [r7, #4]
 2018 0076 1A80     		strh	r2, [r3]	@ movhi
 2019 0078 07E0     		b	.L85
 2020              	.L88:
 889:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 890:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
 891:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 892:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Disable the selected SPI CRC calculation */
 893:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR1 &= (uint16_t)~((uint16_t)SPI_CR1_CRCEN);
 2021              		.loc 1 893 0
 2022 007a 7B68     		ldr	r3, [r7, #4]
 2023 007c 1B88     		ldrh	r3, [r3]	@ movhi
 2024 007e 9BB2     		uxth	r3, r3
 2025 0080 23F40053 		bic	r3, r3, #8192
 2026 0084 9AB2     		uxth	r2, r3
 2027 0086 7B68     		ldr	r3, [r7, #4]
 2028 0088 1A80     		strh	r2, [r3]	@ movhi
 2029              	.L85:
 894:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 895:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 2030              		.loc 1 895 0
 2031 008a 0837     		adds	r7, r7, #8
 2032 008c BD46     		mov	sp, r7
 2033              		@ sp needed
 2034 008e 80BD     		pop	{r7, pc}
 2035              		.cfi_endproc
 2036              	.LFE125:
 2038              		.section	.text.SPI_TransmitCRC,"ax",%progbits
 2039              		.align	2
 2040              		.global	SPI_TransmitCRC
 2041              		.thumb
 2042              		.thumb_func
 2044              	SPI_TransmitCRC:
 2045              	.LFB126:
 896:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 897:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 898:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Transmit the SPIx CRC value.
 899:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 900:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 901:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 902:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_TransmitCRC(SPI_TypeDef* SPIx)
 903:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 2046              		.loc 1 903 0
 2047              		.cfi_startproc
 2048              		@ args = 0, pretend = 0, frame = 8
 2049              		@ frame_needed = 1, uses_anonymous_args = 0
 2050 0000 80B5     		push	{r7, lr}
 2051              	.LCFI48:
 2052              		.cfi_def_cfa_offset 8
 2053              		.cfi_offset 7, -8
 2054              		.cfi_offset 14, -4
 2055 0002 82B0     		sub	sp, sp, #8
 2056              	.LCFI49:
 2057              		.cfi_def_cfa_offset 16
 2058 0004 00AF     		add	r7, sp, #0
 2059              	.LCFI50:
 2060              		.cfi_def_cfa_register 7
 2061 0006 7860     		str	r0, [r7, #4]
 904:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 905:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 2062              		.loc 1 905 0
 2063 0008 7A68     		ldr	r2, [r7, #4]
 2064 000a 4FF44053 		mov	r3, #12288
 2065 000e C4F20103 		movt	r3, 16385
 2066 0012 9A42     		cmp	r2, r3
 2067 0014 15D0     		beq	.L91
 2068              		.loc 1 905 0 is_stmt 0 discriminator 1
 2069 0016 7A68     		ldr	r2, [r7, #4]
 2070 0018 4FF46053 		mov	r3, #14336
 2071 001c C4F20003 		movt	r3, 16384
 2072 0020 9A42     		cmp	r2, r3
 2073 0022 0ED0     		beq	.L91
 2074 0024 7A68     		ldr	r2, [r7, #4]
 2075 0026 4FF47053 		mov	r3, #15360
 2076 002a C4F20003 		movt	r3, 16384
 2077 002e 9A42     		cmp	r2, r3
 2078 0030 07D0     		beq	.L91
 2079 0032 40F20000 		movw	r0, #:lower16:.LC0
 2080 0036 C0F20000 		movt	r0, #:upper16:.LC0
 2081 003a 40F28931 		movw	r1, #905
 2082 003e FFF7FEFF 		bl	assert_failed
 2083              	.L91:
 906:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 907:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Enable the selected SPI CRC transmission */
 908:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->CR1 |= SPI_CR1_CRCNEXT;
 2084              		.loc 1 908 0 is_stmt 1
 2085 0042 7B68     		ldr	r3, [r7, #4]
 2086 0044 1B88     		ldrh	r3, [r3]	@ movhi
 2087 0046 9BB2     		uxth	r3, r3
 2088 0048 43F48053 		orr	r3, r3, #4096
 2089 004c 9AB2     		uxth	r2, r3
 2090 004e 7B68     		ldr	r3, [r7, #4]
 2091 0050 1A80     		strh	r2, [r3]	@ movhi
 909:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 2092              		.loc 1 909 0
 2093 0052 0837     		adds	r7, r7, #8
 2094 0054 BD46     		mov	sp, r7
 2095              		@ sp needed
 2096 0056 80BD     		pop	{r7, pc}
 2097              		.cfi_endproc
 2098              	.LFE126:
 2100              		.section	.text.SPI_GetCRC,"ax",%progbits
 2101              		.align	2
 2102              		.global	SPI_GetCRC
 2103              		.thumb
 2104              		.thumb_func
 2106              	SPI_GetCRC:
 2107              	.LFB127:
 910:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 911:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 912:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Returns the transmit or the receive CRC register value for the specified SPI.
 913:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 914:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPI_CRC: specifies the CRC register to be read.
 915:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
 916:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_CRC_Tx: Selects Tx CRC register
 917:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_CRC_Rx: Selects Rx CRC register
 918:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval The selected CRC register value..
 919:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 920:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** uint16_t SPI_GetCRC(SPI_TypeDef* SPIx, uint8_t SPI_CRC)
 921:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 2108              		.loc 1 921 0
 2109              		.cfi_startproc
 2110              		@ args = 0, pretend = 0, frame = 16
 2111              		@ frame_needed = 1, uses_anonymous_args = 0
 2112 0000 80B5     		push	{r7, lr}
 2113              	.LCFI51:
 2114              		.cfi_def_cfa_offset 8
 2115              		.cfi_offset 7, -8
 2116              		.cfi_offset 14, -4
 2117 0002 84B0     		sub	sp, sp, #16
 2118              	.LCFI52:
 2119              		.cfi_def_cfa_offset 24
 2120 0004 00AF     		add	r7, sp, #0
 2121              	.LCFI53:
 2122              		.cfi_def_cfa_register 7
 2123 0006 7860     		str	r0, [r7, #4]
 2124 0008 0B46     		mov	r3, r1
 2125 000a FB70     		strb	r3, [r7, #3]
 922:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint16_t crcreg = 0;
 2126              		.loc 1 922 0
 2127 000c 0023     		movs	r3, #0
 2128 000e FB81     		strh	r3, [r7, #14]	@ movhi
 923:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 924:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 2129              		.loc 1 924 0
 2130 0010 7A68     		ldr	r2, [r7, #4]
 2131 0012 4FF44053 		mov	r3, #12288
 2132 0016 C4F20103 		movt	r3, 16385
 2133 001a 9A42     		cmp	r2, r3
 2134 001c 15D0     		beq	.L93
 2135              		.loc 1 924 0 is_stmt 0 discriminator 1
 2136 001e 7A68     		ldr	r2, [r7, #4]
 2137 0020 4FF46053 		mov	r3, #14336
 2138 0024 C4F20003 		movt	r3, 16384
 2139 0028 9A42     		cmp	r2, r3
 2140 002a 0ED0     		beq	.L93
 2141 002c 7A68     		ldr	r2, [r7, #4]
 2142 002e 4FF47053 		mov	r3, #15360
 2143 0032 C4F20003 		movt	r3, 16384
 2144 0036 9A42     		cmp	r2, r3
 2145 0038 07D0     		beq	.L93
 2146 003a 40F20000 		movw	r0, #:lower16:.LC0
 2147 003e C0F20000 		movt	r0, #:upper16:.LC0
 2148 0042 4FF46771 		mov	r1, #924
 2149 0046 FFF7FEFF 		bl	assert_failed
 2150              	.L93:
 925:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_CRC(SPI_CRC));
 2151              		.loc 1 925 0 is_stmt 1
 2152 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2153 004c 002B     		cmp	r3, #0
 2154 004e 0AD0     		beq	.L94
 2155              		.loc 1 925 0 is_stmt 0 discriminator 1
 2156 0050 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2157 0052 012B     		cmp	r3, #1
 2158 0054 07D0     		beq	.L94
 2159 0056 40F20000 		movw	r0, #:lower16:.LC0
 2160 005a C0F20000 		movt	r0, #:upper16:.LC0
 2161 005e 40F29D31 		movw	r1, #925
 2162 0062 FFF7FEFF 		bl	assert_failed
 2163              	.L94:
 926:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (SPI_CRC != SPI_CRC_Rx)
 2164              		.loc 1 926 0 is_stmt 1
 2165 0066 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2166 0068 012B     		cmp	r3, #1
 2167 006a 03D0     		beq	.L95
 927:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 928:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Get the Tx CRC register */
 929:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     crcreg = SPIx->TXCRCR;
 2168              		.loc 1 929 0
 2169 006c 7B68     		ldr	r3, [r7, #4]
 2170 006e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2171 0070 FB81     		strh	r3, [r7, #14]	@ movhi
 2172 0072 02E0     		b	.L96
 2173              	.L95:
 930:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 931:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
 932:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 933:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Get the Rx CRC register */
 934:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     crcreg = SPIx->RXCRCR;
 2174              		.loc 1 934 0
 2175 0074 7B68     		ldr	r3, [r7, #4]
 2176 0076 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 2177 0078 FB81     		strh	r3, [r7, #14]	@ movhi
 2178              	.L96:
 935:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 936:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Return the selected CRC register */
 937:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   return crcreg;
 2179              		.loc 1 937 0
 2180 007a FB89     		ldrh	r3, [r7, #14]
 938:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 2181              		.loc 1 938 0
 2182 007c 1846     		mov	r0, r3
 2183 007e 1037     		adds	r7, r7, #16
 2184 0080 BD46     		mov	sp, r7
 2185              		@ sp needed
 2186 0082 80BD     		pop	{r7, pc}
 2187              		.cfi_endproc
 2188              	.LFE127:
 2190              		.section	.text.SPI_GetCRCPolynomial,"ax",%progbits
 2191              		.align	2
 2192              		.global	SPI_GetCRCPolynomial
 2193              		.thumb
 2194              		.thumb_func
 2196              	SPI_GetCRCPolynomial:
 2197              	.LFB128:
 939:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 940:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 941:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Returns the CRC Polynomial register value for the specified SPI.
 942:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 943:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval The CRC Polynomial register value.
 944:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 945:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** uint16_t SPI_GetCRCPolynomial(SPI_TypeDef* SPIx)
 946:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 2198              		.loc 1 946 0
 2199              		.cfi_startproc
 2200              		@ args = 0, pretend = 0, frame = 8
 2201              		@ frame_needed = 1, uses_anonymous_args = 0
 2202 0000 80B5     		push	{r7, lr}
 2203              	.LCFI54:
 2204              		.cfi_def_cfa_offset 8
 2205              		.cfi_offset 7, -8
 2206              		.cfi_offset 14, -4
 2207 0002 82B0     		sub	sp, sp, #8
 2208              	.LCFI55:
 2209              		.cfi_def_cfa_offset 16
 2210 0004 00AF     		add	r7, sp, #0
 2211              	.LCFI56:
 2212              		.cfi_def_cfa_register 7
 2213 0006 7860     		str	r0, [r7, #4]
 947:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 948:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 2214              		.loc 1 948 0
 2215 0008 7A68     		ldr	r2, [r7, #4]
 2216 000a 4FF44053 		mov	r3, #12288
 2217 000e C4F20103 		movt	r3, 16385
 2218 0012 9A42     		cmp	r2, r3
 2219 0014 15D0     		beq	.L99
 2220              		.loc 1 948 0 is_stmt 0 discriminator 1
 2221 0016 7A68     		ldr	r2, [r7, #4]
 2222 0018 4FF46053 		mov	r3, #14336
 2223 001c C4F20003 		movt	r3, 16384
 2224 0020 9A42     		cmp	r2, r3
 2225 0022 0ED0     		beq	.L99
 2226 0024 7A68     		ldr	r2, [r7, #4]
 2227 0026 4FF47053 		mov	r3, #15360
 2228 002a C4F20003 		movt	r3, 16384
 2229 002e 9A42     		cmp	r2, r3
 2230 0030 07D0     		beq	.L99
 2231 0032 40F20000 		movw	r0, #:lower16:.LC0
 2232 0036 C0F20000 		movt	r0, #:upper16:.LC0
 2233 003a 4FF46D71 		mov	r1, #948
 2234 003e FFF7FEFF 		bl	assert_failed
 2235              	.L99:
 949:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 950:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Return the CRC polynomial register */
 951:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   return SPIx->CRCPR;
 2236              		.loc 1 951 0 is_stmt 1
 2237 0042 7B68     		ldr	r3, [r7, #4]
 2238 0044 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 2239 0046 9BB2     		uxth	r3, r3
 952:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 2240              		.loc 1 952 0
 2241 0048 1846     		mov	r0, r3
 2242 004a 0837     		adds	r7, r7, #8
 2243 004c BD46     		mov	sp, r7
 2244              		@ sp needed
 2245 004e 80BD     		pop	{r7, pc}
 2246              		.cfi_endproc
 2247              	.LFE128:
 2249              		.section	.text.SPI_I2S_DMACmd,"ax",%progbits
 2250              		.align	2
 2251              		.global	SPI_I2S_DMACmd
 2252              		.thumb
 2253              		.thumb_func
 2255              	SPI_I2S_DMACmd:
 2256              	.LFB129:
 953:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 954:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 955:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @}
 956:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 957:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 958:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /** @defgroup SPI_Group4 DMA transfers management functions
 959:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  *  @brief   DMA transfers management functions
 960:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *
 961:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @verbatim   
 962:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ===============================================================================
 963:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                          DMA transfers management functions
 964:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ===============================================================================  
 965:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 966:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @endverbatim
 967:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @{
 968:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 969:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 970:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 971:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Enables or disables the SPIx/I2Sx DMA interface.
 972:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2 or 3 
 973:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
 974:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPI_I2S_DMAReq: specifies the SPI DMA transfer request to be enabled or disabled. 
 975:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be any combination of the following values:
 976:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_DMAReq_Tx: Tx buffer DMA transfer request
 977:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_DMAReq_Rx: Rx buffer DMA transfer request
 978:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  NewState: new state of the selected SPI DMA transfer request.
 979:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 980:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 981:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 982:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_I2S_DMACmd(SPI_TypeDef* SPIx, uint16_t SPI_I2S_DMAReq, FunctionalState NewState)
 983:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 2257              		.loc 1 983 0
 2258              		.cfi_startproc
 2259              		@ args = 0, pretend = 0, frame = 8
 2260              		@ frame_needed = 1, uses_anonymous_args = 0
 2261 0000 80B5     		push	{r7, lr}
 2262              	.LCFI57:
 2263              		.cfi_def_cfa_offset 8
 2264              		.cfi_offset 7, -8
 2265              		.cfi_offset 14, -4
 2266 0002 82B0     		sub	sp, sp, #8
 2267              	.LCFI58:
 2268              		.cfi_def_cfa_offset 16
 2269 0004 00AF     		add	r7, sp, #0
 2270              	.LCFI59:
 2271              		.cfi_def_cfa_register 7
 2272 0006 7860     		str	r0, [r7, #4]
 2273 0008 1346     		mov	r3, r2
 2274 000a 0A46     		mov	r2, r1	@ movhi
 2275 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 2276 000e 7B70     		strb	r3, [r7, #1]
 984:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 985:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 2277              		.loc 1 985 0
 2278 0010 7A68     		ldr	r2, [r7, #4]
 2279 0012 4FF44053 		mov	r3, #12288
 2280 0016 C4F20103 		movt	r3, 16385
 2281 001a 9A42     		cmp	r2, r3
 2282 001c 20D0     		beq	.L102
 2283              		.loc 1 985 0 is_stmt 0 discriminator 1
 2284 001e 7A68     		ldr	r2, [r7, #4]
 2285 0020 4FF46053 		mov	r3, #14336
 2286 0024 C4F20003 		movt	r3, 16384
 2287 0028 9A42     		cmp	r2, r3
 2288 002a 19D0     		beq	.L102
 2289 002c 7A68     		ldr	r2, [r7, #4]
 2290 002e 4FF47053 		mov	r3, #15360
 2291 0032 C4F20003 		movt	r3, 16384
 2292 0036 9A42     		cmp	r2, r3
 2293 0038 12D0     		beq	.L102
 2294 003a 7A68     		ldr	r2, [r7, #4]
 2295 003c 4FF45053 		mov	r3, #13312
 2296 0040 C4F20003 		movt	r3, 16384
 2297 0044 9A42     		cmp	r2, r3
 2298 0046 0BD0     		beq	.L102
 2299 0048 7B68     		ldr	r3, [r7, #4]
 2300 004a B3F1402F 		cmp	r3, #1073758208
 2301 004e 07D0     		beq	.L102
 2302 0050 40F20000 		movw	r0, #:lower16:.LC0
 2303 0054 C0F20000 		movt	r0, #:upper16:.LC0
 2304 0058 40F2D931 		movw	r1, #985
 2305 005c FFF7FEFF 		bl	assert_failed
 2306              	.L102:
 986:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2307              		.loc 1 986 0 is_stmt 1
 2308 0060 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2309 0062 002B     		cmp	r3, #0
 2310 0064 0AD0     		beq	.L103
 2311              		.loc 1 986 0 is_stmt 0 discriminator 1
 2312 0066 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2313 0068 012B     		cmp	r3, #1
 2314 006a 07D0     		beq	.L103
 2315 006c 40F20000 		movw	r0, #:lower16:.LC0
 2316 0070 C0F20000 		movt	r0, #:upper16:.LC0
 2317 0074 40F2DA31 		movw	r1, #986
 2318 0078 FFF7FEFF 		bl	assert_failed
 2319              	.L103:
 987:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_DMAREQ(SPI_I2S_DMAReq));
 2320              		.loc 1 987 0 is_stmt 1
 2321 007c 7A88     		ldrh	r2, [r7, #2]
 2322 007e 4FF6FC73 		movw	r3, #65532
 2323 0082 1340     		ands	r3, r3, r2
 2324 0084 002B     		cmp	r3, #0
 2325 0086 02D1     		bne	.L104
 2326              		.loc 1 987 0 is_stmt 0 discriminator 2
 2327 0088 7B88     		ldrh	r3, [r7, #2]
 2328 008a 002B     		cmp	r3, #0
 2329 008c 07D1     		bne	.L105
 2330              	.L104:
 2331              		.loc 1 987 0 discriminator 1
 2332 008e 40F20000 		movw	r0, #:lower16:.LC0
 2333 0092 C0F20000 		movt	r0, #:upper16:.LC0
 2334 0096 40F2DB31 		movw	r1, #987
 2335 009a FFF7FEFF 		bl	assert_failed
 2336              	.L105:
 988:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 989:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 2337              		.loc 1 989 0 is_stmt 1
 2338 009e 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2339 00a0 002B     		cmp	r3, #0
 2340 00a2 08D0     		beq	.L106
 990:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 991:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Enable the selected SPI DMA requests */
 992:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR2 |= SPI_I2S_DMAReq;
 2341              		.loc 1 992 0
 2342 00a4 7B68     		ldr	r3, [r7, #4]
 2343 00a6 9B88     		ldrh	r3, [r3, #4]	@ movhi
 2344 00a8 9AB2     		uxth	r2, r3
 2345 00aa 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2346 00ac 1343     		orrs	r3, r3, r2
 2347 00ae 9AB2     		uxth	r2, r3
 2348 00b0 7B68     		ldr	r3, [r7, #4]
 2349 00b2 9A80     		strh	r2, [r3, #4]	@ movhi
 2350 00b4 09E0     		b	.L101
 2351              	.L106:
 993:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 994:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
 995:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 996:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Disable the selected SPI DMA requests */
 997:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR2 &= (uint16_t)~SPI_I2S_DMAReq;
 2352              		.loc 1 997 0
 2353 00b6 7B68     		ldr	r3, [r7, #4]
 2354 00b8 9B88     		ldrh	r3, [r3, #4]	@ movhi
 2355 00ba 9AB2     		uxth	r2, r3
 2356 00bc 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2357 00be DB43     		mvns	r3, r3
 2358 00c0 9BB2     		uxth	r3, r3
 2359 00c2 1340     		ands	r3, r3, r2
 2360 00c4 9AB2     		uxth	r2, r3
 2361 00c6 7B68     		ldr	r3, [r7, #4]
 2362 00c8 9A80     		strh	r2, [r3, #4]	@ movhi
 2363              	.L101:
 998:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 999:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 2364              		.loc 1 999 0
 2365 00ca 0837     		adds	r7, r7, #8
 2366 00cc BD46     		mov	sp, r7
 2367              		@ sp needed
 2368 00ce 80BD     		pop	{r7, pc}
 2369              		.cfi_endproc
 2370              	.LFE129:
 2372              		.section	.text.SPI_I2S_ITConfig,"ax",%progbits
 2373              		.align	2
 2374              		.global	SPI_I2S_ITConfig
 2375              		.thumb
 2376              		.thumb_func
 2378              	SPI_I2S_ITConfig:
 2379              	.LFB130:
1000:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1001:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
1002:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @}
1003:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
1004:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1005:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /** @defgroup SPI_Group5 Interrupts and flags management functions
1006:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  *  @brief   Interrupts and flags management functions
1007:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *
1008:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @verbatim   
1009:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ===============================================================================
1010:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                          Interrupts and flags management functions
1011:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ===============================================================================  
1012:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1013:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   This section provides a set of functions allowing to configure the SPI Interrupts 
1014:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   sources and check or clear the flags or pending bits status.
1015:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   The user should identify which mode will be used in his application to manage 
1016:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   the communication: Polling mode, Interrupt mode or DMA mode. 
1017:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     
1018:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   Polling Mode
1019:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   =============
1020:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   In Polling Mode, the SPI/I2S communication can be managed by 9 flags:
1021:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      1. SPI_I2S_FLAG_TXE : to indicate the status of the transmit buffer register
1022:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      2. SPI_I2S_FLAG_RXNE : to indicate the status of the receive buffer register
1023:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      3. SPI_I2S_FLAG_BSY : to indicate the state of the communication layer of the SPI.
1024:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      4. SPI_FLAG_CRCERR : to indicate if a CRC Calculation error occur              
1025:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      5. SPI_FLAG_MODF : to indicate if a Mode Fault error occur
1026:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      6. SPI_I2S_FLAG_OVR : to indicate if an Overrun error occur
1027:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      7. I2S_FLAG_TIFRFE: to indicate a Frame Format error occurs.
1028:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      8. I2S_FLAG_UDR: to indicate an Underrun error occurs.
1029:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      9. I2S_FLAG_CHSIDE: to indicate Channel Side.
1030:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1031:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @note Do not use the BSY flag to handle each data transmission or reception.  It is
1032:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       better to use the TXE and RXNE flags instead.
1033:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1034:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   In this Mode it is advised to use the following functions:
1035:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      - FlagStatus SPI_I2S_GetFlagStatus(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG);
1036:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      - void SPI_I2S_ClearFlag(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG);
1037:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1038:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   Interrupt Mode
1039:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   ===============
1040:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   In Interrupt Mode, the SPI communication can be managed by 3 interrupt sources
1041:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   and 7 pending bits: 
1042:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   Pending Bits:
1043:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   ------------- 
1044:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      1. SPI_I2S_IT_TXE : to indicate the status of the transmit buffer register
1045:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      2. SPI_I2S_IT_RXNE : to indicate the status of the receive buffer register
1046:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      3. SPI_IT_CRCERR : to indicate if a CRC Calculation error occur (available in SPI mode only)  
1047:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      4. SPI_IT_MODF : to indicate if a Mode Fault error occur (available in SPI mode only)
1048:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      5. SPI_I2S_IT_OVR : to indicate if an Overrun error occur
1049:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      6. I2S_IT_UDR : to indicate an Underrun Error occurs (available in I2S mode only).
1050:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      7. I2S_FLAG_TIFRFE : to indicate a Frame Format error occurs (available in TI mode only).
1051:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1052:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   Interrupt Source:
1053:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   -----------------
1054:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      1. SPI_I2S_IT_TXE: specifies the interrupt source for the Tx buffer empty 
1055:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                         interrupt.  
1056:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      2. SPI_I2S_IT_RXNE : specifies the interrupt source for the Rx buffer not 
1057:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                           empty interrupt.
1058:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      3. SPI_I2S_IT_ERR : specifies the interrupt source for the errors interrupt.
1059:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1060:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   In this Mode it is advised to use the following functions:
1061:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      - void SPI_I2S_ITConfig(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT, FunctionalState NewState);
1062:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      - ITStatus SPI_I2S_GetITStatus(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT);
1063:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      - void SPI_I2S_ClearITPendingBit(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT);
1064:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1065:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   DMA Mode
1066:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   ========
1067:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   In DMA Mode, the SPI communication can be managed by 2 DMA Channel requests:
1068:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      1. SPI_I2S_DMAReq_Tx: specifies the Tx buffer DMA transfer request
1069:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      2. SPI_I2S_DMAReq_Rx: specifies the Rx buffer DMA transfer request
1070:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1071:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   In this Mode it is advised to use the following function:
1072:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     - void SPI_I2S_DMACmd(SPI_TypeDef* SPIx, uint16_t SPI_I2S_DMAReq, FunctionalState NewState);
1073:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1074:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @endverbatim
1075:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @{
1076:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
1077:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1078:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
1079:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Enables or disables the specified SPI/I2S interrupts.
1080:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2 or 3 
1081:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
1082:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI interrupt source to be enabled or disabled. 
1083:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
1084:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_TXE: Tx buffer empty interrupt mask
1085:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_RXNE: Rx buffer not empty interrupt mask
1086:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_ERR: Error interrupt mask
1087:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  NewState: new state of the specified SPI interrupt.
1088:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
1089:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
1090:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
1091:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_I2S_ITConfig(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT, FunctionalState NewState)
1092:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 2380              		.loc 1 1092 0
 2381              		.cfi_startproc
 2382              		@ args = 0, pretend = 0, frame = 16
 2383              		@ frame_needed = 1, uses_anonymous_args = 0
 2384 0000 80B5     		push	{r7, lr}
 2385              	.LCFI60:
 2386              		.cfi_def_cfa_offset 8
 2387              		.cfi_offset 7, -8
 2388              		.cfi_offset 14, -4
 2389 0002 84B0     		sub	sp, sp, #16
 2390              	.LCFI61:
 2391              		.cfi_def_cfa_offset 24
 2392 0004 00AF     		add	r7, sp, #0
 2393              	.LCFI62:
 2394              		.cfi_def_cfa_register 7
 2395 0006 7860     		str	r0, [r7, #4]
 2396 0008 1346     		mov	r3, r2
 2397 000a 0A46     		mov	r2, r1
 2398 000c FA70     		strb	r2, [r7, #3]
 2399 000e BB70     		strb	r3, [r7, #2]
1093:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint16_t itpos = 0, itmask = 0 ;
 2400              		.loc 1 1093 0
 2401 0010 0023     		movs	r3, #0
 2402 0012 FB81     		strh	r3, [r7, #14]	@ movhi
 2403 0014 0023     		movs	r3, #0
 2404 0016 BB81     		strh	r3, [r7, #12]	@ movhi
1094:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
1095:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
1096:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 2405              		.loc 1 1096 0
 2406 0018 7A68     		ldr	r2, [r7, #4]
 2407 001a 4FF44053 		mov	r3, #12288
 2408 001e C4F20103 		movt	r3, 16385
 2409 0022 9A42     		cmp	r2, r3
 2410 0024 20D0     		beq	.L109
 2411              		.loc 1 1096 0 is_stmt 0 discriminator 1
 2412 0026 7A68     		ldr	r2, [r7, #4]
 2413 0028 4FF46053 		mov	r3, #14336
 2414 002c C4F20003 		movt	r3, 16384
 2415 0030 9A42     		cmp	r2, r3
 2416 0032 19D0     		beq	.L109
 2417 0034 7A68     		ldr	r2, [r7, #4]
 2418 0036 4FF47053 		mov	r3, #15360
 2419 003a C4F20003 		movt	r3, 16384
 2420 003e 9A42     		cmp	r2, r3
 2421 0040 12D0     		beq	.L109
 2422 0042 7A68     		ldr	r2, [r7, #4]
 2423 0044 4FF45053 		mov	r3, #13312
 2424 0048 C4F20003 		movt	r3, 16384
 2425 004c 9A42     		cmp	r2, r3
 2426 004e 0BD0     		beq	.L109
 2427 0050 7B68     		ldr	r3, [r7, #4]
 2428 0052 B3F1402F 		cmp	r3, #1073758208
 2429 0056 07D0     		beq	.L109
 2430 0058 40F20000 		movw	r0, #:lower16:.LC0
 2431 005c C0F20000 		movt	r0, #:upper16:.LC0
 2432 0060 4FF48961 		mov	r1, #1096
 2433 0064 FFF7FEFF 		bl	assert_failed
 2434              	.L109:
1097:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2435              		.loc 1 1097 0 is_stmt 1
 2436 0068 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2437 006a 002B     		cmp	r3, #0
 2438 006c 0AD0     		beq	.L110
 2439              		.loc 1 1097 0 is_stmt 0 discriminator 1
 2440 006e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2441 0070 012B     		cmp	r3, #1
 2442 0072 07D0     		beq	.L110
 2443 0074 40F20000 		movw	r0, #:lower16:.LC0
 2444 0078 C0F20000 		movt	r0, #:upper16:.LC0
 2445 007c 40F24941 		movw	r1, #1097
 2446 0080 FFF7FEFF 		bl	assert_failed
 2447              	.L110:
1098:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_CONFIG_IT(SPI_I2S_IT));
 2448              		.loc 1 1098 0 is_stmt 1
 2449 0084 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2450 0086 712B     		cmp	r3, #113
 2451 0088 0DD0     		beq	.L111
 2452              		.loc 1 1098 0 is_stmt 0 discriminator 1
 2453 008a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2454 008c 602B     		cmp	r3, #96
 2455 008e 0AD0     		beq	.L111
 2456 0090 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2457 0092 502B     		cmp	r3, #80
 2458 0094 07D0     		beq	.L111
 2459 0096 40F20000 		movw	r0, #:lower16:.LC0
 2460 009a C0F20000 		movt	r0, #:upper16:.LC0
 2461 009e 40F24A41 		movw	r1, #1098
 2462 00a2 FFF7FEFF 		bl	assert_failed
 2463              	.L111:
1099:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1100:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Get the SPI IT index */
1101:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   itpos = SPI_I2S_IT >> 4;
 2464              		.loc 1 1101 0 is_stmt 1
 2465 00a6 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2466 00a8 1B09     		lsrs	r3, r3, #4
 2467 00aa DBB2     		uxtb	r3, r3
 2468 00ac FB81     		strh	r3, [r7, #14]	@ movhi
1102:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1103:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Set the IT mask */
1104:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   itmask = (uint16_t)1 << (uint16_t)itpos;
 2469              		.loc 1 1104 0
 2470 00ae FB89     		ldrh	r3, [r7, #14]
 2471 00b0 0122     		movs	r2, #1
 2472 00b2 02FA03F3 		lsl	r3, r2, r3
 2473 00b6 BB81     		strh	r3, [r7, #12]	@ movhi
1105:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1106:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 2474              		.loc 1 1106 0
 2475 00b8 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2476 00ba 002B     		cmp	r3, #0
 2477 00bc 08D0     		beq	.L112
1107:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
1108:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Enable the selected SPI interrupt */
1109:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR2 |= itmask;
 2478              		.loc 1 1109 0
 2479 00be 7B68     		ldr	r3, [r7, #4]
 2480 00c0 9B88     		ldrh	r3, [r3, #4]	@ movhi
 2481 00c2 9AB2     		uxth	r2, r3
 2482 00c4 BB89     		ldrh	r3, [r7, #12]	@ movhi
 2483 00c6 1343     		orrs	r3, r3, r2
 2484 00c8 9AB2     		uxth	r2, r3
 2485 00ca 7B68     		ldr	r3, [r7, #4]
 2486 00cc 9A80     		strh	r2, [r3, #4]	@ movhi
 2487 00ce 09E0     		b	.L108
 2488              	.L112:
1110:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
1111:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
1112:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
1113:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Disable the selected SPI interrupt */
1114:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR2 &= (uint16_t)~itmask;
 2489              		.loc 1 1114 0
 2490 00d0 7B68     		ldr	r3, [r7, #4]
 2491 00d2 9B88     		ldrh	r3, [r3, #4]	@ movhi
 2492 00d4 9AB2     		uxth	r2, r3
 2493 00d6 BB89     		ldrh	r3, [r7, #12]	@ movhi
 2494 00d8 DB43     		mvns	r3, r3
 2495 00da 9BB2     		uxth	r3, r3
 2496 00dc 1340     		ands	r3, r3, r2
 2497 00de 9AB2     		uxth	r2, r3
 2498 00e0 7B68     		ldr	r3, [r7, #4]
 2499 00e2 9A80     		strh	r2, [r3, #4]	@ movhi
 2500              	.L108:
1115:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
1116:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 2501              		.loc 1 1116 0
 2502 00e4 1037     		adds	r7, r7, #16
 2503 00e6 BD46     		mov	sp, r7
 2504              		@ sp needed
 2505 00e8 80BD     		pop	{r7, pc}
 2506              		.cfi_endproc
 2507              	.LFE130:
 2509 00ea 00BF     		.section	.text.SPI_I2S_GetFlagStatus,"ax",%progbits
 2510              		.align	2
 2511              		.global	SPI_I2S_GetFlagStatus
 2512              		.thumb
 2513              		.thumb_func
 2515              	SPI_I2S_GetFlagStatus:
 2516              	.LFB131:
1117:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1118:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
1119:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Checks whether the specified SPIx/I2Sx flag is set or not.
1120:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2 or 3 
1121:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
1122:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPI_I2S_FLAG: specifies the SPI flag to check. 
1123:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
1124:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_TXE: Transmit buffer empty flag.
1125:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_RXNE: Receive buffer not empty flag.
1126:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_BSY: Busy flag.
1127:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_OVR: Overrun flag.
1128:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_FLAG_MODF: Mode Fault flag.
1129:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_FLAG_CRCERR: CRC Error flag.
1130:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_TIFRFE: Format Error.
1131:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg I2S_FLAG_UDR: Underrun Error flag.
1132:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg I2S_FLAG_CHSIDE: Channel Side flag.  
1133:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval The new state of SPI_I2S_FLAG (SET or RESET).
1134:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
1135:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** FlagStatus SPI_I2S_GetFlagStatus(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
1136:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 2517              		.loc 1 1136 0
 2518              		.cfi_startproc
 2519              		@ args = 0, pretend = 0, frame = 16
 2520              		@ frame_needed = 1, uses_anonymous_args = 0
 2521 0000 80B5     		push	{r7, lr}
 2522              	.LCFI63:
 2523              		.cfi_def_cfa_offset 8
 2524              		.cfi_offset 7, -8
 2525              		.cfi_offset 14, -4
 2526 0002 84B0     		sub	sp, sp, #16
 2527              	.LCFI64:
 2528              		.cfi_def_cfa_offset 24
 2529 0004 00AF     		add	r7, sp, #0
 2530              	.LCFI65:
 2531              		.cfi_def_cfa_register 7
 2532 0006 7860     		str	r0, [r7, #4]
 2533 0008 0B46     		mov	r3, r1
 2534 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1137:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   FlagStatus bitstatus = RESET;
 2535              		.loc 1 1137 0
 2536 000c 0023     		movs	r3, #0
 2537 000e FB73     		strb	r3, [r7, #15]
1138:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
1139:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 2538              		.loc 1 1139 0
 2539 0010 7A68     		ldr	r2, [r7, #4]
 2540 0012 4FF44053 		mov	r3, #12288
 2541 0016 C4F20103 		movt	r3, 16385
 2542 001a 9A42     		cmp	r2, r3
 2543 001c 20D0     		beq	.L115
 2544              		.loc 1 1139 0 is_stmt 0 discriminator 1
 2545 001e 7A68     		ldr	r2, [r7, #4]
 2546 0020 4FF46053 		mov	r3, #14336
 2547 0024 C4F20003 		movt	r3, 16384
 2548 0028 9A42     		cmp	r2, r3
 2549 002a 19D0     		beq	.L115
 2550 002c 7A68     		ldr	r2, [r7, #4]
 2551 002e 4FF47053 		mov	r3, #15360
 2552 0032 C4F20003 		movt	r3, 16384
 2553 0036 9A42     		cmp	r2, r3
 2554 0038 12D0     		beq	.L115
 2555 003a 7A68     		ldr	r2, [r7, #4]
 2556 003c 4FF45053 		mov	r3, #13312
 2557 0040 C4F20003 		movt	r3, 16384
 2558 0044 9A42     		cmp	r2, r3
 2559 0046 0BD0     		beq	.L115
 2560 0048 7B68     		ldr	r3, [r7, #4]
 2561 004a B3F1402F 		cmp	r3, #1073758208
 2562 004e 07D0     		beq	.L115
 2563 0050 40F20000 		movw	r0, #:lower16:.LC0
 2564 0054 C0F20000 		movt	r0, #:upper16:.LC0
 2565 0058 40F27341 		movw	r1, #1139
 2566 005c FFF7FEFF 		bl	assert_failed
 2567              	.L115:
1140:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_GET_FLAG(SPI_I2S_FLAG));
 2568              		.loc 1 1140 0 is_stmt 1
 2569 0060 7B88     		ldrh	r3, [r7, #2]
 2570 0062 802B     		cmp	r3, #128
 2571 0064 20D0     		beq	.L116
 2572              		.loc 1 1140 0 is_stmt 0 discriminator 1
 2573 0066 7B88     		ldrh	r3, [r7, #2]
 2574 0068 402B     		cmp	r3, #64
 2575 006a 1DD0     		beq	.L116
 2576 006c 7B88     		ldrh	r3, [r7, #2]
 2577 006e 202B     		cmp	r3, #32
 2578 0070 1AD0     		beq	.L116
 2579 0072 7B88     		ldrh	r3, [r7, #2]
 2580 0074 102B     		cmp	r3, #16
 2581 0076 17D0     		beq	.L116
 2582 0078 7B88     		ldrh	r3, [r7, #2]
 2583 007a 082B     		cmp	r3, #8
 2584 007c 14D0     		beq	.L116
 2585 007e 7B88     		ldrh	r3, [r7, #2]
 2586 0080 042B     		cmp	r3, #4
 2587 0082 11D0     		beq	.L116
 2588 0084 7B88     		ldrh	r3, [r7, #2]
 2589 0086 022B     		cmp	r3, #2
 2590 0088 0ED0     		beq	.L116
 2591 008a 7B88     		ldrh	r3, [r7, #2]
 2592 008c 012B     		cmp	r3, #1
 2593 008e 0BD0     		beq	.L116
 2594 0090 7B88     		ldrh	r3, [r7, #2]
 2595 0092 B3F5807F 		cmp	r3, #256
 2596 0096 07D0     		beq	.L116
 2597 0098 40F20000 		movw	r0, #:lower16:.LC0
 2598 009c C0F20000 		movt	r0, #:upper16:.LC0
 2599 00a0 40F27441 		movw	r1, #1140
 2600 00a4 FFF7FEFF 		bl	assert_failed
 2601              	.L116:
1141:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
1142:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the status of the specified SPI flag */
1143:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if ((SPIx->SR & SPI_I2S_FLAG) != (uint16_t)RESET)
 2602              		.loc 1 1143 0 is_stmt 1
 2603 00a8 7B68     		ldr	r3, [r7, #4]
 2604 00aa 1B89     		ldrh	r3, [r3, #8]	@ movhi
 2605 00ac 9AB2     		uxth	r2, r3
 2606 00ae 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2607 00b0 1340     		ands	r3, r3, r2
 2608 00b2 9BB2     		uxth	r3, r3
 2609 00b4 002B     		cmp	r3, #0
 2610 00b6 02D0     		beq	.L117
1144:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
1145:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* SPI_I2S_FLAG is set */
1146:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     bitstatus = SET;
 2611              		.loc 1 1146 0
 2612 00b8 0123     		movs	r3, #1
 2613 00ba FB73     		strb	r3, [r7, #15]
 2614 00bc 01E0     		b	.L118
 2615              	.L117:
1147:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
1148:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
1149:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
1150:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* SPI_I2S_FLAG is reset */
1151:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     bitstatus = RESET;
 2616              		.loc 1 1151 0
 2617 00be 0023     		movs	r3, #0
 2618 00c0 FB73     		strb	r3, [r7, #15]
 2619              	.L118:
1152:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
1153:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Return the SPI_I2S_FLAG status */
1154:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   return  bitstatus;
 2620              		.loc 1 1154 0
 2621 00c2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1155:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 2622              		.loc 1 1155 0
 2623 00c4 1846     		mov	r0, r3
 2624 00c6 1037     		adds	r7, r7, #16
 2625 00c8 BD46     		mov	sp, r7
 2626              		@ sp needed
 2627 00ca 80BD     		pop	{r7, pc}
 2628              		.cfi_endproc
 2629              	.LFE131:
 2631              		.section	.text.SPI_I2S_ClearFlag,"ax",%progbits
 2632              		.align	2
 2633              		.global	SPI_I2S_ClearFlag
 2634              		.thumb
 2635              		.thumb_func
 2637              	SPI_I2S_ClearFlag:
 2638              	.LFB132:
1156:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1157:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
1158:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Clears the SPIx CRC Error (CRCERR) flag.
1159:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2 or 3 
1160:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
1161:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPI_I2S_FLAG: specifies the SPI flag to clear. 
1162:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This function clears only CRCERR flag.
1163:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_FLAG_CRCERR: CRC Error flag.  
1164:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *  
1165:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   OVR (OverRun error) flag is cleared by software sequence: a read 
1166:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          operation to SPI_DR register (SPI_I2S_ReceiveData()) followed by a read 
1167:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          operation to SPI_SR register (SPI_I2S_GetFlagStatus()).
1168:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   UDR (UnderRun error) flag is cleared by a read operation to 
1169:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          SPI_SR register (SPI_I2S_GetFlagStatus()).   
1170:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   MODF (Mode Fault) flag is cleared by software sequence: a read/write 
1171:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          operation to SPI_SR register (SPI_I2S_GetFlagStatus()) followed by a 
1172:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          write operation to SPI_CR1 register (SPI_Cmd() to enable the SPI).
1173:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *  
1174:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
1175:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
1176:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_I2S_ClearFlag(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
1177:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 2639              		.loc 1 1177 0
 2640              		.cfi_startproc
 2641              		@ args = 0, pretend = 0, frame = 8
 2642              		@ frame_needed = 1, uses_anonymous_args = 0
 2643 0000 80B5     		push	{r7, lr}
 2644              	.LCFI66:
 2645              		.cfi_def_cfa_offset 8
 2646              		.cfi_offset 7, -8
 2647              		.cfi_offset 14, -4
 2648 0002 82B0     		sub	sp, sp, #8
 2649              	.LCFI67:
 2650              		.cfi_def_cfa_offset 16
 2651 0004 00AF     		add	r7, sp, #0
 2652              	.LCFI68:
 2653              		.cfi_def_cfa_register 7
 2654 0006 7860     		str	r0, [r7, #4]
 2655 0008 0B46     		mov	r3, r1
 2656 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1178:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
1179:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 2657              		.loc 1 1179 0
 2658 000c 7A68     		ldr	r2, [r7, #4]
 2659 000e 4FF44053 		mov	r3, #12288
 2660 0012 C4F20103 		movt	r3, 16385
 2661 0016 9A42     		cmp	r2, r3
 2662 0018 20D0     		beq	.L121
 2663              		.loc 1 1179 0 is_stmt 0 discriminator 1
 2664 001a 7A68     		ldr	r2, [r7, #4]
 2665 001c 4FF46053 		mov	r3, #14336
 2666 0020 C4F20003 		movt	r3, 16384
 2667 0024 9A42     		cmp	r2, r3
 2668 0026 19D0     		beq	.L121
 2669 0028 7A68     		ldr	r2, [r7, #4]
 2670 002a 4FF47053 		mov	r3, #15360
 2671 002e C4F20003 		movt	r3, 16384
 2672 0032 9A42     		cmp	r2, r3
 2673 0034 12D0     		beq	.L121
 2674 0036 7A68     		ldr	r2, [r7, #4]
 2675 0038 4FF45053 		mov	r3, #13312
 2676 003c C4F20003 		movt	r3, 16384
 2677 0040 9A42     		cmp	r2, r3
 2678 0042 0BD0     		beq	.L121
 2679 0044 7B68     		ldr	r3, [r7, #4]
 2680 0046 B3F1402F 		cmp	r3, #1073758208
 2681 004a 07D0     		beq	.L121
 2682 004c 40F20000 		movw	r0, #:lower16:.LC0
 2683 0050 C0F20000 		movt	r0, #:upper16:.LC0
 2684 0054 40F29B41 		movw	r1, #1179
 2685 0058 FFF7FEFF 		bl	assert_failed
 2686              	.L121:
1180:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_CLEAR_FLAG(SPI_I2S_FLAG));
 2687              		.loc 1 1180 0 is_stmt 1
 2688 005c 7B88     		ldrh	r3, [r7, #2]
 2689 005e 102B     		cmp	r3, #16
 2690 0060 07D0     		beq	.L122
 2691              		.loc 1 1180 0 is_stmt 0 discriminator 1
 2692 0062 40F20000 		movw	r0, #:lower16:.LC0
 2693 0066 C0F20000 		movt	r0, #:upper16:.LC0
 2694 006a 40F29C41 		movw	r1, #1180
 2695 006e FFF7FEFF 		bl	assert_failed
 2696              	.L122:
1181:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     
1182:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Clear the selected SPI CRC Error (CRCERR) flag */
1183:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->SR = (uint16_t)~SPI_I2S_FLAG;
 2697              		.loc 1 1183 0 is_stmt 1
 2698 0072 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2699 0074 DB43     		mvns	r3, r3
 2700 0076 9AB2     		uxth	r2, r3
 2701 0078 7B68     		ldr	r3, [r7, #4]
 2702 007a 1A81     		strh	r2, [r3, #8]	@ movhi
1184:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 2703              		.loc 1 1184 0
 2704 007c 0837     		adds	r7, r7, #8
 2705 007e BD46     		mov	sp, r7
 2706              		@ sp needed
 2707 0080 80BD     		pop	{r7, pc}
 2708              		.cfi_endproc
 2709              	.LFE132:
 2711 0082 00BF     		.section	.text.SPI_I2S_GetITStatus,"ax",%progbits
 2712              		.align	2
 2713              		.global	SPI_I2S_GetITStatus
 2714              		.thumb
 2715              		.thumb_func
 2717              	SPI_I2S_GetITStatus:
 2718              	.LFB133:
1185:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1186:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
1187:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Checks whether the specified SPIx/I2Sx interrupt has occurred or not.
1188:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2 or 3 
1189:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode.  
1190:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI interrupt source to check. 
1191:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
1192:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_TXE: Transmit buffer empty interrupt.
1193:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_RXNE: Receive buffer not empty interrupt.
1194:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_OVR: Overrun interrupt.
1195:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_IT_MODF: Mode Fault interrupt.
1196:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_IT_CRCERR: CRC Error interrupt.
1197:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg I2S_IT_UDR: Underrun interrupt.  
1198:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_TIFRFE: Format Error interrupt.  
1199:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval The new state of SPI_I2S_IT (SET or RESET).
1200:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
1201:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** ITStatus SPI_I2S_GetITStatus(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
1202:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 2719              		.loc 1 1202 0
 2720              		.cfi_startproc
 2721              		@ args = 0, pretend = 0, frame = 16
 2722              		@ frame_needed = 1, uses_anonymous_args = 0
 2723 0000 80B5     		push	{r7, lr}
 2724              	.LCFI69:
 2725              		.cfi_def_cfa_offset 8
 2726              		.cfi_offset 7, -8
 2727              		.cfi_offset 14, -4
 2728 0002 84B0     		sub	sp, sp, #16
 2729              	.LCFI70:
 2730              		.cfi_def_cfa_offset 24
 2731 0004 00AF     		add	r7, sp, #0
 2732              	.LCFI71:
 2733              		.cfi_def_cfa_register 7
 2734 0006 7860     		str	r0, [r7, #4]
 2735 0008 0B46     		mov	r3, r1
 2736 000a FB70     		strb	r3, [r7, #3]
1203:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   ITStatus bitstatus = RESET;
 2737              		.loc 1 1203 0
 2738 000c 0023     		movs	r3, #0
 2739 000e FB73     		strb	r3, [r7, #15]
1204:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint16_t itpos = 0, itmask = 0, enablestatus = 0;
 2740              		.loc 1 1204 0
 2741 0010 0023     		movs	r3, #0
 2742 0012 BB81     		strh	r3, [r7, #12]	@ movhi
 2743 0014 0023     		movs	r3, #0
 2744 0016 7B81     		strh	r3, [r7, #10]	@ movhi
 2745 0018 0023     		movs	r3, #0
 2746 001a 3B81     		strh	r3, [r7, #8]	@ movhi
1205:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1206:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
1207:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 2747              		.loc 1 1207 0
 2748 001c 7A68     		ldr	r2, [r7, #4]
 2749 001e 4FF44053 		mov	r3, #12288
 2750 0022 C4F20103 		movt	r3, 16385
 2751 0026 9A42     		cmp	r2, r3
 2752 0028 20D0     		beq	.L124
 2753              		.loc 1 1207 0 is_stmt 0 discriminator 1
 2754 002a 7A68     		ldr	r2, [r7, #4]
 2755 002c 4FF46053 		mov	r3, #14336
 2756 0030 C4F20003 		movt	r3, 16384
 2757 0034 9A42     		cmp	r2, r3
 2758 0036 19D0     		beq	.L124
 2759 0038 7A68     		ldr	r2, [r7, #4]
 2760 003a 4FF47053 		mov	r3, #15360
 2761 003e C4F20003 		movt	r3, 16384
 2762 0042 9A42     		cmp	r2, r3
 2763 0044 12D0     		beq	.L124
 2764 0046 7A68     		ldr	r2, [r7, #4]
 2765 0048 4FF45053 		mov	r3, #13312
 2766 004c C4F20003 		movt	r3, 16384
 2767 0050 9A42     		cmp	r2, r3
 2768 0052 0BD0     		beq	.L124
 2769 0054 7B68     		ldr	r3, [r7, #4]
 2770 0056 B3F1402F 		cmp	r3, #1073758208
 2771 005a 07D0     		beq	.L124
 2772 005c 40F20000 		movw	r0, #:lower16:.LC0
 2773 0060 C0F20000 		movt	r0, #:upper16:.LC0
 2774 0064 40F2B741 		movw	r1, #1207
 2775 0068 FFF7FEFF 		bl	assert_failed
 2776              	.L124:
1208:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_GET_IT(SPI_I2S_IT));
 2777              		.loc 1 1208 0 is_stmt 1
 2778 006c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2779 006e 602B     		cmp	r3, #96
 2780 0070 19D0     		beq	.L125
 2781              		.loc 1 1208 0 is_stmt 0 discriminator 1
 2782 0072 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2783 0074 712B     		cmp	r3, #113
 2784 0076 16D0     		beq	.L125
 2785 0078 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2786 007a 542B     		cmp	r3, #84
 2787 007c 13D0     		beq	.L125
 2788 007e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2789 0080 552B     		cmp	r3, #85
 2790 0082 10D0     		beq	.L125
 2791 0084 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2792 0086 562B     		cmp	r3, #86
 2793 0088 0DD0     		beq	.L125
 2794 008a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2795 008c 532B     		cmp	r3, #83
 2796 008e 0AD0     		beq	.L125
 2797 0090 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2798 0092 582B     		cmp	r3, #88
 2799 0094 07D0     		beq	.L125
 2800 0096 40F20000 		movw	r0, #:lower16:.LC0
 2801 009a C0F20000 		movt	r0, #:upper16:.LC0
 2802 009e 4FF49761 		mov	r1, #1208
 2803 00a2 FFF7FEFF 		bl	assert_failed
 2804              	.L125:
1209:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1210:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Get the SPI_I2S_IT index */
1211:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   itpos = 0x01 << (SPI_I2S_IT & 0x0F);
 2805              		.loc 1 1211 0 is_stmt 1
 2806 00a6 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2807 00a8 03F00F03 		and	r3, r3, #15
 2808 00ac 0122     		movs	r2, #1
 2809 00ae 02FA03F3 		lsl	r3, r2, r3
 2810 00b2 BB81     		strh	r3, [r7, #12]	@ movhi
1212:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1213:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Get the SPI_I2S_IT IT mask */
1214:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   itmask = SPI_I2S_IT >> 4;
 2811              		.loc 1 1214 0
 2812 00b4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2813 00b6 1B09     		lsrs	r3, r3, #4
 2814 00b8 DBB2     		uxtb	r3, r3
 2815 00ba 7B81     		strh	r3, [r7, #10]	@ movhi
1215:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1216:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Set the IT mask */
1217:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   itmask = 0x01 << itmask;
 2816              		.loc 1 1217 0
 2817 00bc 7B89     		ldrh	r3, [r7, #10]
 2818 00be 0122     		movs	r2, #1
 2819 00c0 02FA03F3 		lsl	r3, r2, r3
 2820 00c4 7B81     		strh	r3, [r7, #10]	@ movhi
1218:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1219:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Get the SPI_I2S_IT enable bit status */
1220:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   enablestatus = (SPIx->CR2 & itmask) ;
 2821              		.loc 1 1220 0
 2822 00c6 7B68     		ldr	r3, [r7, #4]
 2823 00c8 9B88     		ldrh	r3, [r3, #4]	@ movhi
 2824 00ca 9AB2     		uxth	r2, r3
 2825 00cc 7B89     		ldrh	r3, [r7, #10]	@ movhi
 2826 00ce 1340     		ands	r3, r3, r2
 2827 00d0 3B81     		strh	r3, [r7, #8]	@ movhi
1221:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1222:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the status of the specified SPI interrupt */
1223:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (((SPIx->SR & itpos) != (uint16_t)RESET) && enablestatus)
 2828              		.loc 1 1223 0
 2829 00d2 7B68     		ldr	r3, [r7, #4]
 2830 00d4 1B89     		ldrh	r3, [r3, #8]	@ movhi
 2831 00d6 9AB2     		uxth	r2, r3
 2832 00d8 BB89     		ldrh	r3, [r7, #12]	@ movhi
 2833 00da 1340     		ands	r3, r3, r2
 2834 00dc 9BB2     		uxth	r3, r3
 2835 00de 002B     		cmp	r3, #0
 2836 00e0 05D0     		beq	.L126
 2837              		.loc 1 1223 0 is_stmt 0 discriminator 1
 2838 00e2 3B89     		ldrh	r3, [r7, #8]
 2839 00e4 002B     		cmp	r3, #0
 2840 00e6 02D0     		beq	.L126
1224:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
1225:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* SPI_I2S_IT is set */
1226:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     bitstatus = SET;
 2841              		.loc 1 1226 0 is_stmt 1
 2842 00e8 0123     		movs	r3, #1
 2843 00ea FB73     		strb	r3, [r7, #15]
 2844 00ec 01E0     		b	.L127
 2845              	.L126:
1227:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
1228:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
1229:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
1230:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* SPI_I2S_IT is reset */
1231:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     bitstatus = RESET;
 2846              		.loc 1 1231 0
 2847 00ee 0023     		movs	r3, #0
 2848 00f0 FB73     		strb	r3, [r7, #15]
 2849              	.L127:
1232:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
1233:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Return the SPI_I2S_IT status */
1234:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   return bitstatus;
 2850              		.loc 1 1234 0
 2851 00f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1235:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 2852              		.loc 1 1235 0
 2853 00f4 1846     		mov	r0, r3
 2854 00f6 1037     		adds	r7, r7, #16
 2855 00f8 BD46     		mov	sp, r7
 2856              		@ sp needed
 2857 00fa 80BD     		pop	{r7, pc}
 2858              		.cfi_endproc
 2859              	.LFE133:
 2861              		.section	.text.SPI_I2S_ClearITPendingBit,"ax",%progbits
 2862              		.align	2
 2863              		.global	SPI_I2S_ClearITPendingBit
 2864              		.thumb
 2865              		.thumb_func
 2867              	SPI_I2S_ClearITPendingBit:
 2868              	.LFB134:
1236:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1237:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
1238:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Clears the SPIx CRC Error (CRCERR) interrupt pending bit.
1239:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2 or 3 
1240:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode.  
1241:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI interrupt pending bit to clear.
1242:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         This function clears only CRCERR interrupt pending bit.   
1243:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_IT_CRCERR: CRC Error interrupt.
1244:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *   
1245:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   OVR (OverRun Error) interrupt pending bit is cleared by software 
1246:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          sequence: a read operation to SPI_DR register (SPI_I2S_ReceiveData()) 
1247:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          followed by a read operation to SPI_SR register (SPI_I2S_GetITStatus()).
1248:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   UDR (UnderRun Error) interrupt pending bit is cleared by a read 
1249:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          operation to SPI_SR register (SPI_I2S_GetITStatus()).   
1250:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   MODF (Mode Fault) interrupt pending bit is cleared by software sequence:
1251:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          a read/write operation to SPI_SR register (SPI_I2S_GetITStatus()) 
1252:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          followed by a write operation to SPI_CR1 register (SPI_Cmd() to enable 
1253:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          the SPI).
1254:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
1255:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
1256:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_I2S_ClearITPendingBit(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
1257:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 2869              		.loc 1 1257 0
 2870              		.cfi_startproc
 2871              		@ args = 0, pretend = 0, frame = 16
 2872              		@ frame_needed = 1, uses_anonymous_args = 0
 2873 0000 80B5     		push	{r7, lr}
 2874              	.LCFI72:
 2875              		.cfi_def_cfa_offset 8
 2876              		.cfi_offset 7, -8
 2877              		.cfi_offset 14, -4
 2878 0002 84B0     		sub	sp, sp, #16
 2879              	.LCFI73:
 2880              		.cfi_def_cfa_offset 24
 2881 0004 00AF     		add	r7, sp, #0
 2882              	.LCFI74:
 2883              		.cfi_def_cfa_register 7
 2884 0006 7860     		str	r0, [r7, #4]
 2885 0008 0B46     		mov	r3, r1
 2886 000a FB70     		strb	r3, [r7, #3]
1258:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint16_t itpos = 0;
 2887              		.loc 1 1258 0
 2888 000c 0023     		movs	r3, #0
 2889 000e FB81     		strh	r3, [r7, #14]	@ movhi
1259:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
1260:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 2890              		.loc 1 1260 0
 2891 0010 7A68     		ldr	r2, [r7, #4]
 2892 0012 4FF44053 		mov	r3, #12288
 2893 0016 C4F20103 		movt	r3, 16385
 2894 001a 9A42     		cmp	r2, r3
 2895 001c 20D0     		beq	.L130
 2896              		.loc 1 1260 0 is_stmt 0 discriminator 1
 2897 001e 7A68     		ldr	r2, [r7, #4]
 2898 0020 4FF46053 		mov	r3, #14336
 2899 0024 C4F20003 		movt	r3, 16384
 2900 0028 9A42     		cmp	r2, r3
 2901 002a 19D0     		beq	.L130
 2902 002c 7A68     		ldr	r2, [r7, #4]
 2903 002e 4FF47053 		mov	r3, #15360
 2904 0032 C4F20003 		movt	r3, 16384
 2905 0036 9A42     		cmp	r2, r3
 2906 0038 12D0     		beq	.L130
 2907 003a 7A68     		ldr	r2, [r7, #4]
 2908 003c 4FF45053 		mov	r3, #13312
 2909 0040 C4F20003 		movt	r3, 16384
 2910 0044 9A42     		cmp	r2, r3
 2911 0046 0BD0     		beq	.L130
 2912 0048 7B68     		ldr	r3, [r7, #4]
 2913 004a B3F1402F 		cmp	r3, #1073758208
 2914 004e 07D0     		beq	.L130
 2915 0050 40F20000 		movw	r0, #:lower16:.LC0
 2916 0054 C0F20000 		movt	r0, #:upper16:.LC0
 2917 0058 40F2EC41 		movw	r1, #1260
 2918 005c FFF7FEFF 		bl	assert_failed
 2919              	.L130:
1261:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_CLEAR_IT(SPI_I2S_IT));
 2920              		.loc 1 1261 0 is_stmt 1
 2921 0060 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2922 0062 542B     		cmp	r3, #84
 2923 0064 07D0     		beq	.L131
 2924              		.loc 1 1261 0 is_stmt 0 discriminator 1
 2925 0066 40F20000 		movw	r0, #:lower16:.LC0
 2926 006a C0F20000 		movt	r0, #:upper16:.LC0
 2927 006e 40F2ED41 		movw	r1, #1261
 2928 0072 FFF7FEFF 		bl	assert_failed
 2929              	.L131:
1262:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1263:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Get the SPI_I2S IT index */
1264:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   itpos = 0x01 << (SPI_I2S_IT & 0x0F);
 2930              		.loc 1 1264 0 is_stmt 1
 2931 0076 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2932 0078 03F00F03 		and	r3, r3, #15
 2933 007c 0122     		movs	r2, #1
 2934 007e 02FA03F3 		lsl	r3, r2, r3
 2935 0082 FB81     		strh	r3, [r7, #14]	@ movhi
1265:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1266:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Clear the selected SPI CRC Error (CRCERR) interrupt pending bit */
1267:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->SR = (uint16_t)~itpos;
 2936              		.loc 1 1267 0
 2937 0084 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2938 0086 DB43     		mvns	r3, r3
 2939 0088 9AB2     		uxth	r2, r3
 2940 008a 7B68     		ldr	r3, [r7, #4]
 2941 008c 1A81     		strh	r2, [r3, #8]	@ movhi
1268:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 2942              		.loc 1 1268 0
 2943 008e 1037     		adds	r7, r7, #16
 2944 0090 BD46     		mov	sp, r7
 2945              		@ sp needed
 2946 0092 80BD     		pop	{r7, pc}
 2947              		.cfi_endproc
 2948              	.LFE134:
 2950              		.text
 2951              	.Letext0:
 2952              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2953              		.file 3 "/usr/include/newlib/stdint.h"
 2954              		.file 4 "lib/chip/CMSIS/ST/STM32F4xx/Include/stm32f4xx.h"
 2955              		.file 5 "lib/chip/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
 2956              		.file 6 "lib/chip/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_spi.c
     /tmp/cc4zTXXG.s:20     .rodata:00000000 $d
     /tmp/cc4zTXXG.s:21     .rodata:00000000 .LC0
     /tmp/cc4zTXXG.s:25     .text.SPI_I2S_DeInit:00000000 $t
     /tmp/cc4zTXXG.s:30     .text.SPI_I2S_DeInit:00000000 SPI_I2S_DeInit
     /tmp/cc4zTXXG.s:127    .text.SPI_Init:00000000 $t
     /tmp/cc4zTXXG.s:132    .text.SPI_Init:00000000 SPI_Init
     /tmp/cc4zTXXG.s:419    .text.I2S_Init:00000000 $t
     /tmp/cc4zTXXG.s:424    .text.I2S_Init:00000000 I2S_Init
     /tmp/cc4zTXXG.s:827    .text.SPI_StructInit:00000000 $t
     /tmp/cc4zTXXG.s:832    .text.SPI_StructInit:00000000 SPI_StructInit
     /tmp/cc4zTXXG.s:896    .text.I2S_StructInit:00000000 $t
     /tmp/cc4zTXXG.s:901    .text.I2S_StructInit:00000000 I2S_StructInit
     /tmp/cc4zTXXG.s:953    .text.SPI_Cmd:00000000 $t
     /tmp/cc4zTXXG.s:958    .text.SPI_Cmd:00000000 SPI_Cmd
     /tmp/cc4zTXXG.s:1045   .text.I2S_Cmd:00000000 $t
     /tmp/cc4zTXXG.s:1050   .text.I2S_Cmd:00000000 I2S_Cmd
     /tmp/cc4zTXXG.s:1140   .text.SPI_DataSizeConfig:00000000 $t
     /tmp/cc4zTXXG.s:1145   .text.SPI_DataSizeConfig:00000000 SPI_DataSizeConfig
     /tmp/cc4zTXXG.s:1226   .text.SPI_BiDirectionalLineConfig:00000000 $t
     /tmp/cc4zTXXG.s:1231   .text.SPI_BiDirectionalLineConfig:00000000 SPI_BiDirectionalLineConfig
     /tmp/cc4zTXXG.s:1319   .text.SPI_NSSInternalSoftwareConfig:00000000 $t
     /tmp/cc4zTXXG.s:1324   .text.SPI_NSSInternalSoftwareConfig:00000000 SPI_NSSInternalSoftwareConfig
     /tmp/cc4zTXXG.s:1413   .text.SPI_SSOutputCmd:00000000 $t
     /tmp/cc4zTXXG.s:1418   .text.SPI_SSOutputCmd:00000000 SPI_SSOutputCmd
     /tmp/cc4zTXXG.s:1505   .text.SPI_TIModeCmd:00000000 $t
     /tmp/cc4zTXXG.s:1510   .text.SPI_TIModeCmd:00000000 SPI_TIModeCmd
     /tmp/cc4zTXXG.s:1597   .text.I2S_FullDuplexConfig:00000000 $t
     /tmp/cc4zTXXG.s:1602   .text.I2S_FullDuplexConfig:00000000 I2S_FullDuplexConfig
     /tmp/cc4zTXXG.s:1812   .text.SPI_I2S_ReceiveData:00000000 $t
     /tmp/cc4zTXXG.s:1817   .text.SPI_I2S_ReceiveData:00000000 SPI_I2S_ReceiveData
     /tmp/cc4zTXXG.s:1879   .text.SPI_I2S_SendData:00000000 $t
     /tmp/cc4zTXXG.s:1884   .text.SPI_I2S_SendData:00000000 SPI_I2S_SendData
     /tmp/cc4zTXXG.s:1947   .text.SPI_CalculateCRC:00000000 $t
     /tmp/cc4zTXXG.s:1952   .text.SPI_CalculateCRC:00000000 SPI_CalculateCRC
     /tmp/cc4zTXXG.s:2039   .text.SPI_TransmitCRC:00000000 $t
     /tmp/cc4zTXXG.s:2044   .text.SPI_TransmitCRC:00000000 SPI_TransmitCRC
     /tmp/cc4zTXXG.s:2101   .text.SPI_GetCRC:00000000 $t
     /tmp/cc4zTXXG.s:2106   .text.SPI_GetCRC:00000000 SPI_GetCRC
     /tmp/cc4zTXXG.s:2191   .text.SPI_GetCRCPolynomial:00000000 $t
     /tmp/cc4zTXXG.s:2196   .text.SPI_GetCRCPolynomial:00000000 SPI_GetCRCPolynomial
     /tmp/cc4zTXXG.s:2250   .text.SPI_I2S_DMACmd:00000000 $t
     /tmp/cc4zTXXG.s:2255   .text.SPI_I2S_DMACmd:00000000 SPI_I2S_DMACmd
     /tmp/cc4zTXXG.s:2373   .text.SPI_I2S_ITConfig:00000000 $t
     /tmp/cc4zTXXG.s:2378   .text.SPI_I2S_ITConfig:00000000 SPI_I2S_ITConfig
     /tmp/cc4zTXXG.s:2510   .text.SPI_I2S_GetFlagStatus:00000000 $t
     /tmp/cc4zTXXG.s:2515   .text.SPI_I2S_GetFlagStatus:00000000 SPI_I2S_GetFlagStatus
     /tmp/cc4zTXXG.s:2632   .text.SPI_I2S_ClearFlag:00000000 $t
     /tmp/cc4zTXXG.s:2637   .text.SPI_I2S_ClearFlag:00000000 SPI_I2S_ClearFlag
     /tmp/cc4zTXXG.s:2712   .text.SPI_I2S_GetITStatus:00000000 $t
     /tmp/cc4zTXXG.s:2717   .text.SPI_I2S_GetITStatus:00000000 SPI_I2S_GetITStatus
     /tmp/cc4zTXXG.s:2862   .text.SPI_I2S_ClearITPendingBit:00000000 $t
     /tmp/cc4zTXXG.s:2867   .text.SPI_I2S_ClearITPendingBit:00000000 SPI_I2S_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
assert_failed
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
