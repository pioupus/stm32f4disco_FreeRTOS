   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_rtc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RTC_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	RTC_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	RTC_DeInit:
  26              	.LFB110:
  27              		.file 1 "lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c"
   1:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
   2:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ******************************************************************************
   3:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @file    stm32f4xx_rtc.c
   4:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @author  MCD Application Team
   5:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @version V1.0.0
   6:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @date    30-September-2011
   7:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          functionalities of the Real-Time Clock (RTC) peripheral:
   9:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - Initialization
  10:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - Calendar (Time and Date) configuration
  11:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - Alarms (Alarm A and Alarm B) configuration
  12:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - WakeUp Timer configuration
  13:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - Daylight Saving configuration
  14:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - Output pin Configuration
  15:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - Coarse digital Calibration configuration
  16:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - Smooth digital Calibration configuration
  17:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - TimeStamp configuration
  18:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - Tampers configuration
  19:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - Backup Data Registers configuration
  20:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - Shift control synchronisation    
  21:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - RTC Tamper and TimeStamp Pins Selection and Output Type Config configuration
  22:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - Interrupts and flags management
  23:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
  24:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *  @verbatim
  25:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
  26:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
  27:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                               Backup Domain Operating Condition
  28:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
  29:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          The real-time clock (RTC), the RTC backup registers, and the backup 
  30:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          SRAM (BKP SRAM) can be powered from the VBAT voltage when the main 
  31:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          VDD supply is powered off.
  32:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          To retain the content of the RTC backup registers, backup SRAM, 
  33:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          and supply the RTC when VDD is turned off, VBAT pin can be connected 
  34:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          to an optional standby voltage supplied by a battery or by another 
  35:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          source.
  36:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
  37:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          To allow the RTC to operate even when the main digital supply (VDD) 
  38:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          is turned off, the VBAT pin powers the following blocks:
  39:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            1 - The RTC
  40:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            2 - The LSE oscillator
  41:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            3 - The backup SRAM when the low power backup regulator is enabled
  42:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            4 - PC13 to PC15 I/Os, plus PI8 I/O (when available)
  43:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
  44:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          When the backup domain is supplied by VDD (analog switch connected 
  45:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          to VDD), the following functions are available:
  46:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            1 - PC14 and PC15 can be used as either GPIO or LSE pins
  47:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            2 - PC13 can be used as a GPIO or as the RTC_AF1 pin
  48:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            3 - PI8 can be used as a GPIO or as the RTC_AF2 pin
  49:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
  50:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          When the backup domain is supplied by VBAT (analog switch connected 
  51:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          to VBAT because VDD is not present), the following functions are available:
  52:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            1 - PC14 and PC15 can be used as LSE pins only
  53:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            2 - PC13 can be used as the RTC_AF1 pin 
  54:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            3 - PI8 can be used as the RTC_AF2 pin
  55:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
  56:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
  57:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                    Backup Domain Reset
  58:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
  59:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          The backup domain reset sets all RTC registers and the RCC_BDCR 
  60:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          register to their reset values. The BKPSRAM is not affected by this
  61:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          reset. The only way of resetting the BKPSRAM is through the Flash 
  62:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          interface by requesting a protection level change from 1 to 0.
  63:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          A backup domain reset is generated when one of the following events
  64:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          occurs:
  65:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            1 - Software reset, triggered by setting the BDRST bit in the 
  66:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                RCC Backup domain control register (RCC_BDCR). You can use the
  67:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                RCC_BackupResetCmd().
  68:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            2 - VDD or VBAT power on, if both supplies have previously been
  69:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                powered off.
  70:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
  71:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
  72:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                   Backup Domain Access
  73:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
  74:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          After reset, the backup domain (RTC registers, RTC backup data 
  75:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          registers and backup SRAM) is protected against possible unwanted 
  76:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          write accesses. 
  77:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          To enable access to the RTC Domain and RTC registers, proceed as follows:
  78:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Enable the Power Controller (PWR) APB1 interface clock using the
  79:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              RCC_APB1PeriphClockCmd() function.
  80:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Enable access to RTC domain using the PWR_BackupAccessCmd() function.
  81:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Select the RTC clock source using the RCC_RTCCLKConfig() function.
  82:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Enable RTC Clock using the RCC_RTCCLKCmd() function.
  83:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
  84:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
  85:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                   RTC Driver: how to use it
  86:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
  87:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Enable the RTC domain access (see description in the section above)
  88:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Configure the RTC Prescaler (Asynchronous and Synchronous) and
  89:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              RTC hour format using the RTC_Init() function.
  90:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
  91:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          Time and Date configuration
  92:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===========================
  93:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - To configure the RTC Calendar (Time and Date) use the RTC_SetTime()
  94:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              and RTC_SetDate() functions.
  95:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - To read the RTC Calendar, use the RTC_GetTime() and RTC_GetDate()
  96:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              functions.
  97:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Use the RTC_DayLightSavingConfig() function to add or sub one
  98:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              hour to the RTC Calendar.    
  99:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 100:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          Alarm configuration
 101:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================
 102:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - To configure the RTC Alarm use the RTC_SetAlarm() function.
 103:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Enable the selected RTC Alarm using the RTC_AlarmCmd() function
 104:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - To read the RTC Alarm, use the RTC_GetAlarm() function.
 105:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - To read the RTC alarm SubSecond, use the RTC_GetAlarmSubSecond() function.
 106:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 107:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          RTC Wakeup configuration
 108:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ========================
 109:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Configure the RTC Wakeup Clock source use the RTC_WakeUpClockConfig()
 110:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              function.
 111:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Configure the RTC WakeUp Counter using the RTC_SetWakeUpCounter() 
 112:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              function  
 113:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Enable the RTC WakeUp using the RTC_WakeUpCmd() function  
 114:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - To read the RTC WakeUp Counter register, use the RTC_GetWakeUpCounter() 
 115:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              function.
 116:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 117:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          Outputs configuration
 118:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          =====================
 119:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          The RTC has 2 different outputs:
 120:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - AFO_ALARM: this output is used to manage the RTC Alarm A, Alarm B
 121:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              and WaKeUp signals.          
 122:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              To output the selected RTC signal on RTC_AF1 pin, use the 
 123:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              RTC_OutputConfig() function.                
 124:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - AFO_CALIB: this output is 512Hz signal or 1Hz .  
 125:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              To output the RTC Clock on RTC_AF1 pin, use the RTC_CalibOutputCmd()
 126:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              function.
 127:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 128:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          Smooth digital Calibration configuration
 129:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          =================================    
 130:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Configure the RTC Original Digital Calibration Value and the corresponding
 131:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              calibration cycle period (32s,16s and 8s) using the RTC_SmoothCalibConfig() 
 132:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              function.
 133:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 134:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          Coarse digital Calibration configuration
 135:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          =================================
 136:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Configure the RTC Coarse Calibration Value and the corresponding
 137:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              sign using the RTC_CoarseCalibConfig() function.
 138:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Enable the RTC Coarse Calibration using the RTC_CoarseCalibCmd() 
 139:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              function  
 140:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 141:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          TimeStamp configuration
 142:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          =======================
 143:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Configure the RTC_AF1 trigger and enables the RTC TimeStamp 
 144:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              using the RTC_TimeStampCmd() function.
 145:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - To read the RTC TimeStamp Time and Date register, use the 
 146:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              RTC_GetTimeStamp() function.
 147:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - To read the RTC TimeStamp SubSecond register, use the 
 148:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              RTC_GetTimeStampSubSecond() function.
 149:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - The TAMPER1 alternate function can be mapped either to RTC_AF1(PC13)
 150:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              or RTC_AF2 (PI8) depending on the value of TAMP1INSEL bit in 
 151:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              RTC_TAFCR register. You can use the  RTC_TamperPinSelection()
 152:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              function to select the corresponding pin.     
 153:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 154:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          Tamper configuration
 155:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ====================
 156:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Enable the RTC Tamper using the RTC_TamperCmd() function.
 157:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *             - Configure the Tamper filter count using RTC_TamperFilterConfig()
 158:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              function. 
 159:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Configure the RTC Tamper trigger Edge or Level according to the Tamper 
 160:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              filter (if equal to 0 Edge else Level) value using the RTC_TamperConfig() function
 161:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Configure the Tamper sampling frequency using RTC_TamperSamplingFreqConfig()
 162:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              function.
 163:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Configure the Tamper precharge or discharge duration using 
 164:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              RTC_TamperPinsPrechargeDuration() function.
 165:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Enable the Tamper Pull-UP using RTC_TamperPullUpDisableCmd() function.
 166:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Enable the Time stamp on Tamper detection event using  
 167:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              RTC_TSOnTamperDetecCmd() function.
 168:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - The TIMESTAMP alternate function can be mapped to either RTC_AF1 
 169:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              or RTC_AF2 depending on the value of the TSINSEL bit in the 
 170:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              RTC_TAFCR register. You can use the  RTC_TimeStampPinSelection()
 171:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              function to select the corresponding pin. 
 172:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 173:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          Backup Data Registers configuration
 174:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================
 175:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - To write to the RTC Backup Data registers, use the RTC_WriteBackupRegister()
 176:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              function.  
 177:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - To read the RTC Backup Data registers, use the RTC_ReadBackupRegister()
 178:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              function.
 179:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * 
 180:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
 181:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                  RTC and low power modes
 182:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
 183:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           The MCU can be woken up from a low power mode by an RTC alternate 
 184:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           function.
 185:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           The RTC alternate functions are the RTC alarms (Alarm A and Alarm B), 
 186:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           RTC wakeup, RTC tamper event detection and RTC time stamp event detection.
 187:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           These RTC alternate functions can wake up the system from the Stop 
 188:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           and Standby lowpower modes.
 189:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           The system can also wake up from low power modes without depending 
 190:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           on an external interrupt (Auto-wakeup mode), by using the RTC alarm 
 191:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           or the RTC wakeup events.
 192:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           The RTC provides a programmable time base for waking up from the 
 193:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           Stop or Standby mode at regular intervals.
 194:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           Wakeup from STOP and Standby modes is possible only when the RTC 
 195:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           clock source is LSE or LSI.
 196:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 197:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
 198:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                            Selection of RTC_AF1 alternate functions
 199:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
 200:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          The RTC_AF1 pin (PC13) can be used for the following purposes:
 201:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - AFO_ALARM output
 202:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - AFO_CALIB output
 203:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - AFI_TAMPER
 204:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - AFI_TIMESTAMP
 205:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 206:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * +----------------------------------------------------------------------------------------------
 207:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |     Pin         |AFO_ALARM |AFO_CALIB |AFI_TAMPER |AFI_TIMESTAMP | TAMP1INSEL |   TSINSEL    
 208:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |  configuration  | ENABLED  | ENABLED  |  ENABLED  |   ENABLED    |TAMPER1 pin |TIMESTAMP pin 
 209:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |  and function   |          |          |           |              | selection  |  selection   
 210:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |-----------------|----------|----------|-----------|--------------|------------|--------------
 211:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |   Alarm out     |          |          |           |              |    Don't   |     Don't    
 212:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |   output OD     |     1    |Don't care|Don't care | Don't care   |    care    |     care     
 213:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |-----------------|----------|----------|-----------|--------------|------------|--------------
 214:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |   Alarm out     |          |          |           |              |    Don't   |     Don't    
 215:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |   output PP     |     1    |Don't care|Don't care | Don't care   |    care    |     care     
 216:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |-----------------|----------|----------|-----------|--------------|------------|--------------
 217:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * | Calibration out |          |          |           |              |    Don't   |     Don't    
 218:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |   output PP     |     0    |    1     |Don't care | Don't care   |    care    |     care     
 219:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |-----------------|----------|----------|-----------|--------------|------------|--------------
 220:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |  TAMPER input   |          |          |           |              |            |     Don't    
 221:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |   floating      |     0    |    0     |     1     |      0       |      0     |     care     
 222:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |-----------------|----------|----------|-----------|--------------|------------|--------------
 223:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |  TIMESTAMP and  |          |          |           |              |            |              
 224:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |  TAMPER input   |     0    |    0     |     1     |      1       |      0     |      0       
 225:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |   floating      |          |          |           |              |            |              
 226:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |-----------------|----------|----------|-----------|--------------|------------|--------------
 227:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * | TIMESTAMP input |          |          |           |              |    Don't   |              
 228:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |    floating     |     0    |    0     |     0     |      1       |    care    |      0       
 229:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |-----------------|----------|----------|-----------|--------------|------------|--------------
 230:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |  Standard GPIO  |     0    |    0     |     0     |      0       | Don't care |  Don't care  
 231:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * +----------------------------------------------------------------------------------------------
 232:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 233:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 234:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
 235:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                            Selection of RTC_AF2 alternate functions
 236:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
 237:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          The RTC_AF2 pin (PI8) can be used for the following purposes:
 238:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - AFI_TAMPER
 239:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - AFI_TIMESTAMP
 240:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 241:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * +---------------------------------------------------------------------------------------+
 242:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |     Pin         |AFI_TAMPER |AFI_TIMESTAMP | TAMP1INSEL |   TSINSEL    |ALARMOUTTYPE  |
 243:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |  configuration  |  ENABLED  |   ENABLED    |TAMPER1 pin |TIMESTAMP pin |  AFO_ALARM   |
 244:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |  and function   |           |              | selection  |  selection   |Configuration |
 245:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |-----------------|-----------|--------------|------------|--------------|--------------|
 246:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |  TAMPER input   |           |              |            |     Don't    |              |
 247:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |   floating      |     1     |      0       |      1     |     care     |  Don't care  |
 248:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |-----------------|-----------|--------------|------------|--------------|--------------|
 249:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |  TIMESTAMP and  |           |              |            |              |              |
 250:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |  TAMPER input   |     1     |      1       |      1     |      1       |  Don't care  |
 251:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |   floating      |           |              |            |              |              |
 252:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |-----------------|-----------|--------------|------------|--------------|--------------|
 253:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * | TIMESTAMP input |           |              |    Don't   |              |              |
 254:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |    floating     |     0     |      1       |    care    |      1       |  Don't care  |
 255:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |-----------------|-----------|--------------|------------|--------------|--------------|
 256:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |  Standard GPIO  |     0     |      0       | Don't care |  Don't care  |  Don't care  |
 257:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * +---------------------------------------------------------------------------------------+
 258:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * 
 259:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 260:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *  @endverbatim
 261:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 262:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ******************************************************************************
 263:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @attention
 264:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 265:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 266:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 267:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 268:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 269:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 270:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 271:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 272:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 273:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ******************************************************************************
 274:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */ 
 275:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 276:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /* Includes ------------------------------------------------------------------*/
 277:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #include "stm32f4xx_rtc.h"
 278:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #include "stm32f4xx_rcc.h"
 279:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 280:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 281:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
 282:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 283:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 284:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC 
 285:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief RTC driver modules
 286:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
 287:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 288:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 289:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /* Private typedef -----------------------------------------------------------*/
 290:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /* Private define ------------------------------------------------------------*/
 291:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 292:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /* Masks Definition */
 293:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define RTC_TR_RESERVED_MASK    ((uint32_t)0x007F7F7F)
 294:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define RTC_DR_RESERVED_MASK    ((uint32_t)0x00FFFF3F) 
 295:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define RTC_INIT_MASK           ((uint32_t)0xFFFFFFFF)  
 296:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define RTC_RSF_MASK            ((uint32_t)0xFFFFFF5F)
 297:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define RTC_FLAGS_MASK          ((uint32_t)(RTC_FLAG_TSOVF | RTC_FLAG_TSF | RTC_FLAG_WUTF | \
 298:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                             RTC_FLAG_ALRBF | RTC_FLAG_ALRAF | RTC_FLAG_INITF | \
 299:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                             RTC_FLAG_RSF | RTC_FLAG_INITS | RTC_FLAG_WUTWF | \
 300:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                             RTC_FLAG_ALRBWF | RTC_FLAG_ALRAWF | RTC_FLAG_TAMP1F ))
 301:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 302:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define INITMODE_TIMEOUT         ((uint32_t) 0x00010000)
 303:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define SYNCHRO_TIMEOUT          ((uint32_t) 0x00020000)
 304:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define RECALPF_TIMEOUT          ((uint32_t) 0x00020000)
 305:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define SHPF_TIMEOUT             ((uint32_t) 0x00001000)
 306:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 307:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /* Private macro -------------------------------------------------------------*/
 308:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /* Private variables ---------------------------------------------------------*/
 309:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /* Private function prototypes -----------------------------------------------*/
 310:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** static uint8_t RTC_ByteToBcd2(uint8_t Value);
 311:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** static uint8_t RTC_Bcd2ToByte(uint8_t Value);
 312:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 313:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /* Private functions ---------------------------------------------------------*/
 314:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 315:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Private_Functions
 316:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
 317:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */ 
 318:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 319:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group1 Initialization and Configuration functions
 320:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Initialization and Configuration functions 
 321:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
 322:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
 323:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
 324:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                  Initialization and Configuration functions
 325:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
 326:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 327:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   This section provide functions allowing to initialize and configure the RTC
 328:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   Prescaler (Synchronous and Asynchronous), RTC Hour format, disable RTC registers
 329:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   Write protection, enter and exit the RTC initialization mode, RTC registers
 330:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   synchronization check and reference clock detection enable.
 331:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 332:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   1. The RTC Prescaler is programmed to generate the RTC 1Hz time base. It is
 333:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      split into 2 programmable prescalers to minimize power consumption.
 334:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      - A 7-bit asynchronous prescaler and A 13-bit synchronous prescaler.
 335:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      - When both prescalers are used, it is recommended to configure the asynchronous
 336:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        prescaler to a high value to minimize consumption.
 337:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 338:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   2. All RTC registers are Write protected. Writing to the RTC registers
 339:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      is enabled by writing a key into the Write Protection register, RTC_WPR.
 340:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 341:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   3. To Configure the RTC Calendar, user application should enter initialization
 342:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      mode. In this mode, the calendar counter is stopped and its value can be 
 343:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      updated. When the initialization sequence is complete, the calendar restarts 
 344:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      counting after 4 RTCCLK cycles.
 345:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 346:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   4. To read the calendar through the shadow registers after Calendar initialization,
 347:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      calendar update or after wakeup from low power modes the software must first 
 348:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      clear the RSF flag. The software must then wait until it is set again before 
 349:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      reading the calendar, which means that the calendar registers have been 
 350:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      correctly copied into the RTC_TR and RTC_DR shadow registers.
 351:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      The RTC_WaitForSynchro() function implements the above software sequence 
 352:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      (RSF clear and RSF check).
 353:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 354:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
 355:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
 356:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 357:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 358:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 359:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Deinitializes the RTC registers to their default reset values.
 360:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   This function doesn't reset the RTC Clock source and RTC Backup Data
 361:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         registers.       
 362:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
 363:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 364:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC registers are deinitialized
 365:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC registers are not deinitialized
 366:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 367:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_DeInit(void)
 368:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
  28              		.loc 1 368 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 84B0     		sub	sp, sp, #16
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
 369:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t wutcounter = 0x00;
  43              		.loc 1 369 0
  44 0006 0023     		movs	r3, #0
  45 0008 7B60     		str	r3, [r7, #4]
 370:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t wutwfstatus = 0x00;
  46              		.loc 1 370 0
  47 000a 0023     		movs	r3, #0
  48 000c BB60     		str	r3, [r7, #8]
 371:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
  49              		.loc 1 371 0
  50 000e 0023     		movs	r3, #0
  51 0010 FB73     		strb	r3, [r7, #15]
 372:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 373:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 374:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
  52              		.loc 1 374 0
  53 0012 4FF42053 		mov	r3, #10240
  54 0016 C4F20003 		movt	r3, 16384
  55 001a CA22     		movs	r2, #202
  56 001c 5A62     		str	r2, [r3, #36]
 375:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
  57              		.loc 1 375 0
  58 001e 4FF42053 		mov	r3, #10240
  59 0022 C4F20003 		movt	r3, 16384
  60 0026 5322     		movs	r2, #83
  61 0028 5A62     		str	r2, [r3, #36]
 376:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 377:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Set Initialization mode */
 378:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
  62              		.loc 1 378 0
  63 002a FFF7FEFF 		bl	RTC_EnterInitMode
  64 002e 0346     		mov	r3, r0
  65 0030 002B     		cmp	r3, #0
  66 0032 02D1     		bne	.L2
 379:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 380:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
  67              		.loc 1 380 0
  68 0034 0023     		movs	r3, #0
  69 0036 FB73     		strb	r3, [r7, #15]
  70 0038 78E0     		b	.L3
  71              	.L2:
 381:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
 382:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 383:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 384:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Reset TR, DR and CR registers */
 385:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TR = (uint32_t)0x00000000;
  72              		.loc 1 385 0
  73 003a 4FF42053 		mov	r3, #10240
  74 003e C4F20003 		movt	r3, 16384
  75 0042 0022     		movs	r2, #0
  76 0044 1A60     		str	r2, [r3]
 386:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->DR = (uint32_t)0x00002101;
  77              		.loc 1 386 0
  78 0046 4FF42053 		mov	r3, #10240
  79 004a C4F20003 		movt	r3, 16384
  80 004e 42F20112 		movw	r2, #8449
  81 0052 5A60     		str	r2, [r3, #4]
 387:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 388:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR &= (uint32_t)0x00000007;
  82              		.loc 1 388 0
  83 0054 4FF42053 		mov	r3, #10240
  84 0058 C4F20003 		movt	r3, 16384
  85 005c 4FF42052 		mov	r2, #10240
  86 0060 C4F20002 		movt	r2, 16384
  87 0064 9268     		ldr	r2, [r2, #8]
  88 0066 02F00702 		and	r2, r2, #7
  89 006a 9A60     		str	r2, [r3, #8]
  90              	.L5:
 389:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 390:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
 391:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     do
 392:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 393:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       wutwfstatus = RTC->ISR & RTC_ISR_WUTWF;
  91              		.loc 1 393 0 discriminator 1
  92 006c 4FF42053 		mov	r3, #10240
  93 0070 C4F20003 		movt	r3, 16384
  94 0074 DB68     		ldr	r3, [r3, #12]
  95 0076 03F00403 		and	r3, r3, #4
  96 007a BB60     		str	r3, [r7, #8]
 394:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       wutcounter++;  
  97              		.loc 1 394 0 discriminator 1
  98 007c 7B68     		ldr	r3, [r7, #4]
  99 007e 0133     		adds	r3, r3, #1
 100 0080 7B60     		str	r3, [r7, #4]
 395:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } while((wutcounter != INITMODE_TIMEOUT) && (wutwfstatus == 0x00));
 101              		.loc 1 395 0 discriminator 1
 102 0082 7B68     		ldr	r3, [r7, #4]
 103 0084 B3F5803F 		cmp	r3, #65536
 104 0088 02D0     		beq	.L4
 105 008a BB68     		ldr	r3, [r7, #8]
 106 008c 002B     		cmp	r3, #0
 107 008e EDD0     		beq	.L5
 108              	.L4:
 396:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 397:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->ISR & RTC_ISR_WUTWF) == RESET)
 109              		.loc 1 397 0
 110 0090 4FF42053 		mov	r3, #10240
 111 0094 C4F20003 		movt	r3, 16384
 112 0098 DB68     		ldr	r3, [r3, #12]
 113 009a 03F00403 		and	r3, r3, #4
 114 009e 002B     		cmp	r3, #0
 115 00a0 02D1     		bne	.L6
 398:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 399:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = ERROR;
 116              		.loc 1 399 0
 117 00a2 0023     		movs	r3, #0
 118 00a4 FB73     		strb	r3, [r7, #15]
 119 00a6 41E0     		b	.L3
 120              	.L6:
 400:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 401:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
 402:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 403:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       /* Reset all RTC CR register bits */
 404:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->CR &= (uint32_t)0x00000000;
 121              		.loc 1 404 0
 122 00a8 4FF42053 		mov	r3, #10240
 123 00ac C4F20003 		movt	r3, 16384
 124 00b0 9B68     		ldr	r3, [r3, #8]
 125 00b2 4FF42053 		mov	r3, #10240
 126 00b6 C4F20003 		movt	r3, 16384
 127 00ba 0022     		movs	r2, #0
 128 00bc 9A60     		str	r2, [r3, #8]
 405:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->WUTR = (uint32_t)0x0000FFFF;
 129              		.loc 1 405 0
 130 00be 4FF42053 		mov	r3, #10240
 131 00c2 C4F20003 		movt	r3, 16384
 132 00c6 4FF6FF72 		movw	r2, #65535
 133 00ca 5A61     		str	r2, [r3, #20]
 406:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->PRER = (uint32_t)0x007F00FF;
 134              		.loc 1 406 0
 135 00cc 4FF42053 		mov	r3, #10240
 136 00d0 C4F20003 		movt	r3, 16384
 137 00d4 FF22     		movs	r2, #255
 138 00d6 C0F27F02 		movt	r2, 127
 139 00da 1A61     		str	r2, [r3, #16]
 407:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->CALIBR = (uint32_t)0x00000000;
 140              		.loc 1 407 0
 141 00dc 4FF42053 		mov	r3, #10240
 142 00e0 C4F20003 		movt	r3, 16384
 143 00e4 0022     		movs	r2, #0
 144 00e6 9A61     		str	r2, [r3, #24]
 408:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->ALRMAR = (uint32_t)0x00000000;        
 145              		.loc 1 408 0
 146 00e8 4FF42053 		mov	r3, #10240
 147 00ec C4F20003 		movt	r3, 16384
 148 00f0 0022     		movs	r2, #0
 149 00f2 DA61     		str	r2, [r3, #28]
 409:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->ALRMBR = (uint32_t)0x00000000;
 150              		.loc 1 409 0
 151 00f4 4FF42053 		mov	r3, #10240
 152 00f8 C4F20003 		movt	r3, 16384
 153 00fc 0022     		movs	r2, #0
 154 00fe 1A62     		str	r2, [r3, #32]
 410:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       
 411:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       /* Reset ISR register and exit initialization mode */
 412:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->ISR = (uint32_t)0x00000000;
 155              		.loc 1 412 0
 156 0100 4FF42053 		mov	r3, #10240
 157 0104 C4F20003 		movt	r3, 16384
 158 0108 0022     		movs	r2, #0
 159 010a DA60     		str	r2, [r3, #12]
 413:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       
 414:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       /* Reset Tamper and alternate functions configuration register */
 415:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->TAFCR = 0x00000000;
 160              		.loc 1 415 0
 161 010c 4FF42053 		mov	r3, #10240
 162 0110 C4F20003 		movt	r3, 16384
 163 0114 0022     		movs	r2, #0
 164 0116 1A64     		str	r2, [r3, #64]
 416:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 417:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       if(RTC_WaitForSynchro() == ERROR)
 165              		.loc 1 417 0
 166 0118 FFF7FEFF 		bl	RTC_WaitForSynchro
 167 011c 0346     		mov	r3, r0
 168 011e 002B     		cmp	r3, #0
 169 0120 02D1     		bne	.L7
 418:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       {
 419:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****         status = ERROR;
 170              		.loc 1 419 0
 171 0122 0023     		movs	r3, #0
 172 0124 FB73     		strb	r3, [r7, #15]
 173 0126 01E0     		b	.L3
 174              	.L7:
 420:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       }
 421:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       else
 422:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       {
 423:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****         status = SUCCESS;      
 175              		.loc 1 423 0
 176 0128 0123     		movs	r3, #1
 177 012a FB73     		strb	r3, [r7, #15]
 178              	.L3:
 424:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       }
 425:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 426:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 427:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 428:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 429:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;  
 179              		.loc 1 429 0
 180 012c 4FF42053 		mov	r3, #10240
 181 0130 C4F20003 		movt	r3, 16384
 182 0134 FF22     		movs	r2, #255
 183 0136 5A62     		str	r2, [r3, #36]
 430:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 431:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status;
 184              		.loc 1 431 0
 185 0138 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 432:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 186              		.loc 1 432 0
 187 013a 1846     		mov	r0, r3
 188 013c 1037     		adds	r7, r7, #16
 189 013e BD46     		mov	sp, r7
 190              		@ sp needed
 191 0140 80BD     		pop	{r7, pc}
 192              		.cfi_endproc
 193              	.LFE110:
 195 0142 00BF     		.section	.rodata
 196              		.align	2
 197              	.LC0:
 198 0000 6C69622F 		.ascii	"lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_r"
 198      63686970 
 198      2F53544D 
 198      33324634 
 198      78785F53 
 199 0033 74632E63 		.ascii	"tc.c\000"
 199      00
 200              		.section	.text.RTC_Init,"ax",%progbits
 201              		.align	2
 202              		.global	RTC_Init
 203              		.thumb
 204              		.thumb_func
 206              	RTC_Init:
 207              	.LFB111:
 433:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 434:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 435:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Initializes the RTC registers according to the specified parameters 
 436:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         in RTC_InitStruct.
 437:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_InitStruct: pointer to a RTC_InitTypeDef structure that contains 
 438:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         the configuration information for the RTC peripheral.
 439:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The RTC Prescaler register is write protected and can be written in 
 440:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         initialization mode only.  
 441:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 442:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC registers are initialized
 443:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC registers are not initialized  
 444:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 445:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_Init(RTC_InitTypeDef* RTC_InitStruct)
 446:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 208              		.loc 1 446 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 16
 211              		@ frame_needed = 1, uses_anonymous_args = 0
 212 0000 80B5     		push	{r7, lr}
 213              	.LCFI3:
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 7, -8
 216              		.cfi_offset 14, -4
 217 0002 84B0     		sub	sp, sp, #16
 218              	.LCFI4:
 219              		.cfi_def_cfa_offset 24
 220 0004 00AF     		add	r7, sp, #0
 221              	.LCFI5:
 222              		.cfi_def_cfa_register 7
 223 0006 7860     		str	r0, [r7, #4]
 447:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 224              		.loc 1 447 0
 225 0008 0023     		movs	r3, #0
 226 000a FB73     		strb	r3, [r7, #15]
 448:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 449:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 450:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_HOUR_FORMAT(RTC_InitStruct->RTC_HourFormat));
 227              		.loc 1 450 0
 228 000c 7B68     		ldr	r3, [r7, #4]
 229 000e 1B68     		ldr	r3, [r3]
 230 0010 402B     		cmp	r3, #64
 231 0012 0BD0     		beq	.L10
 232              		.loc 1 450 0 is_stmt 0 discriminator 1
 233 0014 7B68     		ldr	r3, [r7, #4]
 234 0016 1B68     		ldr	r3, [r3]
 235 0018 002B     		cmp	r3, #0
 236 001a 07D0     		beq	.L10
 237 001c 40F20000 		movw	r0, #:lower16:.LC0
 238 0020 C0F20000 		movt	r0, #:upper16:.LC0
 239 0024 4FF4E171 		mov	r1, #450
 240 0028 FFF7FEFF 		bl	assert_failed
 241              	.L10:
 451:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ASYNCH_PREDIV(RTC_InitStruct->RTC_AsynchPrediv));
 242              		.loc 1 451 0 is_stmt 1
 243 002c 7B68     		ldr	r3, [r7, #4]
 244 002e 5B68     		ldr	r3, [r3, #4]
 245 0030 7F2B     		cmp	r3, #127
 246 0032 07D9     		bls	.L11
 247              		.loc 1 451 0 is_stmt 0 discriminator 1
 248 0034 40F20000 		movw	r0, #:lower16:.LC0
 249 0038 C0F20000 		movt	r0, #:upper16:.LC0
 250 003c 40F2C311 		movw	r1, #451
 251 0040 FFF7FEFF 		bl	assert_failed
 252              	.L11:
 452:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SYNCH_PREDIV(RTC_InitStruct->RTC_SynchPrediv));
 253              		.loc 1 452 0 is_stmt 1
 254 0044 7B68     		ldr	r3, [r7, #4]
 255 0046 9B68     		ldr	r3, [r3, #8]
 256 0048 B3F5004F 		cmp	r3, #32768
 257 004c 07D3     		bcc	.L12
 258              		.loc 1 452 0 is_stmt 0 discriminator 1
 259 004e 40F20000 		movw	r0, #:lower16:.LC0
 260 0052 C0F20000 		movt	r0, #:upper16:.LC0
 261 0056 4FF4E271 		mov	r1, #452
 262 005a FFF7FEFF 		bl	assert_failed
 263              	.L12:
 453:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 454:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 455:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 264              		.loc 1 455 0 is_stmt 1
 265 005e 4FF42053 		mov	r3, #10240
 266 0062 C4F20003 		movt	r3, 16384
 267 0066 CA22     		movs	r2, #202
 268 0068 5A62     		str	r2, [r3, #36]
 456:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 269              		.loc 1 456 0
 270 006a 4FF42053 		mov	r3, #10240
 271 006e C4F20003 		movt	r3, 16384
 272 0072 5322     		movs	r2, #83
 273 0074 5A62     		str	r2, [r3, #36]
 457:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 458:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Set Initialization mode */
 459:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 274              		.loc 1 459 0
 275 0076 FFF7FEFF 		bl	RTC_EnterInitMode
 276 007a 0346     		mov	r3, r0
 277 007c 002B     		cmp	r3, #0
 278 007e 02D1     		bne	.L13
 460:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 461:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
 279              		.loc 1 461 0
 280 0080 0023     		movs	r3, #0
 281 0082 FB73     		strb	r3, [r7, #15]
 282 0084 31E0     		b	.L14
 283              	.L13:
 462:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
 463:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 464:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 465:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Clear RTC CR FMT Bit */
 466:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR &= ((uint32_t)~(RTC_CR_FMT));
 284              		.loc 1 466 0
 285 0086 4FF42053 		mov	r3, #10240
 286 008a C4F20003 		movt	r3, 16384
 287 008e 4FF42052 		mov	r2, #10240
 288 0092 C4F20002 		movt	r2, 16384
 289 0096 9268     		ldr	r2, [r2, #8]
 290 0098 22F04002 		bic	r2, r2, #64
 291 009c 9A60     		str	r2, [r3, #8]
 467:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Set RTC_CR register */
 468:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR |=  ((uint32_t)(RTC_InitStruct->RTC_HourFormat));
 292              		.loc 1 468 0
 293 009e 4FF42053 		mov	r3, #10240
 294 00a2 C4F20003 		movt	r3, 16384
 295 00a6 4FF42052 		mov	r2, #10240
 296 00aa C4F20002 		movt	r2, 16384
 297 00ae 9168     		ldr	r1, [r2, #8]
 298 00b0 7A68     		ldr	r2, [r7, #4]
 299 00b2 1268     		ldr	r2, [r2]
 300 00b4 0A43     		orrs	r2, r2, r1
 301 00b6 9A60     		str	r2, [r3, #8]
 469:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 470:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the RTC PRER */
 471:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->PRER = (uint32_t)(RTC_InitStruct->RTC_SynchPrediv);
 302              		.loc 1 471 0
 303 00b8 4FF42053 		mov	r3, #10240
 304 00bc C4F20003 		movt	r3, 16384
 305 00c0 7A68     		ldr	r2, [r7, #4]
 306 00c2 9268     		ldr	r2, [r2, #8]
 307 00c4 1A61     		str	r2, [r3, #16]
 472:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->PRER |= (uint32_t)(RTC_InitStruct->RTC_AsynchPrediv << 16);
 308              		.loc 1 472 0
 309 00c6 4FF42053 		mov	r3, #10240
 310 00ca C4F20003 		movt	r3, 16384
 311 00ce 4FF42052 		mov	r2, #10240
 312 00d2 C4F20002 		movt	r2, 16384
 313 00d6 1169     		ldr	r1, [r2, #16]
 314 00d8 7A68     		ldr	r2, [r7, #4]
 315 00da 5268     		ldr	r2, [r2, #4]
 316 00dc 1204     		lsls	r2, r2, #16
 317 00de 0A43     		orrs	r2, r2, r1
 318 00e0 1A61     		str	r2, [r3, #16]
 473:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 474:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
 475:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_ExitInitMode();
 319              		.loc 1 475 0
 320 00e2 FFF7FEFF 		bl	RTC_ExitInitMode
 476:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 477:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;    
 321              		.loc 1 477 0
 322 00e6 0123     		movs	r3, #1
 323 00e8 FB73     		strb	r3, [r7, #15]
 324              	.L14:
 478:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 479:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 480:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 325              		.loc 1 480 0
 326 00ea 4FF42053 		mov	r3, #10240
 327 00ee C4F20003 		movt	r3, 16384
 328 00f2 FF22     		movs	r2, #255
 329 00f4 5A62     		str	r2, [r3, #36]
 481:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 482:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status;
 330              		.loc 1 482 0
 331 00f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 483:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 332              		.loc 1 483 0
 333 00f8 1846     		mov	r0, r3
 334 00fa 1037     		adds	r7, r7, #16
 335 00fc BD46     		mov	sp, r7
 336              		@ sp needed
 337 00fe 80BD     		pop	{r7, pc}
 338              		.cfi_endproc
 339              	.LFE111:
 341              		.section	.text.RTC_StructInit,"ax",%progbits
 342              		.align	2
 343              		.global	RTC_StructInit
 344              		.thumb
 345              		.thumb_func
 347              	RTC_StructInit:
 348              	.LFB112:
 484:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 485:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 486:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Fills each RTC_InitStruct member with its default value.
 487:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_InitStruct: pointer to a RTC_InitTypeDef structure which will be 
 488:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         initialized.
 489:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
 490:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 491:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_StructInit(RTC_InitTypeDef* RTC_InitStruct)
 492:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 349              		.loc 1 492 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 8
 352              		@ frame_needed = 1, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 354 0000 80B4     		push	{r7}
 355              	.LCFI6:
 356              		.cfi_def_cfa_offset 4
 357              		.cfi_offset 7, -4
 358 0002 83B0     		sub	sp, sp, #12
 359              	.LCFI7:
 360              		.cfi_def_cfa_offset 16
 361 0004 00AF     		add	r7, sp, #0
 362              	.LCFI8:
 363              		.cfi_def_cfa_register 7
 364 0006 7860     		str	r0, [r7, #4]
 493:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Initialize the RTC_HourFormat member */
 494:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_InitStruct->RTC_HourFormat = RTC_HourFormat_24;
 365              		.loc 1 494 0
 366 0008 7B68     		ldr	r3, [r7, #4]
 367 000a 0022     		movs	r2, #0
 368 000c 1A60     		str	r2, [r3]
 495:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 496:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Initialize the RTC_AsynchPrediv member */
 497:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_InitStruct->RTC_AsynchPrediv = (uint32_t)0x7F;
 369              		.loc 1 497 0
 370 000e 7B68     		ldr	r3, [r7, #4]
 371 0010 7F22     		movs	r2, #127
 372 0012 5A60     		str	r2, [r3, #4]
 498:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 499:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Initialize the RTC_SynchPrediv member */
 500:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_InitStruct->RTC_SynchPrediv = (uint32_t)0xFF; 
 373              		.loc 1 500 0
 374 0014 7B68     		ldr	r3, [r7, #4]
 375 0016 FF22     		movs	r2, #255
 376 0018 9A60     		str	r2, [r3, #8]
 501:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 377              		.loc 1 501 0
 378 001a 0C37     		adds	r7, r7, #12
 379 001c BD46     		mov	sp, r7
 380              		@ sp needed
 381 001e 5DF8047B 		ldr	r7, [sp], #4
 382 0022 7047     		bx	lr
 383              		.cfi_endproc
 384              	.LFE112:
 386              		.section	.text.RTC_WriteProtectionCmd,"ax",%progbits
 387              		.align	2
 388              		.global	RTC_WriteProtectionCmd
 389              		.thumb
 390              		.thumb_func
 392              	RTC_WriteProtectionCmd:
 393              	.LFB113:
 502:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 503:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 504:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or disables the RTC registers write protection.
 505:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   All the RTC registers are write protected except for RTC_ISR[13:8], 
 506:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         RTC_TAFCR and RTC_BKPxR.
 507:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   Writing a wrong key reactivates the write protection.
 508:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The protection mechanism is not affected by system reset.  
 509:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the write protection.
 510:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
 511:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
 512:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 513:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_WriteProtectionCmd(FunctionalState NewState)
 514:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 394              		.loc 1 514 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 8
 397              		@ frame_needed = 1, uses_anonymous_args = 0
 398 0000 80B5     		push	{r7, lr}
 399              	.LCFI9:
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 7, -8
 402              		.cfi_offset 14, -4
 403 0002 82B0     		sub	sp, sp, #8
 404              	.LCFI10:
 405              		.cfi_def_cfa_offset 16
 406 0004 00AF     		add	r7, sp, #0
 407              	.LCFI11:
 408              		.cfi_def_cfa_register 7
 409 0006 0346     		mov	r3, r0
 410 0008 FB71     		strb	r3, [r7, #7]
 515:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 516:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 411              		.loc 1 516 0
 412 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 413 000c 002B     		cmp	r3, #0
 414 000e 0AD0     		beq	.L18
 415              		.loc 1 516 0 is_stmt 0 discriminator 1
 416 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 417 0012 012B     		cmp	r3, #1
 418 0014 07D0     		beq	.L18
 419 0016 40F20000 		movw	r0, #:lower16:.LC0
 420 001a C0F20000 		movt	r0, #:upper16:.LC0
 421 001e 4FF40171 		mov	r1, #516
 422 0022 FFF7FEFF 		bl	assert_failed
 423              	.L18:
 517:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 518:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
 424              		.loc 1 518 0 is_stmt 1
 425 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 426 0028 002B     		cmp	r3, #0
 427 002a 06D0     		beq	.L19
 519:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 520:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Enable the write protection for RTC registers */
 521:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->WPR = 0xFF;   
 428              		.loc 1 521 0
 429 002c 4FF42053 		mov	r3, #10240
 430 0030 C4F20003 		movt	r3, 16384
 431 0034 FF22     		movs	r2, #255
 432 0036 5A62     		str	r2, [r3, #36]
 433 0038 0BE0     		b	.L17
 434              	.L19:
 522:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 523:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 524:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 525:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Disable the write protection for RTC registers */
 526:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->WPR = 0xCA;
 435              		.loc 1 526 0
 436 003a 4FF42053 		mov	r3, #10240
 437 003e C4F20003 		movt	r3, 16384
 438 0042 CA22     		movs	r2, #202
 439 0044 5A62     		str	r2, [r3, #36]
 527:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->WPR = 0x53;    
 440              		.loc 1 527 0
 441 0046 4FF42053 		mov	r3, #10240
 442 004a C4F20003 		movt	r3, 16384
 443 004e 5322     		movs	r2, #83
 444 0050 5A62     		str	r2, [r3, #36]
 445              	.L17:
 528:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 529:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 446              		.loc 1 529 0
 447 0052 0837     		adds	r7, r7, #8
 448 0054 BD46     		mov	sp, r7
 449              		@ sp needed
 450 0056 80BD     		pop	{r7, pc}
 451              		.cfi_endproc
 452              	.LFE113:
 454              		.section	.text.RTC_EnterInitMode,"ax",%progbits
 455              		.align	2
 456              		.global	RTC_EnterInitMode
 457              		.thumb
 458              		.thumb_func
 460              	RTC_EnterInitMode:
 461              	.LFB114:
 530:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 531:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 532:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enters the RTC Initialization mode.
 533:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the 
 534:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         RTC_WriteProtectionCmd(DISABLE) before calling this function.    
 535:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
 536:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 537:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC is in Init mode
 538:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC is not in Init mode  
 539:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 540:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_EnterInitMode(void)
 541:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 462              		.loc 1 541 0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 16
 465              		@ frame_needed = 1, uses_anonymous_args = 0
 466              		@ link register save eliminated.
 467 0000 80B4     		push	{r7}
 468              	.LCFI12:
 469              		.cfi_def_cfa_offset 4
 470              		.cfi_offset 7, -4
 471 0002 85B0     		sub	sp, sp, #20
 472              	.LCFI13:
 473              		.cfi_def_cfa_offset 24
 474 0004 00AF     		add	r7, sp, #0
 475              	.LCFI14:
 476              		.cfi_def_cfa_register 7
 542:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t initcounter = 0x00;
 477              		.loc 1 542 0
 478 0006 0023     		movs	r3, #0
 479 0008 7B60     		str	r3, [r7, #4]
 543:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 480              		.loc 1 543 0
 481 000a 0023     		movs	r3, #0
 482 000c FB73     		strb	r3, [r7, #15]
 544:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t initstatus = 0x00;
 483              		.loc 1 544 0
 484 000e 0023     		movs	r3, #0
 485 0010 BB60     		str	r3, [r7, #8]
 545:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      
 546:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check if the Initialization mode is set */
 547:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 486              		.loc 1 547 0
 487 0012 4FF42053 		mov	r3, #10240
 488 0016 C4F20003 		movt	r3, 16384
 489 001a DB68     		ldr	r3, [r3, #12]
 490 001c 03F04003 		and	r3, r3, #64
 491 0020 002B     		cmp	r3, #0
 492 0022 27D1     		bne	.L22
 548:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 549:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Set the Initialization mode */
 550:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->ISR = (uint32_t)RTC_INIT_MASK;
 493              		.loc 1 550 0
 494 0024 4FF42053 		mov	r3, #10240
 495 0028 C4F20003 		movt	r3, 16384
 496 002c 4FF0FF32 		mov	r2, #-1
 497 0030 DA60     		str	r2, [r3, #12]
 498              	.L24:
 551:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 552:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
 553:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     do
 554:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 555:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       initstatus = RTC->ISR & RTC_ISR_INITF;
 499              		.loc 1 555 0 discriminator 1
 500 0032 4FF42053 		mov	r3, #10240
 501 0036 C4F20003 		movt	r3, 16384
 502 003a DB68     		ldr	r3, [r3, #12]
 503 003c 03F04003 		and	r3, r3, #64
 504 0040 BB60     		str	r3, [r7, #8]
 556:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       initcounter++;  
 505              		.loc 1 556 0 discriminator 1
 506 0042 7B68     		ldr	r3, [r7, #4]
 507 0044 0133     		adds	r3, r3, #1
 508 0046 7B60     		str	r3, [r7, #4]
 557:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } while((initcounter != INITMODE_TIMEOUT) && (initstatus == 0x00));
 509              		.loc 1 557 0 discriminator 1
 510 0048 7B68     		ldr	r3, [r7, #4]
 511 004a B3F5803F 		cmp	r3, #65536
 512 004e 02D0     		beq	.L23
 513 0050 BB68     		ldr	r3, [r7, #8]
 514 0052 002B     		cmp	r3, #0
 515 0054 EDD0     		beq	.L24
 516              	.L23:
 558:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 559:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->ISR & RTC_ISR_INITF) != RESET)
 517              		.loc 1 559 0
 518 0056 4FF42053 		mov	r3, #10240
 519 005a C4F20003 		movt	r3, 16384
 520 005e DB68     		ldr	r3, [r3, #12]
 521 0060 03F04003 		and	r3, r3, #64
 522 0064 002B     		cmp	r3, #0
 523 0066 02D0     		beq	.L25
 560:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 561:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = SUCCESS;
 524              		.loc 1 561 0
 525 0068 0123     		movs	r3, #1
 526 006a FB73     		strb	r3, [r7, #15]
 527 006c 04E0     		b	.L27
 528              	.L25:
 562:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 563:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
 564:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 565:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = ERROR;
 529              		.loc 1 565 0
 530 006e 0023     		movs	r3, #0
 531 0070 FB73     		strb	r3, [r7, #15]
 532 0072 01E0     		b	.L27
 533              	.L22:
 566:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }        
 567:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 568:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 569:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 570:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;  
 534              		.loc 1 570 0
 535 0074 0123     		movs	r3, #1
 536 0076 FB73     		strb	r3, [r7, #15]
 537              	.L27:
 571:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
 572:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 573:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (status);  
 538              		.loc 1 573 0
 539 0078 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 574:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 540              		.loc 1 574 0
 541 007a 1846     		mov	r0, r3
 542 007c 1437     		adds	r7, r7, #20
 543 007e BD46     		mov	sp, r7
 544              		@ sp needed
 545 0080 5DF8047B 		ldr	r7, [sp], #4
 546 0084 7047     		bx	lr
 547              		.cfi_endproc
 548              	.LFE114:
 550 0086 00BF     		.section	.text.RTC_ExitInitMode,"ax",%progbits
 551              		.align	2
 552              		.global	RTC_ExitInitMode
 553              		.thumb
 554              		.thumb_func
 556              	RTC_ExitInitMode:
 557              	.LFB115:
 575:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 576:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 577:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Exits the RTC Initialization mode.
 578:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   When the initialization sequence is complete, the calendar restarts 
 579:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         counting after 4 RTCCLK cycles.  
 580:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the 
 581:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         RTC_WriteProtectionCmd(DISABLE) before calling this function.      
 582:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
 583:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
 584:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 585:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_ExitInitMode(void)
 586:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** { 
 558              		.loc 1 586 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 1, uses_anonymous_args = 0
 562              		@ link register save eliminated.
 563 0000 80B4     		push	{r7}
 564              	.LCFI15:
 565              		.cfi_def_cfa_offset 4
 566              		.cfi_offset 7, -4
 567 0002 00AF     		add	r7, sp, #0
 568              	.LCFI16:
 569              		.cfi_def_cfa_register 7
 587:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Exit Initialization mode */
 588:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->ISR &= (uint32_t)~RTC_ISR_INIT;  
 570              		.loc 1 588 0
 571 0004 4FF42053 		mov	r3, #10240
 572 0008 C4F20003 		movt	r3, 16384
 573 000c 4FF42052 		mov	r2, #10240
 574 0010 C4F20002 		movt	r2, 16384
 575 0014 D268     		ldr	r2, [r2, #12]
 576 0016 22F08002 		bic	r2, r2, #128
 577 001a DA60     		str	r2, [r3, #12]
 589:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 578              		.loc 1 589 0
 579 001c BD46     		mov	sp, r7
 580              		@ sp needed
 581 001e 5DF8047B 		ldr	r7, [sp], #4
 582 0022 7047     		bx	lr
 583              		.cfi_endproc
 584              	.LFE115:
 586              		.section	.text.RTC_WaitForSynchro,"ax",%progbits
 587              		.align	2
 588              		.global	RTC_WaitForSynchro
 589              		.thumb
 590              		.thumb_func
 592              	RTC_WaitForSynchro:
 593              	.LFB116:
 590:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 591:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 592:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Waits until the RTC Time and Date registers (RTC_TR and RTC_DR) are 
 593:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         synchronized with RTC APB clock.
 594:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The RTC Resynchronization mode is write protected, use the 
 595:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         RTC_WriteProtectionCmd(DISABLE) before calling this function. 
 596:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   To read the calendar through the shadow registers after Calendar 
 597:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         initialization, calendar update or after wakeup from low power modes 
 598:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         the software must first clear the RSF flag. 
 599:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         The software must then wait until it is set again before reading 
 600:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         the calendar, which means that the calendar registers have been 
 601:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         correctly copied into the RTC_TR and RTC_DR shadow registers.   
 602:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
 603:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 604:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC registers are synchronised
 605:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC registers are not synchronised
 606:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 607:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_WaitForSynchro(void)
 608:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 594              		.loc 1 608 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 16
 597              		@ frame_needed = 1, uses_anonymous_args = 0
 598              		@ link register save eliminated.
 599 0000 80B4     		push	{r7}
 600              	.LCFI17:
 601              		.cfi_def_cfa_offset 4
 602              		.cfi_offset 7, -4
 603 0002 85B0     		sub	sp, sp, #20
 604              	.LCFI18:
 605              		.cfi_def_cfa_offset 24
 606 0004 00AF     		add	r7, sp, #0
 607              	.LCFI19:
 608              		.cfi_def_cfa_register 7
 609:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t synchrocounter = 0;
 609              		.loc 1 609 0
 610 0006 0023     		movs	r3, #0
 611 0008 7B60     		str	r3, [r7, #4]
 610:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 612              		.loc 1 610 0
 613 000a 0023     		movs	r3, #0
 614 000c FB73     		strb	r3, [r7, #15]
 611:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t synchrostatus = 0x00;
 615              		.loc 1 611 0
 616 000e 0023     		movs	r3, #0
 617 0010 BB60     		str	r3, [r7, #8]
 612:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 613:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 614:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 618              		.loc 1 614 0
 619 0012 4FF42053 		mov	r3, #10240
 620 0016 C4F20003 		movt	r3, 16384
 621 001a CA22     		movs	r2, #202
 622 001c 5A62     		str	r2, [r3, #36]
 615:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 623              		.loc 1 615 0
 624 001e 4FF42053 		mov	r3, #10240
 625 0022 C4F20003 		movt	r3, 16384
 626 0026 5322     		movs	r2, #83
 627 0028 5A62     		str	r2, [r3, #36]
 616:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 617:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear RSF flag */
 618:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->ISR &= (uint32_t)RTC_RSF_MASK;
 628              		.loc 1 618 0
 629 002a 4FF42053 		mov	r3, #10240
 630 002e C4F20003 		movt	r3, 16384
 631 0032 4FF42052 		mov	r2, #10240
 632 0036 C4F20002 		movt	r2, 16384
 633 003a D268     		ldr	r2, [r2, #12]
 634 003c 22F0A002 		bic	r2, r2, #160
 635 0040 DA60     		str	r2, [r3, #12]
 636              	.L32:
 619:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 620:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Wait the registers to be synchronised */
 621:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   do
 622:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 623:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     synchrostatus = RTC->ISR & RTC_ISR_RSF;
 637              		.loc 1 623 0 discriminator 1
 638 0042 4FF42053 		mov	r3, #10240
 639 0046 C4F20003 		movt	r3, 16384
 640 004a DB68     		ldr	r3, [r3, #12]
 641 004c 03F02003 		and	r3, r3, #32
 642 0050 BB60     		str	r3, [r7, #8]
 624:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     synchrocounter++;  
 643              		.loc 1 624 0 discriminator 1
 644 0052 7B68     		ldr	r3, [r7, #4]
 645 0054 0133     		adds	r3, r3, #1
 646 0056 7B60     		str	r3, [r7, #4]
 625:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } while((synchrocounter != SYNCHRO_TIMEOUT) && (synchrostatus == 0x00));
 647              		.loc 1 625 0 discriminator 1
 648 0058 7B68     		ldr	r3, [r7, #4]
 649 005a B3F5003F 		cmp	r3, #131072
 650 005e 02D0     		beq	.L31
 651 0060 BB68     		ldr	r3, [r7, #8]
 652 0062 002B     		cmp	r3, #0
 653 0064 EDD0     		beq	.L32
 654              	.L31:
 626:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 627:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_RSF) != RESET)
 655              		.loc 1 627 0
 656 0066 4FF42053 		mov	r3, #10240
 657 006a C4F20003 		movt	r3, 16384
 658 006e DB68     		ldr	r3, [r3, #12]
 659 0070 03F02003 		and	r3, r3, #32
 660 0074 002B     		cmp	r3, #0
 661 0076 02D0     		beq	.L33
 628:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 629:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;
 662              		.loc 1 629 0
 663 0078 0123     		movs	r3, #1
 664 007a FB73     		strb	r3, [r7, #15]
 665 007c 01E0     		b	.L34
 666              	.L33:
 630:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 631:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 632:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 633:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
 667              		.loc 1 633 0
 668 007e 0023     		movs	r3, #0
 669 0080 FB73     		strb	r3, [r7, #15]
 670              	.L34:
 634:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }        
 635:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 636:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 637:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 671              		.loc 1 637 0
 672 0082 4FF42053 		mov	r3, #10240
 673 0086 C4F20003 		movt	r3, 16384
 674 008a FF22     		movs	r2, #255
 675 008c 5A62     		str	r2, [r3, #36]
 638:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 639:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (status); 
 676              		.loc 1 639 0
 677 008e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 640:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 678              		.loc 1 640 0
 679 0090 1846     		mov	r0, r3
 680 0092 1437     		adds	r7, r7, #20
 681 0094 BD46     		mov	sp, r7
 682              		@ sp needed
 683 0096 5DF8047B 		ldr	r7, [sp], #4
 684 009a 7047     		bx	lr
 685              		.cfi_endproc
 686              	.LFE116:
 688              		.section	.text.RTC_RefClockCmd,"ax",%progbits
 689              		.align	2
 690              		.global	RTC_RefClockCmd
 691              		.thumb
 692              		.thumb_func
 694              	RTC_RefClockCmd:
 695              	.LFB117:
 641:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 642:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 643:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or disables the RTC reference clock detection.
 644:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the RTC reference clock.
 645:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
 646:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 647:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC reference clock detection is enabled
 648:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC reference clock detection is disabled  
 649:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 650:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_RefClockCmd(FunctionalState NewState)
 651:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** { 
 696              		.loc 1 651 0
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 16
 699              		@ frame_needed = 1, uses_anonymous_args = 0
 700 0000 80B5     		push	{r7, lr}
 701              	.LCFI20:
 702              		.cfi_def_cfa_offset 8
 703              		.cfi_offset 7, -8
 704              		.cfi_offset 14, -4
 705 0002 84B0     		sub	sp, sp, #16
 706              	.LCFI21:
 707              		.cfi_def_cfa_offset 24
 708 0004 00AF     		add	r7, sp, #0
 709              	.LCFI22:
 710              		.cfi_def_cfa_register 7
 711 0006 0346     		mov	r3, r0
 712 0008 FB71     		strb	r3, [r7, #7]
 652:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 713              		.loc 1 652 0
 714 000a 0023     		movs	r3, #0
 715 000c FB73     		strb	r3, [r7, #15]
 653:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 654:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 655:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 716              		.loc 1 655 0
 717 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 718 0010 002B     		cmp	r3, #0
 719 0012 0AD0     		beq	.L37
 720              		.loc 1 655 0 is_stmt 0 discriminator 1
 721 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 722 0016 012B     		cmp	r3, #1
 723 0018 07D0     		beq	.L37
 724 001a 40F20000 		movw	r0, #:lower16:.LC0
 725 001e C0F20000 		movt	r0, #:upper16:.LC0
 726 0022 40F28F21 		movw	r1, #655
 727 0026 FFF7FEFF 		bl	assert_failed
 728              	.L37:
 656:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 657:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 658:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 729              		.loc 1 658 0 is_stmt 1
 730 002a 4FF42053 		mov	r3, #10240
 731 002e C4F20003 		movt	r3, 16384
 732 0032 CA22     		movs	r2, #202
 733 0034 5A62     		str	r2, [r3, #36]
 659:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 734              		.loc 1 659 0
 735 0036 4FF42053 		mov	r3, #10240
 736 003a C4F20003 		movt	r3, 16384
 737 003e 5322     		movs	r2, #83
 738 0040 5A62     		str	r2, [r3, #36]
 660:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 661:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Set Initialization mode */
 662:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 739              		.loc 1 662 0
 740 0042 FFF7FEFF 		bl	RTC_EnterInitMode
 741 0046 0346     		mov	r3, r0
 742 0048 002B     		cmp	r3, #0
 743 004a 02D1     		bne	.L38
 663:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 664:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
 744              		.loc 1 664 0
 745 004c 0023     		movs	r3, #0
 746 004e FB73     		strb	r3, [r7, #15]
 747 0050 1FE0     		b	.L39
 748              	.L38:
 665:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
 666:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 667:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {  
 668:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if (NewState != DISABLE)
 749              		.loc 1 668 0
 750 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 751 0054 002B     		cmp	r3, #0
 752 0056 0CD0     		beq	.L40
 669:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 670:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       /* Enable the RTC reference clock detection */
 671:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->CR |= RTC_CR_REFCKON;   
 753              		.loc 1 671 0
 754 0058 4FF42053 		mov	r3, #10240
 755 005c C4F20003 		movt	r3, 16384
 756 0060 4FF42052 		mov	r2, #10240
 757 0064 C4F20002 		movt	r2, 16384
 758 0068 9268     		ldr	r2, [r2, #8]
 759 006a 42F01002 		orr	r2, r2, #16
 760 006e 9A60     		str	r2, [r3, #8]
 761 0070 0BE0     		b	.L41
 762              	.L40:
 672:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 673:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
 674:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 675:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       /* Disable the RTC reference clock detection */
 676:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->CR &= ~RTC_CR_REFCKON;    
 763              		.loc 1 676 0
 764 0072 4FF42053 		mov	r3, #10240
 765 0076 C4F20003 		movt	r3, 16384
 766 007a 4FF42052 		mov	r2, #10240
 767 007e C4F20002 		movt	r2, 16384
 768 0082 9268     		ldr	r2, [r2, #8]
 769 0084 22F01002 		bic	r2, r2, #16
 770 0088 9A60     		str	r2, [r3, #8]
 771              	.L41:
 677:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 678:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
 679:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_ExitInitMode();
 772              		.loc 1 679 0
 773 008a FFF7FEFF 		bl	RTC_ExitInitMode
 680:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 681:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;
 774              		.loc 1 681 0
 775 008e 0123     		movs	r3, #1
 776 0090 FB73     		strb	r3, [r7, #15]
 777              	.L39:
 682:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 683:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 684:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 685:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;  
 778              		.loc 1 685 0
 779 0092 4FF42053 		mov	r3, #10240
 780 0096 C4F20003 		movt	r3, 16384
 781 009a FF22     		movs	r2, #255
 782 009c 5A62     		str	r2, [r3, #36]
 686:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 687:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status; 
 783              		.loc 1 687 0
 784 009e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 688:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 785              		.loc 1 688 0
 786 00a0 1846     		mov	r0, r3
 787 00a2 1037     		adds	r7, r7, #16
 788 00a4 BD46     		mov	sp, r7
 789              		@ sp needed
 790 00a6 80BD     		pop	{r7, pc}
 791              		.cfi_endproc
 792              	.LFE117:
 794              		.section	.text.RTC_BypassShadowCmd,"ax",%progbits
 795              		.align	2
 796              		.global	RTC_BypassShadowCmd
 797              		.thumb
 798              		.thumb_func
 800              	RTC_BypassShadowCmd:
 801              	.LFB118:
 689:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 690:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 691:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or Disables the Bypass Shadow feature.
 692:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken 
 693:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         directly from the Calendar counter.
 694:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the Bypass Shadow feature.
 695:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         This parameter can be: ENABLE or DISABLE.
 696:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
 697:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** */
 698:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_BypassShadowCmd(FunctionalState NewState)
 699:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 802              		.loc 1 699 0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 8
 805              		@ frame_needed = 1, uses_anonymous_args = 0
 806 0000 80B5     		push	{r7, lr}
 807              	.LCFI23:
 808              		.cfi_def_cfa_offset 8
 809              		.cfi_offset 7, -8
 810              		.cfi_offset 14, -4
 811 0002 82B0     		sub	sp, sp, #8
 812              	.LCFI24:
 813              		.cfi_def_cfa_offset 16
 814 0004 00AF     		add	r7, sp, #0
 815              	.LCFI25:
 816              		.cfi_def_cfa_register 7
 817 0006 0346     		mov	r3, r0
 818 0008 FB71     		strb	r3, [r7, #7]
 700:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 701:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 819              		.loc 1 701 0
 820 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 821 000c 002B     		cmp	r3, #0
 822 000e 0AD0     		beq	.L44
 823              		.loc 1 701 0 is_stmt 0 discriminator 1
 824 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 825 0012 012B     		cmp	r3, #1
 826 0014 07D0     		beq	.L44
 827 0016 40F20000 		movw	r0, #:lower16:.LC0
 828 001a C0F20000 		movt	r0, #:upper16:.LC0
 829 001e 40F2BD21 		movw	r1, #701
 830 0022 FFF7FEFF 		bl	assert_failed
 831              	.L44:
 702:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 703:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 704:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 832              		.loc 1 704 0 is_stmt 1
 833 0026 4FF42053 		mov	r3, #10240
 834 002a C4F20003 		movt	r3, 16384
 835 002e CA22     		movs	r2, #202
 836 0030 5A62     		str	r2, [r3, #36]
 705:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 837              		.loc 1 705 0
 838 0032 4FF42053 		mov	r3, #10240
 839 0036 C4F20003 		movt	r3, 16384
 840 003a 5322     		movs	r2, #83
 841 003c 5A62     		str	r2, [r3, #36]
 706:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 707:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
 842              		.loc 1 707 0
 843 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 844 0040 002B     		cmp	r3, #0
 845 0042 0CD0     		beq	.L45
 708:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 709:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Set the BYPSHAD bit */
 710:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR |= (uint8_t)RTC_CR_BYPSHAD;
 846              		.loc 1 710 0
 847 0044 4FF42053 		mov	r3, #10240
 848 0048 C4F20003 		movt	r3, 16384
 849 004c 4FF42052 		mov	r2, #10240
 850 0050 C4F20002 		movt	r2, 16384
 851 0054 9268     		ldr	r2, [r2, #8]
 852 0056 42F02002 		orr	r2, r2, #32
 853 005a 9A60     		str	r2, [r3, #8]
 854 005c 0BE0     		b	.L46
 855              	.L45:
 711:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 712:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 713:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 714:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Reset the BYPSHAD bit */
 715:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR &= (uint8_t)~RTC_CR_BYPSHAD;
 856              		.loc 1 715 0
 857 005e 4FF42053 		mov	r3, #10240
 858 0062 C4F20003 		movt	r3, 16384
 859 0066 4FF42052 		mov	r2, #10240
 860 006a C4F20002 		movt	r2, 16384
 861 006e 9268     		ldr	r2, [r2, #8]
 862 0070 02F0DF02 		and	r2, r2, #223
 863 0074 9A60     		str	r2, [r3, #8]
 864              	.L46:
 716:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 717:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 718:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 719:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;
 865              		.loc 1 719 0
 866 0076 4FF42053 		mov	r3, #10240
 867 007a C4F20003 		movt	r3, 16384
 868 007e FF22     		movs	r2, #255
 869 0080 5A62     		str	r2, [r3, #36]
 720:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 870              		.loc 1 720 0
 871 0082 0837     		adds	r7, r7, #8
 872 0084 BD46     		mov	sp, r7
 873              		@ sp needed
 874 0086 80BD     		pop	{r7, pc}
 875              		.cfi_endproc
 876              	.LFE118:
 878              		.section	.text.RTC_SetTime,"ax",%progbits
 879              		.align	2
 880              		.global	RTC_SetTime
 881              		.thumb
 882              		.thumb_func
 884              	RTC_SetTime:
 885              	.LFB119:
 721:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 722:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 723:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
 724:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 725:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 726:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group2 Time and Date configuration functions
 727:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Time and Date configuration functions 
 728:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
 729:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
 730:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
 731:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    Time and Date configuration functions
 732:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
 733:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 734:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   This section provide functions allowing to program and read the RTC Calendar
 735:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   (Time and Date).
 736:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 737:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
 738:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
 739:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 740:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 741:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 742:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Set the RTC current time.
 743:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the entered parameters.
 744:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be  one of the following values:
 745:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN:  Binary data format 
 746:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD:  BCD data format
 747:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TimeStruct: pointer to a RTC_TimeTypeDef structure that contains 
 748:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                        the time configuration information for the RTC.     
 749:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 750:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Time register is configured
 751:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC Time register is not configured
 752:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 753:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_SetTime(uint32_t RTC_Format, RTC_TimeTypeDef* RTC_TimeStruct)
 754:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 886              		.loc 1 754 0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 16
 889              		@ frame_needed = 1, uses_anonymous_args = 0
 890 0000 90B5     		push	{r4, r7, lr}
 891              	.LCFI26:
 892              		.cfi_def_cfa_offset 12
 893              		.cfi_offset 4, -12
 894              		.cfi_offset 7, -8
 895              		.cfi_offset 14, -4
 896 0002 85B0     		sub	sp, sp, #20
 897              	.LCFI27:
 898              		.cfi_def_cfa_offset 32
 899 0004 00AF     		add	r7, sp, #0
 900              	.LCFI28:
 901              		.cfi_def_cfa_register 7
 902 0006 7860     		str	r0, [r7, #4]
 903 0008 3960     		str	r1, [r7]
 755:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 904              		.loc 1 755 0
 905 000a 0023     		movs	r3, #0
 906 000c FB60     		str	r3, [r7, #12]
 756:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 907              		.loc 1 756 0
 908 000e 0023     		movs	r3, #0
 909 0010 FB72     		strb	r3, [r7, #11]
 757:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 758:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 759:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
 910              		.loc 1 759 0
 911 0012 7B68     		ldr	r3, [r7, #4]
 912 0014 002B     		cmp	r3, #0
 913 0016 0AD0     		beq	.L48
 914              		.loc 1 759 0 is_stmt 0 discriminator 1
 915 0018 7B68     		ldr	r3, [r7, #4]
 916 001a 012B     		cmp	r3, #1
 917 001c 07D0     		beq	.L48
 918 001e 40F20000 		movw	r0, #:lower16:.LC0
 919 0022 C0F20000 		movt	r0, #:upper16:.LC0
 920 0026 40F2F721 		movw	r1, #759
 921 002a FFF7FEFF 		bl	assert_failed
 922              	.L48:
 760:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 761:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 923              		.loc 1 761 0 is_stmt 1
 924 002e 7B68     		ldr	r3, [r7, #4]
 925 0030 002B     		cmp	r3, #0
 926 0032 51D1     		bne	.L49
 762:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 763:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
 927              		.loc 1 763 0
 928 0034 4FF42053 		mov	r3, #10240
 929 0038 C4F20003 		movt	r3, 16384
 930 003c 9B68     		ldr	r3, [r3, #8]
 931 003e 03F04003 		and	r3, r3, #64
 932 0042 002B     		cmp	r3, #0
 933 0044 20D0     		beq	.L50
 764:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 765:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR12(RTC_TimeStruct->RTC_Hours));
 934              		.loc 1 765 0
 935 0046 3B68     		ldr	r3, [r7]
 936 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 937 004a 002B     		cmp	r3, #0
 938 004c 03D0     		beq	.L51
 939              		.loc 1 765 0 is_stmt 0 discriminator 2
 940 004e 3B68     		ldr	r3, [r7]
 941 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 942 0052 0C2B     		cmp	r3, #12
 943 0054 07D9     		bls	.L52
 944              	.L51:
 945              		.loc 1 765 0 discriminator 1
 946 0056 40F20000 		movw	r0, #:lower16:.LC0
 947 005a C0F20000 		movt	r0, #:upper16:.LC0
 948 005e 40F2FD21 		movw	r1, #765
 949 0062 FFF7FEFF 		bl	assert_failed
 950              	.L52:
 766:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_H12(RTC_TimeStruct->RTC_H12));
 951              		.loc 1 766 0 is_stmt 1
 952 0066 3B68     		ldr	r3, [r7]
 953 0068 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 954 006a 002B     		cmp	r3, #0
 955 006c 1BD0     		beq	.L53
 956              		.loc 1 766 0 is_stmt 0 discriminator 1
 957 006e 3B68     		ldr	r3, [r7]
 958 0070 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 959 0072 402B     		cmp	r3, #64
 960 0074 17D0     		beq	.L53
 961 0076 40F20000 		movw	r0, #:lower16:.LC0
 962 007a C0F20000 		movt	r0, #:upper16:.LC0
 963 007e 40F2FE21 		movw	r1, #766
 964 0082 FFF7FEFF 		bl	assert_failed
 965 0086 0EE0     		b	.L53
 966              	.L50:
 767:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } 
 768:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
 769:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 770:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC_TimeStruct->RTC_H12 = 0x00;
 967              		.loc 1 770 0 is_stmt 1
 968 0088 3B68     		ldr	r3, [r7]
 969 008a 0022     		movs	r2, #0
 970 008c DA70     		strb	r2, [r3, #3]
 771:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_TimeStruct->RTC_Hours));
 971              		.loc 1 771 0
 972 008e 3B68     		ldr	r3, [r7]
 973 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 974 0092 172B     		cmp	r3, #23
 975 0094 07D9     		bls	.L53
 976              		.loc 1 771 0 is_stmt 0 discriminator 1
 977 0096 40F20000 		movw	r0, #:lower16:.LC0
 978 009a C0F20000 		movt	r0, #:upper16:.LC0
 979 009e 40F20331 		movw	r1, #771
 980 00a2 FFF7FEFF 		bl	assert_failed
 981              	.L53:
 772:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 773:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_TimeStruct->RTC_Minutes));
 982              		.loc 1 773 0 is_stmt 1
 983 00a6 3B68     		ldr	r3, [r7]
 984 00a8 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 985 00aa 3B2B     		cmp	r3, #59
 986 00ac 07D9     		bls	.L54
 987              		.loc 1 773 0 is_stmt 0 discriminator 1
 988 00ae 40F20000 		movw	r0, #:lower16:.LC0
 989 00b2 C0F20000 		movt	r0, #:upper16:.LC0
 990 00b6 40F20531 		movw	r1, #773
 991 00ba FFF7FEFF 		bl	assert_failed
 992              	.L54:
 774:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_TimeStruct->RTC_Seconds));
 993              		.loc 1 774 0 is_stmt 1
 994 00be 3B68     		ldr	r3, [r7]
 995 00c0 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 996 00c2 3B2B     		cmp	r3, #59
 997 00c4 6AD9     		bls	.L55
 998              		.loc 1 774 0 is_stmt 0 discriminator 1
 999 00c6 40F20000 		movw	r0, #:lower16:.LC0
 1000 00ca C0F20000 		movt	r0, #:upper16:.LC0
 1001 00ce 40F20631 		movw	r1, #774
 1002 00d2 FFF7FEFF 		bl	assert_failed
 1003 00d6 61E0     		b	.L55
 1004              	.L49:
 775:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 776:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 777:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 778:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
 1005              		.loc 1 778 0 is_stmt 1
 1006 00d8 4FF42053 		mov	r3, #10240
 1007 00dc C4F20003 		movt	r3, 16384
 1008 00e0 9B68     		ldr	r3, [r3, #8]
 1009 00e2 03F04003 		and	r3, r3, #64
 1010 00e6 002B     		cmp	r3, #0
 1011 00e8 25D0     		beq	.L56
 779:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 780:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       tmpreg = RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Hours);
 1012              		.loc 1 780 0
 1013 00ea 3B68     		ldr	r3, [r7]
 1014 00ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1015 00ee 1846     		mov	r0, r3
 1016 00f0 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1017 00f4 0346     		mov	r3, r0
 1018 00f6 FB60     		str	r3, [r7, #12]
 781:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
 1019              		.loc 1 781 0
 1020 00f8 FB68     		ldr	r3, [r7, #12]
 1021 00fa 002B     		cmp	r3, #0
 1022 00fc 02D0     		beq	.L57
 1023              		.loc 1 781 0 is_stmt 0 discriminator 2
 1024 00fe FB68     		ldr	r3, [r7, #12]
 1025 0100 0C2B     		cmp	r3, #12
 1026 0102 07D9     		bls	.L58
 1027              	.L57:
 1028              		.loc 1 781 0 discriminator 1
 1029 0104 40F20000 		movw	r0, #:lower16:.LC0
 1030 0108 C0F20000 		movt	r0, #:upper16:.LC0
 1031 010c 40F20D31 		movw	r1, #781
 1032 0110 FFF7FEFF 		bl	assert_failed
 1033              	.L58:
 782:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_H12(RTC_TimeStruct->RTC_H12)); 
 1034              		.loc 1 782 0 is_stmt 1
 1035 0114 3B68     		ldr	r3, [r7]
 1036 0116 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1037 0118 002B     		cmp	r3, #0
 1038 011a 1FD0     		beq	.L59
 1039              		.loc 1 782 0 is_stmt 0 discriminator 1
 1040 011c 3B68     		ldr	r3, [r7]
 1041 011e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1042 0120 402B     		cmp	r3, #64
 1043 0122 1BD0     		beq	.L59
 1044 0124 40F20000 		movw	r0, #:lower16:.LC0
 1045 0128 C0F20000 		movt	r0, #:upper16:.LC0
 1046 012c 40F20E31 		movw	r1, #782
 1047 0130 FFF7FEFF 		bl	assert_failed
 1048 0134 12E0     		b	.L59
 1049              	.L56:
 783:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } 
 784:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
 785:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 786:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC_TimeStruct->RTC_H12 = 0x00;
 1050              		.loc 1 786 0 is_stmt 1
 1051 0136 3B68     		ldr	r3, [r7]
 1052 0138 0022     		movs	r2, #0
 1053 013a DA70     		strb	r2, [r3, #3]
 787:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Hours)));
 1054              		.loc 1 787 0
 1055 013c 3B68     		ldr	r3, [r7]
 1056 013e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1057 0140 1846     		mov	r0, r3
 1058 0142 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1059 0146 0346     		mov	r3, r0
 1060 0148 172B     		cmp	r3, #23
 1061 014a 07D9     		bls	.L59
 1062              		.loc 1 787 0 is_stmt 0 discriminator 1
 1063 014c 40F20000 		movw	r0, #:lower16:.LC0
 1064 0150 C0F20000 		movt	r0, #:upper16:.LC0
 1065 0154 40F21331 		movw	r1, #787
 1066 0158 FFF7FEFF 		bl	assert_failed
 1067              	.L59:
 788:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 789:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Minutes)));
 1068              		.loc 1 789 0 is_stmt 1
 1069 015c 3B68     		ldr	r3, [r7]
 1070 015e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1071 0160 1846     		mov	r0, r3
 1072 0162 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1073 0166 0346     		mov	r3, r0
 1074 0168 3B2B     		cmp	r3, #59
 1075 016a 07D9     		bls	.L60
 1076              		.loc 1 789 0 is_stmt 0 discriminator 1
 1077 016c 40F20000 		movw	r0, #:lower16:.LC0
 1078 0170 C0F20000 		movt	r0, #:upper16:.LC0
 1079 0174 40F21531 		movw	r1, #789
 1080 0178 FFF7FEFF 		bl	assert_failed
 1081              	.L60:
 790:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Seconds)));
 1082              		.loc 1 790 0 is_stmt 1
 1083 017c 3B68     		ldr	r3, [r7]
 1084 017e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1085 0180 1846     		mov	r0, r3
 1086 0182 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1087 0186 0346     		mov	r3, r0
 1088 0188 3B2B     		cmp	r3, #59
 1089 018a 07D9     		bls	.L55
 1090              		.loc 1 790 0 is_stmt 0 discriminator 1
 1091 018c 40F20000 		movw	r0, #:lower16:.LC0
 1092 0190 C0F20000 		movt	r0, #:upper16:.LC0
 1093 0194 40F21631 		movw	r1, #790
 1094 0198 FFF7FEFF 		bl	assert_failed
 1095              	.L55:
 791:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 792:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 793:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the input parameters format */
 794:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format != RTC_Format_BIN)
 1096              		.loc 1 794 0 is_stmt 1
 1097 019c 7B68     		ldr	r3, [r7, #4]
 1098 019e 002B     		cmp	r3, #0
 1099 01a0 0FD0     		beq	.L61
 795:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 796:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (((uint32_t)(RTC_TimeStruct->RTC_Hours) << 16) | \
 1100              		.loc 1 796 0
 1101 01a2 3B68     		ldr	r3, [r7]
 1102 01a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1103 01a6 1A04     		lsls	r2, r3, #16
 797:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_Minutes) << 8) | \
 1104              		.loc 1 797 0
 1105 01a8 3B68     		ldr	r3, [r7]
 1106 01aa 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1107 01ac 1B02     		lsls	r3, r3, #8
 796:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_Minutes) << 8) | \
 1108              		.loc 1 796 0
 1109 01ae 1A43     		orrs	r2, r2, r3
 798:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****              ((uint32_t)RTC_TimeStruct->RTC_Seconds) | \
 1110              		.loc 1 798 0
 1111 01b0 3B68     		ldr	r3, [r7]
 1112 01b2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 797:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_Minutes) << 8) | \
 1113              		.loc 1 797 0
 1114 01b4 1A43     		orrs	r2, r2, r3
 799:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_H12) << 16)); 
 1115              		.loc 1 799 0
 1116 01b6 3B68     		ldr	r3, [r7]
 1117 01b8 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1118 01ba 1B04     		lsls	r3, r3, #16
 796:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_Minutes) << 8) | \
 1119              		.loc 1 796 0
 1120 01bc 1343     		orrs	r3, r3, r2
 1121 01be FB60     		str	r3, [r7, #12]
 1122 01c0 1BE0     		b	.L62
 1123              	.L61:
 800:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
 801:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 802:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 803:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Hours) << 16) | \
 1124              		.loc 1 803 0
 1125 01c2 3B68     		ldr	r3, [r7]
 1126 01c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1127 01c6 1846     		mov	r0, r3
 1128 01c8 FFF7FEFF 		bl	RTC_ByteToBcd2
 1129 01cc 0346     		mov	r3, r0
 1130 01ce 1C04     		lsls	r4, r3, #16
 804:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Minutes) << 8) | \
 1131              		.loc 1 804 0
 1132 01d0 3B68     		ldr	r3, [r7]
 1133 01d2 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1134 01d4 1846     		mov	r0, r3
 1135 01d6 FFF7FEFF 		bl	RTC_ByteToBcd2
 1136 01da 0346     		mov	r3, r0
 1137 01dc 1B02     		lsls	r3, r3, #8
 803:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Minutes) << 8) | \
 1138              		.loc 1 803 0
 1139 01de 1C43     		orrs	r4, r4, r3
 805:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Seconds)) | \
 1140              		.loc 1 805 0
 1141 01e0 3B68     		ldr	r3, [r7]
 1142 01e2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1143 01e4 1846     		mov	r0, r3
 1144 01e6 FFF7FEFF 		bl	RTC_ByteToBcd2
 1145 01ea 0346     		mov	r3, r0
 804:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Minutes) << 8) | \
 1146              		.loc 1 804 0
 1147 01ec 44EA0302 		orr	r2, r4, r3
 806:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    (((uint32_t)RTC_TimeStruct->RTC_H12) << 16));
 1148              		.loc 1 806 0
 1149 01f0 3B68     		ldr	r3, [r7]
 1150 01f2 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1151 01f4 1B04     		lsls	r3, r3, #16
 803:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Minutes) << 8) | \
 1152              		.loc 1 803 0
 1153 01f6 1343     		orrs	r3, r3, r2
 1154 01f8 FB60     		str	r3, [r7, #12]
 1155              	.L62:
 807:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
 808:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 809:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 810:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 1156              		.loc 1 810 0
 1157 01fa 4FF42053 		mov	r3, #10240
 1158 01fe C4F20003 		movt	r3, 16384
 1159 0202 CA22     		movs	r2, #202
 1160 0204 5A62     		str	r2, [r3, #36]
 811:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 1161              		.loc 1 811 0
 1162 0206 4FF42053 		mov	r3, #10240
 1163 020a C4F20003 		movt	r3, 16384
 1164 020e 5322     		movs	r2, #83
 1165 0210 5A62     		str	r2, [r3, #36]
 812:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 813:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Set Initialization mode */
 814:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 1166              		.loc 1 814 0
 1167 0212 FFF7FEFF 		bl	RTC_EnterInitMode
 1168 0216 0346     		mov	r3, r0
 1169 0218 002B     		cmp	r3, #0
 1170 021a 02D1     		bne	.L63
 815:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 816:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
 1171              		.loc 1 816 0
 1172 021c 0023     		movs	r3, #0
 1173 021e FB72     		strb	r3, [r7, #11]
 1174 0220 15E0     		b	.L64
 1175              	.L63:
 817:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
 818:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 819:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 820:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Set the RTC_TR register */
 821:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
 1176              		.loc 1 821 0
 1177 0222 4FF42053 		mov	r3, #10240
 1178 0226 C4F20003 		movt	r3, 16384
 1179 022a FA68     		ldr	r2, [r7, #12]
 1180 022c 02F07F32 		and	r2, r2, #2139062143
 1181 0230 22F0FE42 		bic	r2, r2, #2130706432
 1182 0234 1A60     		str	r2, [r3]
 822:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 823:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
 824:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_ExitInitMode(); 
 1183              		.loc 1 824 0
 1184 0236 FFF7FEFF 		bl	RTC_ExitInitMode
 825:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 826:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if(RTC_WaitForSynchro() == ERROR)
 1185              		.loc 1 826 0
 1186 023a FFF7FEFF 		bl	RTC_WaitForSynchro
 1187 023e 0346     		mov	r3, r0
 1188 0240 002B     		cmp	r3, #0
 1189 0242 02D1     		bne	.L65
 827:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 828:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = ERROR;
 1190              		.loc 1 828 0
 1191 0244 0023     		movs	r3, #0
 1192 0246 FB72     		strb	r3, [r7, #11]
 1193 0248 01E0     		b	.L64
 1194              	.L65:
 829:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 830:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
 831:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 832:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = SUCCESS;
 1195              		.loc 1 832 0
 1196 024a 0123     		movs	r3, #1
 1197 024c FB72     		strb	r3, [r7, #11]
 1198              	.L64:
 833:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 834:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 835:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 836:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 837:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 1199              		.loc 1 837 0
 1200 024e 4FF42053 		mov	r3, #10240
 1201 0252 C4F20003 		movt	r3, 16384
 1202 0256 FF22     		movs	r2, #255
 1203 0258 5A62     		str	r2, [r3, #36]
 838:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 839:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status;
 1204              		.loc 1 839 0
 1205 025a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 840:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 1206              		.loc 1 840 0
 1207 025c 1846     		mov	r0, r3
 1208 025e 1437     		adds	r7, r7, #20
 1209 0260 BD46     		mov	sp, r7
 1210              		@ sp needed
 1211 0262 90BD     		pop	{r4, r7, pc}
 1212              		.cfi_endproc
 1213              	.LFE119:
 1215              		.section	.text.RTC_TimeStructInit,"ax",%progbits
 1216              		.align	2
 1217              		.global	RTC_TimeStructInit
 1218              		.thumb
 1219              		.thumb_func
 1221              	RTC_TimeStructInit:
 1222              	.LFB120:
 841:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 842:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 843:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Fills each RTC_TimeStruct member with its default value
 844:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         (Time = 00h:00min:00sec).
 845:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TimeStruct: pointer to a RTC_TimeTypeDef structure which will be 
 846:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         initialized.
 847:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
 848:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 849:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TimeStructInit(RTC_TimeTypeDef* RTC_TimeStruct)
 850:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 1223              		.loc 1 850 0
 1224              		.cfi_startproc
 1225              		@ args = 0, pretend = 0, frame = 8
 1226              		@ frame_needed = 1, uses_anonymous_args = 0
 1227              		@ link register save eliminated.
 1228 0000 80B4     		push	{r7}
 1229              	.LCFI29:
 1230              		.cfi_def_cfa_offset 4
 1231              		.cfi_offset 7, -4
 1232 0002 83B0     		sub	sp, sp, #12
 1233              	.LCFI30:
 1234              		.cfi_def_cfa_offset 16
 1235 0004 00AF     		add	r7, sp, #0
 1236              	.LCFI31:
 1237              		.cfi_def_cfa_register 7
 1238 0006 7860     		str	r0, [r7, #4]
 851:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Time = 00h:00min:00sec */
 852:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_H12 = RTC_H12_AM;
 1239              		.loc 1 852 0
 1240 0008 7B68     		ldr	r3, [r7, #4]
 1241 000a 0022     		movs	r2, #0
 1242 000c DA70     		strb	r2, [r3, #3]
 853:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Hours = 0;
 1243              		.loc 1 853 0
 1244 000e 7B68     		ldr	r3, [r7, #4]
 1245 0010 0022     		movs	r2, #0
 1246 0012 1A70     		strb	r2, [r3]
 854:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Minutes = 0;
 1247              		.loc 1 854 0
 1248 0014 7B68     		ldr	r3, [r7, #4]
 1249 0016 0022     		movs	r2, #0
 1250 0018 5A70     		strb	r2, [r3, #1]
 855:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Seconds = 0; 
 1251              		.loc 1 855 0
 1252 001a 7B68     		ldr	r3, [r7, #4]
 1253 001c 0022     		movs	r2, #0
 1254 001e 9A70     		strb	r2, [r3, #2]
 856:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 1255              		.loc 1 856 0
 1256 0020 0C37     		adds	r7, r7, #12
 1257 0022 BD46     		mov	sp, r7
 1258              		@ sp needed
 1259 0024 5DF8047B 		ldr	r7, [sp], #4
 1260 0028 7047     		bx	lr
 1261              		.cfi_endproc
 1262              	.LFE120:
 1264 002a 00BF     		.section	.text.RTC_GetTime,"ax",%progbits
 1265              		.align	2
 1266              		.global	RTC_GetTime
 1267              		.thumb
 1268              		.thumb_func
 1270              	RTC_GetTime:
 1271              	.LFB121:
 857:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 858:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 859:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Get the RTC current Time.
 860:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the returned parameters.
 861:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be  one of the following values:
 862:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN:  Binary data format 
 863:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD:  BCD data format
 864:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TimeStruct: pointer to a RTC_TimeTypeDef structure that will 
 865:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                        contain the returned current time configuration.     
 866:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
 867:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 868:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_GetTime(uint32_t RTC_Format, RTC_TimeTypeDef* RTC_TimeStruct)
 869:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 1272              		.loc 1 869 0
 1273              		.cfi_startproc
 1274              		@ args = 0, pretend = 0, frame = 16
 1275              		@ frame_needed = 1, uses_anonymous_args = 0
 1276 0000 80B5     		push	{r7, lr}
 1277              	.LCFI32:
 1278              		.cfi_def_cfa_offset 8
 1279              		.cfi_offset 7, -8
 1280              		.cfi_offset 14, -4
 1281 0002 84B0     		sub	sp, sp, #16
 1282              	.LCFI33:
 1283              		.cfi_def_cfa_offset 24
 1284 0004 00AF     		add	r7, sp, #0
 1285              	.LCFI34:
 1286              		.cfi_def_cfa_register 7
 1287 0006 7860     		str	r0, [r7, #4]
 1288 0008 3960     		str	r1, [r7]
 870:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1289              		.loc 1 870 0
 1290 000a 0023     		movs	r3, #0
 1291 000c FB60     		str	r3, [r7, #12]
 871:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 872:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 873:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
 1292              		.loc 1 873 0
 1293 000e 7B68     		ldr	r3, [r7, #4]
 1294 0010 002B     		cmp	r3, #0
 1295 0012 0AD0     		beq	.L69
 1296              		.loc 1 873 0 is_stmt 0 discriminator 1
 1297 0014 7B68     		ldr	r3, [r7, #4]
 1298 0016 012B     		cmp	r3, #1
 1299 0018 07D0     		beq	.L69
 1300 001a 40F20000 		movw	r0, #:lower16:.LC0
 1301 001e C0F20000 		movt	r0, #:upper16:.LC0
 1302 0022 40F26931 		movw	r1, #873
 1303 0026 FFF7FEFF 		bl	assert_failed
 1304              	.L69:
 874:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 875:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the RTC_TR register */
 876:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC->TR & RTC_TR_RESERVED_MASK); 
 1305              		.loc 1 876 0 is_stmt 1
 1306 002a 4FF42053 		mov	r3, #10240
 1307 002e C4F20003 		movt	r3, 16384
 1308 0032 1B68     		ldr	r3, [r3]
 1309 0034 03F07F33 		and	r3, r3, #2139062143
 1310 0038 23F0FE43 		bic	r3, r3, #2130706432
 1311 003c FB60     		str	r3, [r7, #12]
 877:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 878:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Fill the structure fields with the read parameters */
 879:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Hours = (uint8_t)((tmpreg & (RTC_TR_HT | RTC_TR_HU)) >> 16);
 1312              		.loc 1 879 0
 1313 003e FB68     		ldr	r3, [r7, #12]
 1314 0040 03F47C13 		and	r3, r3, #4128768
 1315 0044 1B0C     		lsrs	r3, r3, #16
 1316 0046 DAB2     		uxtb	r2, r3
 1317 0048 3B68     		ldr	r3, [r7]
 1318 004a 1A70     		strb	r2, [r3]
 880:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8);
 1319              		.loc 1 880 0
 1320 004c FB68     		ldr	r3, [r7, #12]
 1321 004e 03F4FE43 		and	r3, r3, #32512
 1322 0052 1B0A     		lsrs	r3, r3, #8
 1323 0054 DAB2     		uxtb	r2, r3
 1324 0056 3B68     		ldr	r3, [r7]
 1325 0058 5A70     		strb	r2, [r3, #1]
 881:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 1326              		.loc 1 881 0
 1327 005a FB68     		ldr	r3, [r7, #12]
 1328 005c DBB2     		uxtb	r3, r3
 1329 005e 03F07F03 		and	r3, r3, #127
 1330 0062 DAB2     		uxtb	r2, r3
 1331 0064 3B68     		ldr	r3, [r7]
 1332 0066 9A70     		strb	r2, [r3, #2]
 882:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_H12 = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16);  
 1333              		.loc 1 882 0
 1334 0068 FB68     		ldr	r3, [r7, #12]
 1335 006a 03F48003 		and	r3, r3, #4194304
 1336 006e 1B0C     		lsrs	r3, r3, #16
 1337 0070 DAB2     		uxtb	r2, r3
 1338 0072 3B68     		ldr	r3, [r7]
 1339 0074 DA70     		strb	r2, [r3, #3]
 883:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 884:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the input parameters format */
 885:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 1340              		.loc 1 885 0
 1341 0076 7B68     		ldr	r3, [r7, #4]
 1342 0078 002B     		cmp	r3, #0
 1343 007a 1AD1     		bne	.L68
 886:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 887:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Convert the structure parameters to Binary format */
 888:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_TimeStruct->RTC_Hours = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Hours);
 1344              		.loc 1 888 0
 1345 007c 3B68     		ldr	r3, [r7]
 1346 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1347 0080 1846     		mov	r0, r3
 1348 0082 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1349 0086 0346     		mov	r3, r0
 1350 0088 1A46     		mov	r2, r3
 1351 008a 3B68     		ldr	r3, [r7]
 1352 008c 1A70     		strb	r2, [r3]
 889:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_TimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Minutes);
 1353              		.loc 1 889 0
 1354 008e 3B68     		ldr	r3, [r7]
 1355 0090 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1356 0092 1846     		mov	r0, r3
 1357 0094 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1358 0098 0346     		mov	r3, r0
 1359 009a 1A46     		mov	r2, r3
 1360 009c 3B68     		ldr	r3, [r7]
 1361 009e 5A70     		strb	r2, [r3, #1]
 890:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_TimeStruct->RTC_Seconds = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Seconds);   
 1362              		.loc 1 890 0
 1363 00a0 3B68     		ldr	r3, [r7]
 1364 00a2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1365 00a4 1846     		mov	r0, r3
 1366 00a6 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1367 00aa 0346     		mov	r3, r0
 1368 00ac 1A46     		mov	r2, r3
 1369 00ae 3B68     		ldr	r3, [r7]
 1370 00b0 9A70     		strb	r2, [r3, #2]
 1371              	.L68:
 891:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 892:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 1372              		.loc 1 892 0
 1373 00b2 1037     		adds	r7, r7, #16
 1374 00b4 BD46     		mov	sp, r7
 1375              		@ sp needed
 1376 00b6 80BD     		pop	{r7, pc}
 1377              		.cfi_endproc
 1378              	.LFE121:
 1380              		.section	.text.RTC_GetSubSecond,"ax",%progbits
 1381              		.align	2
 1382              		.global	RTC_GetSubSecond
 1383              		.thumb
 1384              		.thumb_func
 1386              	RTC_GetSubSecond:
 1387              	.LFB122:
 893:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 894:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 895:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Gets the RTC current Calendar Subseconds value.
 896:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   This function freeze the Time and Date registers after reading the 
 897:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         SSR register.
 898:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
 899:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval RTC current Calendar Subseconds value.
 900:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 901:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** uint32_t RTC_GetSubSecond(void)
 902:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 1388              		.loc 1 902 0
 1389              		.cfi_startproc
 1390              		@ args = 0, pretend = 0, frame = 8
 1391              		@ frame_needed = 1, uses_anonymous_args = 0
 1392              		@ link register save eliminated.
 1393 0000 80B4     		push	{r7}
 1394              	.LCFI35:
 1395              		.cfi_def_cfa_offset 4
 1396              		.cfi_offset 7, -4
 1397 0002 83B0     		sub	sp, sp, #12
 1398              	.LCFI36:
 1399              		.cfi_def_cfa_offset 16
 1400 0004 00AF     		add	r7, sp, #0
 1401              	.LCFI37:
 1402              		.cfi_def_cfa_register 7
 903:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1403              		.loc 1 903 0
 1404 0006 0023     		movs	r3, #0
 1405 0008 7B60     		str	r3, [r7, #4]
 904:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 905:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get subseconds values from the correspondent registers*/
 906:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC->SSR);
 1406              		.loc 1 906 0
 1407 000a 4FF42053 		mov	r3, #10240
 1408 000e C4F20003 		movt	r3, 16384
 1409 0012 9B6A     		ldr	r3, [r3, #40]
 1410 0014 7B60     		str	r3, [r7, #4]
 907:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 908:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Read DR register to unfroze calendar registers */
 909:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   (void) (RTC->DR);
 1411              		.loc 1 909 0
 1412 0016 4FF42053 		mov	r3, #10240
 1413 001a C4F20003 		movt	r3, 16384
 1414 001e 5B68     		ldr	r3, [r3, #4]
 910:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 911:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (tmpreg);
 1415              		.loc 1 911 0
 1416 0020 7B68     		ldr	r3, [r7, #4]
 912:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 1417              		.loc 1 912 0
 1418 0022 1846     		mov	r0, r3
 1419 0024 0C37     		adds	r7, r7, #12
 1420 0026 BD46     		mov	sp, r7
 1421              		@ sp needed
 1422 0028 5DF8047B 		ldr	r7, [sp], #4
 1423 002c 7047     		bx	lr
 1424              		.cfi_endproc
 1425              	.LFE122:
 1427 002e 00BF     		.section	.text.RTC_SetDate,"ax",%progbits
 1428              		.align	2
 1429              		.global	RTC_SetDate
 1430              		.thumb
 1431              		.thumb_func
 1433              	RTC_SetDate:
 1434              	.LFB123:
 913:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 914:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 915:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Set the RTC current date.
 916:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the entered parameters.
 917:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be  one of the following values:
 918:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN:  Binary data format 
 919:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD:  BCD data format
 920:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_DateStruct: pointer to a RTC_DateTypeDef structure that contains 
 921:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                         the date configuration information for the RTC.
 922:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 923:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Date register is configured
 924:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC Date register is not configured
 925:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 926:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_SetDate(uint32_t RTC_Format, RTC_DateTypeDef* RTC_DateStruct)
 927:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 1435              		.loc 1 927 0
 1436              		.cfi_startproc
 1437              		@ args = 0, pretend = 0, frame = 16
 1438              		@ frame_needed = 1, uses_anonymous_args = 0
 1439 0000 90B5     		push	{r4, r7, lr}
 1440              	.LCFI38:
 1441              		.cfi_def_cfa_offset 12
 1442              		.cfi_offset 4, -12
 1443              		.cfi_offset 7, -8
 1444              		.cfi_offset 14, -4
 1445 0002 85B0     		sub	sp, sp, #20
 1446              	.LCFI39:
 1447              		.cfi_def_cfa_offset 32
 1448 0004 00AF     		add	r7, sp, #0
 1449              	.LCFI40:
 1450              		.cfi_def_cfa_register 7
 1451 0006 7860     		str	r0, [r7, #4]
 1452 0008 3960     		str	r1, [r7]
 928:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1453              		.loc 1 928 0
 1454 000a 0023     		movs	r3, #0
 1455 000c FB60     		str	r3, [r7, #12]
 929:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 1456              		.loc 1 929 0
 1457 000e 0023     		movs	r3, #0
 1458 0010 FB72     		strb	r3, [r7, #11]
 930:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 931:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 932:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
 1459              		.loc 1 932 0
 1460 0012 7B68     		ldr	r3, [r7, #4]
 1461 0014 002B     		cmp	r3, #0
 1462 0016 0AD0     		beq	.L74
 1463              		.loc 1 932 0 is_stmt 0 discriminator 1
 1464 0018 7B68     		ldr	r3, [r7, #4]
 1465 001a 012B     		cmp	r3, #1
 1466 001c 07D0     		beq	.L74
 1467 001e 40F20000 		movw	r0, #:lower16:.LC0
 1468 0022 C0F20000 		movt	r0, #:upper16:.LC0
 1469 0026 4FF46971 		mov	r1, #932
 1470 002a FFF7FEFF 		bl	assert_failed
 1471              	.L74:
 933:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 934:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((RTC_Format == RTC_Format_BIN) && ((RTC_DateStruct->RTC_Month & 0x10) == 0x10))
 1472              		.loc 1 934 0 is_stmt 1
 1473 002e 7B68     		ldr	r3, [r7, #4]
 1474 0030 002B     		cmp	r3, #0
 1475 0032 0ED1     		bne	.L75
 1476              		.loc 1 934 0 is_stmt 0 discriminator 1
 1477 0034 3B68     		ldr	r3, [r7]
 1478 0036 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1479 0038 03F01003 		and	r3, r3, #16
 1480 003c 002B     		cmp	r3, #0
 1481 003e 08D0     		beq	.L75
 935:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 936:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Month = (RTC_DateStruct->RTC_Month & (uint32_t)~(0x10)) + 0x0A;
 1482              		.loc 1 936 0 is_stmt 1
 1483 0040 3B68     		ldr	r3, [r7]
 1484 0042 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1485 0044 23F01003 		bic	r3, r3, #16
 1486 0048 DBB2     		uxtb	r3, r3
 1487 004a 0A33     		adds	r3, r3, #10
 1488 004c DAB2     		uxtb	r2, r3
 1489 004e 3B68     		ldr	r3, [r7]
 1490 0050 5A70     		strb	r2, [r3, #1]
 1491              	.L75:
 937:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
 938:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 1492              		.loc 1 938 0
 1493 0052 7B68     		ldr	r3, [r7, #4]
 1494 0054 002B     		cmp	r3, #0
 1495 0056 2CD1     		bne	.L76
 939:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 940:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_DateStruct->RTC_Year));
 1496              		.loc 1 940 0
 1497 0058 3B68     		ldr	r3, [r7]
 1498 005a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1499 005c 632B     		cmp	r3, #99
 1500 005e 07D9     		bls	.L77
 1501              		.loc 1 940 0 is_stmt 0 discriminator 1
 1502 0060 40F20000 		movw	r0, #:lower16:.LC0
 1503 0064 C0F20000 		movt	r0, #:upper16:.LC0
 1504 0068 4FF46B71 		mov	r1, #940
 1505 006c FFF7FEFF 		bl	assert_failed
 1506              	.L77:
 941:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_MONTH(RTC_DateStruct->RTC_Month));
 1507              		.loc 1 941 0 is_stmt 1
 1508 0070 3B68     		ldr	r3, [r7]
 1509 0072 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1510 0074 002B     		cmp	r3, #0
 1511 0076 03D0     		beq	.L78
 1512              		.loc 1 941 0 is_stmt 0 discriminator 2
 1513 0078 3B68     		ldr	r3, [r7]
 1514 007a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1515 007c 0C2B     		cmp	r3, #12
 1516 007e 07D9     		bls	.L79
 1517              	.L78:
 1518              		.loc 1 941 0 discriminator 1
 1519 0080 40F20000 		movw	r0, #:lower16:.LC0
 1520 0084 C0F20000 		movt	r0, #:upper16:.LC0
 1521 0088 40F2AD31 		movw	r1, #941
 1522 008c FFF7FEFF 		bl	assert_failed
 1523              	.L79:
 942:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_DATE(RTC_DateStruct->RTC_Date));
 1524              		.loc 1 942 0 is_stmt 1
 1525 0090 3B68     		ldr	r3, [r7]
 1526 0092 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1527 0094 002B     		cmp	r3, #0
 1528 0096 03D0     		beq	.L80
 1529              		.loc 1 942 0 is_stmt 0 discriminator 2
 1530 0098 3B68     		ldr	r3, [r7]
 1531 009a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1532 009c 1F2B     		cmp	r3, #31
 1533 009e 42D9     		bls	.L82
 1534              	.L80:
 1535              		.loc 1 942 0 discriminator 1
 1536 00a0 40F20000 		movw	r0, #:lower16:.LC0
 1537 00a4 C0F20000 		movt	r0, #:upper16:.LC0
 1538 00a8 40F2AE31 		movw	r1, #942
 1539 00ac FFF7FEFF 		bl	assert_failed
 1540 00b0 39E0     		b	.L82
 1541              	.L76:
 943:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 944:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 945:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 946:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_Bcd2ToByte(RTC_DateStruct->RTC_Year)));
 1542              		.loc 1 946 0 is_stmt 1
 1543 00b2 3B68     		ldr	r3, [r7]
 1544 00b4 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1545 00b6 1846     		mov	r0, r3
 1546 00b8 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1547 00bc 0346     		mov	r3, r0
 1548 00be 632B     		cmp	r3, #99
 1549 00c0 07D9     		bls	.L83
 1550              		.loc 1 946 0 is_stmt 0 discriminator 1
 1551 00c2 40F20000 		movw	r0, #:lower16:.LC0
 1552 00c6 C0F20000 		movt	r0, #:upper16:.LC0
 1553 00ca 40F2B231 		movw	r1, #946
 1554 00ce FFF7FEFF 		bl	assert_failed
 1555              	.L83:
 947:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = RTC_Bcd2ToByte(RTC_DateStruct->RTC_Month);
 1556              		.loc 1 947 0 is_stmt 1
 1557 00d2 3B68     		ldr	r3, [r7]
 1558 00d4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1559 00d6 1846     		mov	r0, r3
 1560 00d8 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1561 00dc 0346     		mov	r3, r0
 1562 00de FB60     		str	r3, [r7, #12]
 948:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_MONTH(tmpreg));
 1563              		.loc 1 948 0
 1564 00e0 FB68     		ldr	r3, [r7, #12]
 1565 00e2 002B     		cmp	r3, #0
 1566 00e4 02D0     		beq	.L84
 1567              		.loc 1 948 0 is_stmt 0 discriminator 2
 1568 00e6 FB68     		ldr	r3, [r7, #12]
 1569 00e8 0C2B     		cmp	r3, #12
 1570 00ea 07D9     		bls	.L85
 1571              	.L84:
 1572              		.loc 1 948 0 discriminator 1
 1573 00ec 40F20000 		movw	r0, #:lower16:.LC0
 1574 00f0 C0F20000 		movt	r0, #:upper16:.LC0
 1575 00f4 4FF46D71 		mov	r1, #948
 1576 00f8 FFF7FEFF 		bl	assert_failed
 1577              	.L85:
 949:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = RTC_Bcd2ToByte(RTC_DateStruct->RTC_Date);
 1578              		.loc 1 949 0 is_stmt 1
 1579 00fc 3B68     		ldr	r3, [r7]
 1580 00fe 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1581 0100 1846     		mov	r0, r3
 1582 0102 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1583 0106 0346     		mov	r3, r0
 1584 0108 FB60     		str	r3, [r7, #12]
 950:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_DATE(tmpreg));
 1585              		.loc 1 950 0
 1586 010a FB68     		ldr	r3, [r7, #12]
 1587 010c 002B     		cmp	r3, #0
 1588 010e 02D0     		beq	.L86
 1589              		.loc 1 950 0 is_stmt 0 discriminator 2
 1590 0110 FB68     		ldr	r3, [r7, #12]
 1591 0112 1F2B     		cmp	r3, #31
 1592 0114 07D9     		bls	.L82
 1593              	.L86:
 1594              		.loc 1 950 0 discriminator 1
 1595 0116 40F20000 		movw	r0, #:lower16:.LC0
 1596 011a C0F20000 		movt	r0, #:upper16:.LC0
 1597 011e 40F2B631 		movw	r1, #950
 1598 0122 FFF7FEFF 		bl	assert_failed
 1599              	.L82:
 951:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 952:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_WEEKDAY(RTC_DateStruct->RTC_WeekDay));
 1600              		.loc 1 952 0 is_stmt 1
 1601 0126 3B68     		ldr	r3, [r7]
 1602 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1603 012a 012B     		cmp	r3, #1
 1604 012c 1FD0     		beq	.L87
 1605              		.loc 1 952 0 is_stmt 0 discriminator 1
 1606 012e 3B68     		ldr	r3, [r7]
 1607 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1608 0132 022B     		cmp	r3, #2
 1609 0134 1BD0     		beq	.L87
 1610 0136 3B68     		ldr	r3, [r7]
 1611 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1612 013a 032B     		cmp	r3, #3
 1613 013c 17D0     		beq	.L87
 1614 013e 3B68     		ldr	r3, [r7]
 1615 0140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1616 0142 042B     		cmp	r3, #4
 1617 0144 13D0     		beq	.L87
 1618 0146 3B68     		ldr	r3, [r7]
 1619 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1620 014a 052B     		cmp	r3, #5
 1621 014c 0FD0     		beq	.L87
 1622 014e 3B68     		ldr	r3, [r7]
 1623 0150 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1624 0152 062B     		cmp	r3, #6
 1625 0154 0BD0     		beq	.L87
 1626 0156 3B68     		ldr	r3, [r7]
 1627 0158 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1628 015a 072B     		cmp	r3, #7
 1629 015c 07D0     		beq	.L87
 1630 015e 40F20000 		movw	r0, #:lower16:.LC0
 1631 0162 C0F20000 		movt	r0, #:upper16:.LC0
 1632 0166 4FF46E71 		mov	r1, #952
 1633 016a FFF7FEFF 		bl	assert_failed
 1634              	.L87:
 953:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 954:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the input parameters format */
 955:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format != RTC_Format_BIN)
 1635              		.loc 1 955 0 is_stmt 1
 1636 016e 7B68     		ldr	r3, [r7, #4]
 1637 0170 002B     		cmp	r3, #0
 1638 0172 0FD0     		beq	.L88
 956:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 957:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = ((((uint32_t)RTC_DateStruct->RTC_Year) << 16) | \
 1639              		.loc 1 957 0
 1640 0174 3B68     		ldr	r3, [r7]
 1641 0176 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1642 0178 1A04     		lsls	r2, r3, #16
 958:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_Month) << 8) | \
 1643              		.loc 1 958 0
 1644 017a 3B68     		ldr	r3, [r7]
 1645 017c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1646 017e 1B02     		lsls	r3, r3, #8
 957:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_Month) << 8) | \
 1647              		.loc 1 957 0
 1648 0180 1A43     		orrs	r2, r2, r3
 959:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_DateStruct->RTC_Date) | \
 1649              		.loc 1 959 0
 1650 0182 3B68     		ldr	r3, [r7]
 1651 0184 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 958:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_Month) << 8) | \
 1652              		.loc 1 958 0
 1653 0186 1A43     		orrs	r2, r2, r3
 960:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_WeekDay) << 13)); 
 1654              		.loc 1 960 0
 1655 0188 3B68     		ldr	r3, [r7]
 1656 018a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1657 018c 5B03     		lsls	r3, r3, #13
 957:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_Month) << 8) | \
 1658              		.loc 1 957 0
 1659 018e 1343     		orrs	r3, r3, r2
 1660 0190 FB60     		str	r3, [r7, #12]
 1661 0192 1BE0     		b	.L89
 1662              	.L88:
 961:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
 962:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 963:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 964:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Year) << 16) | \
 1663              		.loc 1 964 0
 1664 0194 3B68     		ldr	r3, [r7]
 1665 0196 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1666 0198 1846     		mov	r0, r3
 1667 019a FFF7FEFF 		bl	RTC_ByteToBcd2
 1668 019e 0346     		mov	r3, r0
 1669 01a0 1C04     		lsls	r4, r3, #16
 965:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Month) << 8) | \
 1670              		.loc 1 965 0
 1671 01a2 3B68     		ldr	r3, [r7]
 1672 01a4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1673 01a6 1846     		mov	r0, r3
 1674 01a8 FFF7FEFF 		bl	RTC_ByteToBcd2
 1675 01ac 0346     		mov	r3, r0
 1676 01ae 1B02     		lsls	r3, r3, #8
 964:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Month) << 8) | \
 1677              		.loc 1 964 0
 1678 01b0 1C43     		orrs	r4, r4, r3
 966:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Date)) | \
 1679              		.loc 1 966 0
 1680 01b2 3B68     		ldr	r3, [r7]
 1681 01b4 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1682 01b6 1846     		mov	r0, r3
 1683 01b8 FFF7FEFF 		bl	RTC_ByteToBcd2
 1684 01bc 0346     		mov	r3, r0
 965:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Month) << 8) | \
 1685              		.loc 1 965 0
 1686 01be 44EA0302 		orr	r2, r4, r3
 967:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_DateStruct->RTC_WeekDay << 13));
 1687              		.loc 1 967 0
 1688 01c2 3B68     		ldr	r3, [r7]
 1689 01c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1690 01c6 5B03     		lsls	r3, r3, #13
 964:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Month) << 8) | \
 1691              		.loc 1 964 0
 1692 01c8 1343     		orrs	r3, r3, r2
 1693 01ca FB60     		str	r3, [r7, #12]
 1694              	.L89:
 968:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 969:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 970:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 971:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 1695              		.loc 1 971 0
 1696 01cc 4FF42053 		mov	r3, #10240
 1697 01d0 C4F20003 		movt	r3, 16384
 1698 01d4 CA22     		movs	r2, #202
 1699 01d6 5A62     		str	r2, [r3, #36]
 972:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 1700              		.loc 1 972 0
 1701 01d8 4FF42053 		mov	r3, #10240
 1702 01dc C4F20003 		movt	r3, 16384
 1703 01e0 5322     		movs	r2, #83
 1704 01e2 5A62     		str	r2, [r3, #36]
 973:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 974:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Set Initialization mode */
 975:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 1705              		.loc 1 975 0
 1706 01e4 FFF7FEFF 		bl	RTC_EnterInitMode
 1707 01e8 0346     		mov	r3, r0
 1708 01ea 002B     		cmp	r3, #0
 1709 01ec 02D1     		bne	.L90
 976:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 977:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
 1710              		.loc 1 977 0
 1711 01ee 0023     		movs	r3, #0
 1712 01f0 FB72     		strb	r3, [r7, #11]
 1713 01f2 15E0     		b	.L91
 1714              	.L90:
 978:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
 979:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 980:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 981:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Set the RTC_DR register */
 982:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->DR = (uint32_t)(tmpreg & RTC_DR_RESERVED_MASK);
 1715              		.loc 1 982 0
 1716 01f4 4FF42053 		mov	r3, #10240
 1717 01f8 C4F20003 		movt	r3, 16384
 1718 01fc FA68     		ldr	r2, [r7, #12]
 1719 01fe 22F07F42 		bic	r2, r2, #-16777216
 1720 0202 22F0C002 		bic	r2, r2, #192
 1721 0206 5A60     		str	r2, [r3, #4]
 983:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 984:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
 985:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_ExitInitMode(); 
 1722              		.loc 1 985 0
 1723 0208 FFF7FEFF 		bl	RTC_ExitInitMode
 986:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 987:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if(RTC_WaitForSynchro() == ERROR)
 1724              		.loc 1 987 0
 1725 020c FFF7FEFF 		bl	RTC_WaitForSynchro
 1726 0210 0346     		mov	r3, r0
 1727 0212 002B     		cmp	r3, #0
 1728 0214 02D1     		bne	.L92
 988:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 989:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = ERROR;
 1729              		.loc 1 989 0
 1730 0216 0023     		movs	r3, #0
 1731 0218 FB72     		strb	r3, [r7, #11]
 1732 021a 01E0     		b	.L91
 1733              	.L92:
 990:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 991:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
 992:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 993:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = SUCCESS;
 1734              		.loc 1 993 0
 1735 021c 0123     		movs	r3, #1
 1736 021e FB72     		strb	r3, [r7, #11]
 1737              	.L91:
 994:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 995:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 996:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 997:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;   
 1738              		.loc 1 997 0
 1739 0220 4FF42053 		mov	r3, #10240
 1740 0224 C4F20003 		movt	r3, 16384
 1741 0228 FF22     		movs	r2, #255
 1742 022a 5A62     		str	r2, [r3, #36]
 998:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 999:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status;
 1743              		.loc 1 999 0
 1744 022c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
1000:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 1745              		.loc 1 1000 0
 1746 022e 1846     		mov	r0, r3
 1747 0230 1437     		adds	r7, r7, #20
 1748 0232 BD46     		mov	sp, r7
 1749              		@ sp needed
 1750 0234 90BD     		pop	{r4, r7, pc}
 1751              		.cfi_endproc
 1752              	.LFE123:
 1754 0236 00BF     		.section	.text.RTC_DateStructInit,"ax",%progbits
 1755              		.align	2
 1756              		.global	RTC_DateStructInit
 1757              		.thumb
 1758              		.thumb_func
 1760              	RTC_DateStructInit:
 1761              	.LFB124:
1001:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1002:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1003:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Fills each RTC_DateStruct member with its default value
1004:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         (Monday, January 01 xx00).
1005:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_DateStruct: pointer to a RTC_DateTypeDef structure which will be 
1006:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         initialized.
1007:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1008:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1009:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_DateStructInit(RTC_DateTypeDef* RTC_DateStruct)
1010:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 1762              		.loc 1 1010 0
 1763              		.cfi_startproc
 1764              		@ args = 0, pretend = 0, frame = 8
 1765              		@ frame_needed = 1, uses_anonymous_args = 0
 1766              		@ link register save eliminated.
 1767 0000 80B4     		push	{r7}
 1768              	.LCFI41:
 1769              		.cfi_def_cfa_offset 4
 1770              		.cfi_offset 7, -4
 1771 0002 83B0     		sub	sp, sp, #12
 1772              	.LCFI42:
 1773              		.cfi_def_cfa_offset 16
 1774 0004 00AF     		add	r7, sp, #0
 1775              	.LCFI43:
 1776              		.cfi_def_cfa_register 7
 1777 0006 7860     		str	r0, [r7, #4]
1011:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Monday, January 01 xx00 */
1012:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_WeekDay = RTC_Weekday_Monday;
 1778              		.loc 1 1012 0
 1779 0008 7B68     		ldr	r3, [r7, #4]
 1780 000a 0122     		movs	r2, #1
 1781 000c 1A70     		strb	r2, [r3]
1013:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Date = 1;
 1782              		.loc 1 1013 0
 1783 000e 7B68     		ldr	r3, [r7, #4]
 1784 0010 0122     		movs	r2, #1
 1785 0012 9A70     		strb	r2, [r3, #2]
1014:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Month = RTC_Month_January;
 1786              		.loc 1 1014 0
 1787 0014 7B68     		ldr	r3, [r7, #4]
 1788 0016 0122     		movs	r2, #1
 1789 0018 5A70     		strb	r2, [r3, #1]
1015:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Year = 0;
 1790              		.loc 1 1015 0
 1791 001a 7B68     		ldr	r3, [r7, #4]
 1792 001c 0022     		movs	r2, #0
 1793 001e DA70     		strb	r2, [r3, #3]
1016:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 1794              		.loc 1 1016 0
 1795 0020 0C37     		adds	r7, r7, #12
 1796 0022 BD46     		mov	sp, r7
 1797              		@ sp needed
 1798 0024 5DF8047B 		ldr	r7, [sp], #4
 1799 0028 7047     		bx	lr
 1800              		.cfi_endproc
 1801              	.LFE124:
 1803 002a 00BF     		.section	.text.RTC_GetDate,"ax",%progbits
 1804              		.align	2
 1805              		.global	RTC_GetDate
 1806              		.thumb
 1807              		.thumb_func
 1809              	RTC_GetDate:
 1810              	.LFB125:
1017:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1018:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1019:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Get the RTC current date. 
1020:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the returned parameters.
1021:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1022:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN: Binary data format 
1023:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD: BCD data format
1024:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param RTC_DateStruct: pointer to a RTC_DateTypeDef structure that will 
1025:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                        contain the returned current date configuration.     
1026:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1027:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1028:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_GetDate(uint32_t RTC_Format, RTC_DateTypeDef* RTC_DateStruct)
1029:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 1811              		.loc 1 1029 0
 1812              		.cfi_startproc
 1813              		@ args = 0, pretend = 0, frame = 16
 1814              		@ frame_needed = 1, uses_anonymous_args = 0
 1815 0000 80B5     		push	{r7, lr}
 1816              	.LCFI44:
 1817              		.cfi_def_cfa_offset 8
 1818              		.cfi_offset 7, -8
 1819              		.cfi_offset 14, -4
 1820 0002 84B0     		sub	sp, sp, #16
 1821              	.LCFI45:
 1822              		.cfi_def_cfa_offset 24
 1823 0004 00AF     		add	r7, sp, #0
 1824              	.LCFI46:
 1825              		.cfi_def_cfa_register 7
 1826 0006 7860     		str	r0, [r7, #4]
 1827 0008 3960     		str	r1, [r7]
1030:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1828              		.loc 1 1030 0
 1829 000a 0023     		movs	r3, #0
 1830 000c FB60     		str	r3, [r7, #12]
1031:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1032:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1033:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
 1831              		.loc 1 1033 0
 1832 000e 7B68     		ldr	r3, [r7, #4]
 1833 0010 002B     		cmp	r3, #0
 1834 0012 0AD0     		beq	.L96
 1835              		.loc 1 1033 0 is_stmt 0 discriminator 1
 1836 0014 7B68     		ldr	r3, [r7, #4]
 1837 0016 012B     		cmp	r3, #1
 1838 0018 07D0     		beq	.L96
 1839 001a 40F20000 		movw	r0, #:lower16:.LC0
 1840 001e C0F20000 		movt	r0, #:upper16:.LC0
 1841 0022 40F20941 		movw	r1, #1033
 1842 0026 FFF7FEFF 		bl	assert_failed
 1843              	.L96:
1034:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1035:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the RTC_TR register */
1036:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC->DR & RTC_DR_RESERVED_MASK); 
 1844              		.loc 1 1036 0 is_stmt 1
 1845 002a 4FF42053 		mov	r3, #10240
 1846 002e C4F20003 		movt	r3, 16384
 1847 0032 5B68     		ldr	r3, [r3, #4]
 1848 0034 23F07F43 		bic	r3, r3, #-16777216
 1849 0038 23F0C003 		bic	r3, r3, #192
 1850 003c FB60     		str	r3, [r7, #12]
1037:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1038:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Fill the structure fields with the read parameters */
1039:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Year = (uint8_t)((tmpreg & (RTC_DR_YT | RTC_DR_YU)) >> 16);
 1851              		.loc 1 1039 0
 1852 003e FB68     		ldr	r3, [r7, #12]
 1853 0040 03F47F03 		and	r3, r3, #16711680
 1854 0044 1B0C     		lsrs	r3, r3, #16
 1855 0046 DAB2     		uxtb	r2, r3
 1856 0048 3B68     		ldr	r3, [r7]
 1857 004a DA70     		strb	r2, [r3, #3]
1040:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Month = (uint8_t)((tmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8);
 1858              		.loc 1 1040 0
 1859 004c FB68     		ldr	r3, [r7, #12]
 1860 004e 03F4F853 		and	r3, r3, #7936
 1861 0052 1B0A     		lsrs	r3, r3, #8
 1862 0054 DAB2     		uxtb	r2, r3
 1863 0056 3B68     		ldr	r3, [r7]
 1864 0058 5A70     		strb	r2, [r3, #1]
1041:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Date = (uint8_t)(tmpreg & (RTC_DR_DT | RTC_DR_DU));
 1865              		.loc 1 1041 0
 1866 005a FB68     		ldr	r3, [r7, #12]
 1867 005c DBB2     		uxtb	r3, r3
 1868 005e 03F03F03 		and	r3, r3, #63
 1869 0062 DAB2     		uxtb	r2, r3
 1870 0064 3B68     		ldr	r3, [r7]
 1871 0066 9A70     		strb	r2, [r3, #2]
1042:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_WeekDay = (uint8_t)((tmpreg & (RTC_DR_WDU)) >> 13);
 1872              		.loc 1 1042 0
 1873 0068 FB68     		ldr	r3, [r7, #12]
 1874 006a 03F46043 		and	r3, r3, #57344
 1875 006e 5B0B     		lsrs	r3, r3, #13
 1876 0070 DAB2     		uxtb	r2, r3
 1877 0072 3B68     		ldr	r3, [r7]
 1878 0074 1A70     		strb	r2, [r3]
1043:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1044:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the input parameters format */
1045:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 1879              		.loc 1 1045 0
 1880 0076 7B68     		ldr	r3, [r7, #4]
 1881 0078 002B     		cmp	r3, #0
 1882 007a 1AD1     		bne	.L95
1046:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1047:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Convert the structure parameters to Binary format */
1048:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Year = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Year);
 1883              		.loc 1 1048 0
 1884 007c 3B68     		ldr	r3, [r7]
 1885 007e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1886 0080 1846     		mov	r0, r3
 1887 0082 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1888 0086 0346     		mov	r3, r0
 1889 0088 1A46     		mov	r2, r3
 1890 008a 3B68     		ldr	r3, [r7]
 1891 008c DA70     		strb	r2, [r3, #3]
1049:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Month = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Month);
 1892              		.loc 1 1049 0
 1893 008e 3B68     		ldr	r3, [r7]
 1894 0090 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1895 0092 1846     		mov	r0, r3
 1896 0094 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1897 0098 0346     		mov	r3, r0
 1898 009a 1A46     		mov	r2, r3
 1899 009c 3B68     		ldr	r3, [r7]
 1900 009e 5A70     		strb	r2, [r3, #1]
1050:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Date = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Date);
 1901              		.loc 1 1050 0
 1902 00a0 3B68     		ldr	r3, [r7]
 1903 00a2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1904 00a4 1846     		mov	r0, r3
 1905 00a6 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1906 00aa 0346     		mov	r3, r0
 1907 00ac 1A46     		mov	r2, r3
 1908 00ae 3B68     		ldr	r3, [r7]
 1909 00b0 9A70     		strb	r2, [r3, #2]
 1910              	.L95:
1051:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1052:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 1911              		.loc 1 1052 0
 1912 00b2 1037     		adds	r7, r7, #16
 1913 00b4 BD46     		mov	sp, r7
 1914              		@ sp needed
 1915 00b6 80BD     		pop	{r7, pc}
 1916              		.cfi_endproc
 1917              	.LFE125:
 1919              		.section	.text.RTC_SetAlarm,"ax",%progbits
 1920              		.align	2
 1921              		.global	RTC_SetAlarm
 1922              		.thumb
 1923              		.thumb_func
 1925              	RTC_SetAlarm:
 1926              	.LFB126:
1053:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1054:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1055:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
1056:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1057:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1058:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group3 Alarms configuration functions
1059:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Alarms (Alarm A and Alarm B) configuration functions 
1060:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
1061:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
1062:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
1063:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               Alarms (Alarm A and Alarm B) configuration functions
1064:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
1065:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1066:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   This section provide functions allowing to program and read the RTC Alarms.
1067:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1068:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
1069:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
1070:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1071:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1072:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1073:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Set the specified RTC Alarm.
1074:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The Alarm register can only be written when the corresponding Alarm
1075:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         is disabled (Use the RTC_AlarmCmd(DISABLE)).    
1076:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the returned parameters.
1077:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1078:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN: Binary data format 
1079:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD: BCD data format
1080:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Alarm: specifies the alarm to be configured.
1081:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1082:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Alarm_A: to select Alarm A
1083:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Alarm_B: to select Alarm B  
1084:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_AlarmStruct: pointer to a RTC_AlarmTypeDef structure that 
1085:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                          contains the alarm configuration parameters.     
1086:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1087:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1088:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_SetAlarm(uint32_t RTC_Format, uint32_t RTC_Alarm, RTC_AlarmTypeDef* RTC_AlarmStruct)
1089:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 1927              		.loc 1 1089 0
 1928              		.cfi_startproc
 1929              		@ args = 0, pretend = 0, frame = 24
 1930              		@ frame_needed = 1, uses_anonymous_args = 0
 1931 0000 90B5     		push	{r4, r7, lr}
 1932              	.LCFI47:
 1933              		.cfi_def_cfa_offset 12
 1934              		.cfi_offset 4, -12
 1935              		.cfi_offset 7, -8
 1936              		.cfi_offset 14, -4
 1937 0002 87B0     		sub	sp, sp, #28
 1938              	.LCFI48:
 1939              		.cfi_def_cfa_offset 40
 1940 0004 00AF     		add	r7, sp, #0
 1941              	.LCFI49:
 1942              		.cfi_def_cfa_register 7
 1943 0006 F860     		str	r0, [r7, #12]
 1944 0008 B960     		str	r1, [r7, #8]
 1945 000a 7A60     		str	r2, [r7, #4]
1090:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1946              		.loc 1 1090 0
 1947 000c 0023     		movs	r3, #0
 1948 000e 7B61     		str	r3, [r7, #20]
1091:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1092:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1093:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
 1949              		.loc 1 1093 0
 1950 0010 FB68     		ldr	r3, [r7, #12]
 1951 0012 002B     		cmp	r3, #0
 1952 0014 0AD0     		beq	.L99
 1953              		.loc 1 1093 0 is_stmt 0 discriminator 1
 1954 0016 FB68     		ldr	r3, [r7, #12]
 1955 0018 012B     		cmp	r3, #1
 1956 001a 07D0     		beq	.L99
 1957 001c 40F20000 		movw	r0, #:lower16:.LC0
 1958 0020 C0F20000 		movt	r0, #:upper16:.LC0
 1959 0024 40F24541 		movw	r1, #1093
 1960 0028 FFF7FEFF 		bl	assert_failed
 1961              	.L99:
1094:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM(RTC_Alarm));
 1962              		.loc 1 1094 0 is_stmt 1
 1963 002c BB68     		ldr	r3, [r7, #8]
 1964 002e B3F5807F 		cmp	r3, #256
 1965 0032 0BD0     		beq	.L100
 1966              		.loc 1 1094 0 is_stmt 0 discriminator 1
 1967 0034 BB68     		ldr	r3, [r7, #8]
 1968 0036 B3F5007F 		cmp	r3, #512
 1969 003a 07D0     		beq	.L100
 1970 003c 40F20000 		movw	r0, #:lower16:.LC0
 1971 0040 C0F20000 		movt	r0, #:upper16:.LC0
 1972 0044 40F24641 		movw	r1, #1094
 1973 0048 FFF7FEFF 		bl	assert_failed
 1974              	.L100:
1095:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_ALARM_MASK(RTC_AlarmStruct->RTC_AlarmMask));
 1975              		.loc 1 1095 0 is_stmt 1
 1976 004c 7B68     		ldr	r3, [r7, #4]
 1977 004e 5B68     		ldr	r3, [r3, #4]
 1978 0050 03F07F33 		and	r3, r3, #2139062143
 1979 0054 002B     		cmp	r3, #0
 1980 0056 07D0     		beq	.L101
 1981              		.loc 1 1095 0 is_stmt 0 discriminator 1
 1982 0058 40F20000 		movw	r0, #:lower16:.LC0
 1983 005c C0F20000 		movt	r0, #:upper16:.LC0
 1984 0060 40F24741 		movw	r1, #1095
 1985 0064 FFF7FEFF 		bl	assert_failed
 1986              	.L101:
1096:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(RTC_AlarmStruct->RTC_AlarmDateWeekDaySel));
 1987              		.loc 1 1096 0 is_stmt 1
 1988 0068 7B68     		ldr	r3, [r7, #4]
 1989 006a 9B68     		ldr	r3, [r3, #8]
 1990 006c 002B     		cmp	r3, #0
 1991 006e 0CD0     		beq	.L102
 1992              		.loc 1 1096 0 is_stmt 0 discriminator 1
 1993 0070 7B68     		ldr	r3, [r7, #4]
 1994 0072 9B68     		ldr	r3, [r3, #8]
 1995 0074 B3F1804F 		cmp	r3, #1073741824
 1996 0078 07D0     		beq	.L102
 1997 007a 40F20000 		movw	r0, #:lower16:.LC0
 1998 007e C0F20000 		movt	r0, #:upper16:.LC0
 1999 0082 4FF48961 		mov	r1, #1096
 2000 0086 FFF7FEFF 		bl	assert_failed
 2001              	.L102:
1097:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1098:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 2002              		.loc 1 1098 0 is_stmt 1
 2003 008a FB68     		ldr	r3, [r7, #12]
 2004 008c 002B     		cmp	r3, #0
 2005 008e 40F09380 		bne	.L103
1099:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1100:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
 2006              		.loc 1 1100 0
 2007 0092 4FF42053 		mov	r3, #10240
 2008 0096 C4F20003 		movt	r3, 16384
 2009 009a 9B68     		ldr	r3, [r3, #8]
 2010 009c 03F04003 		and	r3, r3, #64
 2011 00a0 002B     		cmp	r3, #0
 2012 00a2 20D0     		beq	.L104
1101:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1102:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR12(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours));
 2013              		.loc 1 1102 0
 2014 00a4 7B68     		ldr	r3, [r7, #4]
 2015 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2016 00a8 002B     		cmp	r3, #0
 2017 00aa 03D0     		beq	.L105
 2018              		.loc 1 1102 0 is_stmt 0 discriminator 2
 2019 00ac 7B68     		ldr	r3, [r7, #4]
 2020 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2021 00b0 0C2B     		cmp	r3, #12
 2022 00b2 07D9     		bls	.L106
 2023              	.L105:
 2024              		.loc 1 1102 0 discriminator 1
 2025 00b4 40F20000 		movw	r0, #:lower16:.LC0
 2026 00b8 C0F20000 		movt	r0, #:upper16:.LC0
 2027 00bc 40F24E41 		movw	r1, #1102
 2028 00c0 FFF7FEFF 		bl	assert_failed
 2029              	.L106:
1103:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_H12(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12));
 2030              		.loc 1 1103 0 is_stmt 1
 2031 00c4 7B68     		ldr	r3, [r7, #4]
 2032 00c6 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 2033 00c8 002B     		cmp	r3, #0
 2034 00ca 1BD0     		beq	.L107
 2035              		.loc 1 1103 0 is_stmt 0 discriminator 1
 2036 00cc 7B68     		ldr	r3, [r7, #4]
 2037 00ce DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 2038 00d0 402B     		cmp	r3, #64
 2039 00d2 17D0     		beq	.L107
 2040 00d4 40F20000 		movw	r0, #:lower16:.LC0
 2041 00d8 C0F20000 		movt	r0, #:upper16:.LC0
 2042 00dc 40F24F41 		movw	r1, #1103
 2043 00e0 FFF7FEFF 		bl	assert_failed
 2044 00e4 0EE0     		b	.L107
 2045              	.L104:
1104:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } 
1105:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
1106:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1107:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = 0x00;
 2046              		.loc 1 1107 0 is_stmt 1
 2047 00e6 7B68     		ldr	r3, [r7, #4]
 2048 00e8 0022     		movs	r2, #0
 2049 00ea DA70     		strb	r2, [r3, #3]
1108:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours));
 2050              		.loc 1 1108 0
 2051 00ec 7B68     		ldr	r3, [r7, #4]
 2052 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2053 00f0 172B     		cmp	r3, #23
 2054 00f2 07D9     		bls	.L107
 2055              		.loc 1 1108 0 is_stmt 0 discriminator 1
 2056 00f4 40F20000 		movw	r0, #:lower16:.LC0
 2057 00f8 C0F20000 		movt	r0, #:upper16:.LC0
 2058 00fc 40F25441 		movw	r1, #1108
 2059 0100 FFF7FEFF 		bl	assert_failed
 2060              	.L107:
1109:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1110:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes));
 2061              		.loc 1 1110 0 is_stmt 1
 2062 0104 7B68     		ldr	r3, [r7, #4]
 2063 0106 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2064 0108 3B2B     		cmp	r3, #59
 2065 010a 07D9     		bls	.L108
 2066              		.loc 1 1110 0 is_stmt 0 discriminator 1
 2067 010c 40F20000 		movw	r0, #:lower16:.LC0
 2068 0110 C0F20000 		movt	r0, #:upper16:.LC0
 2069 0114 40F25641 		movw	r1, #1110
 2070 0118 FFF7FEFF 		bl	assert_failed
 2071              	.L108:
1111:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds));
 2072              		.loc 1 1111 0 is_stmt 1
 2073 011c 7B68     		ldr	r3, [r7, #4]
 2074 011e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2075 0120 3B2B     		cmp	r3, #59
 2076 0122 07D9     		bls	.L109
 2077              		.loc 1 1111 0 is_stmt 0 discriminator 1
 2078 0124 40F20000 		movw	r0, #:lower16:.LC0
 2079 0128 C0F20000 		movt	r0, #:upper16:.LC0
 2080 012c 40F25741 		movw	r1, #1111
 2081 0130 FFF7FEFF 		bl	assert_failed
 2082              	.L109:
1112:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
1113:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if(RTC_AlarmStruct->RTC_AlarmDateWeekDaySel == RTC_AlarmDateWeekDaySel_Date)
 2083              		.loc 1 1113 0 is_stmt 1
 2084 0134 7B68     		ldr	r3, [r7, #4]
 2085 0136 9B68     		ldr	r3, [r3, #8]
 2086 0138 002B     		cmp	r3, #0
 2087 013a 11D1     		bne	.L110
1114:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1115:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(RTC_AlarmStruct->RTC_AlarmDateWeekDay));
 2088              		.loc 1 1115 0
 2089 013c 7B68     		ldr	r3, [r7, #4]
 2090 013e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2091 0140 002B     		cmp	r3, #0
 2092 0142 04D0     		beq	.L111
 2093              		.loc 1 1115 0 is_stmt 0 discriminator 2
 2094 0144 7B68     		ldr	r3, [r7, #4]
 2095 0146 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2096 0148 1F2B     		cmp	r3, #31
 2097 014a 40F2D580 		bls	.L113
 2098              	.L111:
 2099              		.loc 1 1115 0 discriminator 1
 2100 014e 40F20000 		movw	r0, #:lower16:.LC0
 2101 0152 C0F20000 		movt	r0, #:upper16:.LC0
 2102 0156 40F25B41 		movw	r1, #1115
 2103 015a FFF7FEFF 		bl	assert_failed
 2104 015e CBE0     		b	.L113
 2105              	.L110:
1116:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1117:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
1118:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1119:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(RTC_AlarmStruct->RTC_AlarmDateWeekDay));
 2106              		.loc 1 1119 0 is_stmt 1
 2107 0160 7B68     		ldr	r3, [r7, #4]
 2108 0162 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2109 0164 012B     		cmp	r3, #1
 2110 0166 00F0C780 		beq	.L113
 2111              		.loc 1 1119 0 is_stmt 0 discriminator 1
 2112 016a 7B68     		ldr	r3, [r7, #4]
 2113 016c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2114 016e 022B     		cmp	r3, #2
 2115 0170 00F0C280 		beq	.L113
 2116 0174 7B68     		ldr	r3, [r7, #4]
 2117 0176 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2118 0178 032B     		cmp	r3, #3
 2119 017a 00F0BD80 		beq	.L113
 2120 017e 7B68     		ldr	r3, [r7, #4]
 2121 0180 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2122 0182 042B     		cmp	r3, #4
 2123 0184 00F0B880 		beq	.L113
 2124 0188 7B68     		ldr	r3, [r7, #4]
 2125 018a 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2126 018c 052B     		cmp	r3, #5
 2127 018e 00F0B380 		beq	.L113
 2128 0192 7B68     		ldr	r3, [r7, #4]
 2129 0194 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2130 0196 062B     		cmp	r3, #6
 2131 0198 00F0AE80 		beq	.L113
 2132 019c 7B68     		ldr	r3, [r7, #4]
 2133 019e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2134 01a0 072B     		cmp	r3, #7
 2135 01a2 00F0A980 		beq	.L113
 2136 01a6 40F20000 		movw	r0, #:lower16:.LC0
 2137 01aa C0F20000 		movt	r0, #:upper16:.LC0
 2138 01ae 40F25F41 		movw	r1, #1119
 2139 01b2 FFF7FEFF 		bl	assert_failed
 2140 01b6 9FE0     		b	.L113
 2141              	.L103:
1120:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1121:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1122:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1123:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1124:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
 2142              		.loc 1 1124 0 is_stmt 1
 2143 01b8 4FF42053 		mov	r3, #10240
 2144 01bc C4F20003 		movt	r3, 16384
 2145 01c0 9B68     		ldr	r3, [r3, #8]
 2146 01c2 03F04003 		and	r3, r3, #64
 2147 01c6 002B     		cmp	r3, #0
 2148 01c8 25D0     		beq	.L114
1125:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1126:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       tmpreg = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours);
 2149              		.loc 1 1126 0
 2150 01ca 7B68     		ldr	r3, [r7, #4]
 2151 01cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2152 01ce 1846     		mov	r0, r3
 2153 01d0 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2154 01d4 0346     		mov	r3, r0
 2155 01d6 7B61     		str	r3, [r7, #20]
1127:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
 2156              		.loc 1 1127 0
 2157 01d8 7B69     		ldr	r3, [r7, #20]
 2158 01da 002B     		cmp	r3, #0
 2159 01dc 02D0     		beq	.L115
 2160              		.loc 1 1127 0 is_stmt 0 discriminator 2
 2161 01de 7B69     		ldr	r3, [r7, #20]
 2162 01e0 0C2B     		cmp	r3, #12
 2163 01e2 07D9     		bls	.L116
 2164              	.L115:
 2165              		.loc 1 1127 0 discriminator 1
 2166 01e4 40F20000 		movw	r0, #:lower16:.LC0
 2167 01e8 C0F20000 		movt	r0, #:upper16:.LC0
 2168 01ec 40F26741 		movw	r1, #1127
 2169 01f0 FFF7FEFF 		bl	assert_failed
 2170              	.L116:
1128:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_H12(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12));
 2171              		.loc 1 1128 0 is_stmt 1
 2172 01f4 7B68     		ldr	r3, [r7, #4]
 2173 01f6 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 2174 01f8 002B     		cmp	r3, #0
 2175 01fa 1FD0     		beq	.L117
 2176              		.loc 1 1128 0 is_stmt 0 discriminator 1
 2177 01fc 7B68     		ldr	r3, [r7, #4]
 2178 01fe DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 2179 0200 402B     		cmp	r3, #64
 2180 0202 1BD0     		beq	.L117
 2181 0204 40F20000 		movw	r0, #:lower16:.LC0
 2182 0208 C0F20000 		movt	r0, #:upper16:.LC0
 2183 020c 4FF48D61 		mov	r1, #1128
 2184 0210 FFF7FEFF 		bl	assert_failed
 2185 0214 12E0     		b	.L117
 2186              	.L114:
1129:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } 
1130:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
1131:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1132:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = 0x00;
 2187              		.loc 1 1132 0 is_stmt 1
 2188 0216 7B68     		ldr	r3, [r7, #4]
 2189 0218 0022     		movs	r2, #0
 2190 021a DA70     		strb	r2, [r3, #3]
1133:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours)));
 2191              		.loc 1 1133 0
 2192 021c 7B68     		ldr	r3, [r7, #4]
 2193 021e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2194 0220 1846     		mov	r0, r3
 2195 0222 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2196 0226 0346     		mov	r3, r0
 2197 0228 172B     		cmp	r3, #23
 2198 022a 07D9     		bls	.L117
 2199              		.loc 1 1133 0 is_stmt 0 discriminator 1
 2200 022c 40F20000 		movw	r0, #:lower16:.LC0
 2201 0230 C0F20000 		movt	r0, #:upper16:.LC0
 2202 0234 40F26D41 		movw	r1, #1133
 2203 0238 FFF7FEFF 		bl	assert_failed
 2204              	.L117:
1134:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1135:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
1136:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes)));
 2205              		.loc 1 1136 0 is_stmt 1
 2206 023c 7B68     		ldr	r3, [r7, #4]
 2207 023e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2208 0240 1846     		mov	r0, r3
 2209 0242 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2210 0246 0346     		mov	r3, r0
 2211 0248 3B2B     		cmp	r3, #59
 2212 024a 07D9     		bls	.L118
 2213              		.loc 1 1136 0 is_stmt 0 discriminator 1
 2214 024c 40F20000 		movw	r0, #:lower16:.LC0
 2215 0250 C0F20000 		movt	r0, #:upper16:.LC0
 2216 0254 4FF48E61 		mov	r1, #1136
 2217 0258 FFF7FEFF 		bl	assert_failed
 2218              	.L118:
1137:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds)));
 2219              		.loc 1 1137 0 is_stmt 1
 2220 025c 7B68     		ldr	r3, [r7, #4]
 2221 025e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2222 0260 1846     		mov	r0, r3
 2223 0262 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2224 0266 0346     		mov	r3, r0
 2225 0268 3B2B     		cmp	r3, #59
 2226 026a 07D9     		bls	.L119
 2227              		.loc 1 1137 0 is_stmt 0 discriminator 1
 2228 026c 40F20000 		movw	r0, #:lower16:.LC0
 2229 0270 C0F20000 		movt	r0, #:upper16:.LC0
 2230 0274 40F27141 		movw	r1, #1137
 2231 0278 FFF7FEFF 		bl	assert_failed
 2232              	.L119:
1138:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
1139:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if(RTC_AlarmStruct->RTC_AlarmDateWeekDaySel == RTC_AlarmDateWeekDaySel_Date)
 2233              		.loc 1 1139 0 is_stmt 1
 2234 027c 7B68     		ldr	r3, [r7, #4]
 2235 027e 9B68     		ldr	r3, [r3, #8]
 2236 0280 002B     		cmp	r3, #0
 2237 0282 15D1     		bne	.L120
1140:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1141:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       tmpreg = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmDateWeekDay);
 2238              		.loc 1 1141 0
 2239 0284 7B68     		ldr	r3, [r7, #4]
 2240 0286 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2241 0288 1846     		mov	r0, r3
 2242 028a FFF7FEFF 		bl	RTC_Bcd2ToByte
 2243 028e 0346     		mov	r3, r0
 2244 0290 7B61     		str	r3, [r7, #20]
1142:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(tmpreg));    
 2245              		.loc 1 1142 0
 2246 0292 7B69     		ldr	r3, [r7, #20]
 2247 0294 002B     		cmp	r3, #0
 2248 0296 02D0     		beq	.L121
 2249              		.loc 1 1142 0 is_stmt 0 discriminator 2
 2250 0298 7B69     		ldr	r3, [r7, #20]
 2251 029a 1F2B     		cmp	r3, #31
 2252 029c 2CD9     		bls	.L113
 2253              	.L121:
 2254              		.loc 1 1142 0 discriminator 1
 2255 029e 40F20000 		movw	r0, #:lower16:.LC0
 2256 02a2 C0F20000 		movt	r0, #:upper16:.LC0
 2257 02a6 40F27641 		movw	r1, #1142
 2258 02aa FFF7FEFF 		bl	assert_failed
 2259 02ae 23E0     		b	.L113
 2260              	.L120:
1143:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1144:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
1145:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1146:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       tmpreg = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmDateWeekDay);
 2261              		.loc 1 1146 0 is_stmt 1
 2262 02b0 7B68     		ldr	r3, [r7, #4]
 2263 02b2 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2264 02b4 1846     		mov	r0, r3
 2265 02b6 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2266 02ba 0346     		mov	r3, r0
 2267 02bc 7B61     		str	r3, [r7, #20]
1147:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(tmpreg));      
 2268              		.loc 1 1147 0
 2269 02be 7B69     		ldr	r3, [r7, #20]
 2270 02c0 012B     		cmp	r3, #1
 2271 02c2 19D0     		beq	.L113
 2272              		.loc 1 1147 0 is_stmt 0 discriminator 1
 2273 02c4 7B69     		ldr	r3, [r7, #20]
 2274 02c6 022B     		cmp	r3, #2
 2275 02c8 16D0     		beq	.L113
 2276 02ca 7B69     		ldr	r3, [r7, #20]
 2277 02cc 032B     		cmp	r3, #3
 2278 02ce 13D0     		beq	.L113
 2279 02d0 7B69     		ldr	r3, [r7, #20]
 2280 02d2 042B     		cmp	r3, #4
 2281 02d4 10D0     		beq	.L113
 2282 02d6 7B69     		ldr	r3, [r7, #20]
 2283 02d8 052B     		cmp	r3, #5
 2284 02da 0DD0     		beq	.L113
 2285 02dc 7B69     		ldr	r3, [r7, #20]
 2286 02de 062B     		cmp	r3, #6
 2287 02e0 0AD0     		beq	.L113
 2288 02e2 7B69     		ldr	r3, [r7, #20]
 2289 02e4 072B     		cmp	r3, #7
 2290 02e6 07D0     		beq	.L113
 2291 02e8 40F20000 		movw	r0, #:lower16:.LC0
 2292 02ec C0F20000 		movt	r0, #:upper16:.LC0
 2293 02f0 40F27B41 		movw	r1, #1147
 2294 02f4 FFF7FEFF 		bl	assert_failed
 2295              	.L113:
1148:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }    
1149:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1150:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1151:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the input parameters format */
1152:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format != RTC_Format_BIN)
 2296              		.loc 1 1152 0 is_stmt 1
 2297 02f8 FB68     		ldr	r3, [r7, #12]
 2298 02fa 002B     		cmp	r3, #0
 2299 02fc 19D0     		beq	.L123
1153:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1154:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours) << 16) | \
 2300              		.loc 1 1154 0
 2301 02fe 7B68     		ldr	r3, [r7, #4]
 2302 0300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2303 0302 1A04     		lsls	r2, r3, #16
1155:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 2304              		.loc 1 1155 0
 2305 0304 7B68     		ldr	r3, [r7, #4]
 2306 0306 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2307 0308 1B02     		lsls	r3, r3, #8
1154:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 2308              		.loc 1 1154 0
 2309 030a 1A43     		orrs	r2, r2, r3
1156:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds) | \
 2310              		.loc 1 1156 0
 2311 030c 7B68     		ldr	r3, [r7, #4]
 2312 030e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
1155:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 2313              		.loc 1 1155 0
 2314 0310 1A43     		orrs	r2, r2, r3
1157:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
 2315              		.loc 1 1157 0
 2316 0312 7B68     		ldr	r3, [r7, #4]
 2317 0314 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 2318 0316 1B04     		lsls	r3, r3, #16
1156:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds) | \
 2319              		.loc 1 1156 0
 2320 0318 1A43     		orrs	r2, r2, r3
1158:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmDateWeekDay) << 24) | \
 2321              		.loc 1 1158 0
 2322 031a 7B68     		ldr	r3, [r7, #4]
 2323 031c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2324 031e 1B06     		lsls	r3, r3, #24
1157:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
 2325              		.loc 1 1157 0
 2326 0320 1A43     		orrs	r2, r2, r3
1159:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmDateWeekDaySel) | \
 2327              		.loc 1 1159 0
 2328 0322 7B68     		ldr	r3, [r7, #4]
 2329 0324 9B68     		ldr	r3, [r3, #8]
1158:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmDateWeekDay) << 24) | \
 2330              		.loc 1 1158 0
 2331 0326 1A43     		orrs	r2, r2, r3
1160:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmMask)); 
 2332              		.loc 1 1160 0
 2333 0328 7B68     		ldr	r3, [r7, #4]
 2334 032a 5B68     		ldr	r3, [r3, #4]
1154:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 2335              		.loc 1 1154 0
 2336 032c 1343     		orrs	r3, r3, r2
 2337 032e 7B61     		str	r3, [r7, #20]
 2338 0330 2BE0     		b	.L124
 2339              	.L123:
1161:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
1162:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1163:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1164:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours) << 16) | \
 2340              		.loc 1 1164 0
 2341 0332 7B68     		ldr	r3, [r7, #4]
 2342 0334 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2343 0336 1846     		mov	r0, r3
 2344 0338 FFF7FEFF 		bl	RTC_ByteToBcd2
 2345 033c 0346     		mov	r3, r0
 2346 033e 1C04     		lsls	r4, r3, #16
1165:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 2347              		.loc 1 1165 0
 2348 0340 7B68     		ldr	r3, [r7, #4]
 2349 0342 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2350 0344 1846     		mov	r0, r3
 2351 0346 FFF7FEFF 		bl	RTC_ByteToBcd2
 2352 034a 0346     		mov	r3, r0
 2353 034c 1B02     		lsls	r3, r3, #8
1164:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 2354              		.loc 1 1164 0
 2355 034e 1C43     		orrs	r4, r4, r3
1166:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds)) | \
 2356              		.loc 1 1166 0
 2357 0350 7B68     		ldr	r3, [r7, #4]
 2358 0352 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2359 0354 1846     		mov	r0, r3
 2360 0356 FFF7FEFF 		bl	RTC_ByteToBcd2
 2361 035a 0346     		mov	r3, r0
1165:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 2362              		.loc 1 1165 0
 2363 035c 44EA0302 		orr	r2, r4, r3
1167:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
 2364              		.loc 1 1167 0
 2365 0360 7B68     		ldr	r3, [r7, #4]
 2366 0362 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 2367 0364 1B04     		lsls	r3, r3, #16
1166:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds)) | \
 2368              		.loc 1 1166 0
 2369 0366 42EA0304 		orr	r4, r2, r3
1168:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmDateWeekDay) << 24) | \
 2370              		.loc 1 1168 0
 2371 036a 7B68     		ldr	r3, [r7, #4]
 2372 036c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2373 036e 1846     		mov	r0, r3
 2374 0370 FFF7FEFF 		bl	RTC_ByteToBcd2
 2375 0374 0346     		mov	r3, r0
 2376 0376 1B06     		lsls	r3, r3, #24
1167:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
 2377              		.loc 1 1167 0
 2378 0378 44EA0302 		orr	r2, r4, r3
1169:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmDateWeekDaySel) | \
 2379              		.loc 1 1169 0
 2380 037c 7B68     		ldr	r3, [r7, #4]
 2381 037e 9B68     		ldr	r3, [r3, #8]
1168:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmDateWeekDay) << 24) | \
 2382              		.loc 1 1168 0
 2383 0380 1A43     		orrs	r2, r2, r3
1170:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmMask)); 
 2384              		.loc 1 1170 0
 2385 0382 7B68     		ldr	r3, [r7, #4]
 2386 0384 5B68     		ldr	r3, [r3, #4]
1164:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 2387              		.loc 1 1164 0
 2388 0386 1343     		orrs	r3, r3, r2
 2389 0388 7B61     		str	r3, [r7, #20]
 2390              	.L124:
1171:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
1172:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1173:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1174:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 2391              		.loc 1 1174 0
 2392 038a 4FF42053 		mov	r3, #10240
 2393 038e C4F20003 		movt	r3, 16384
 2394 0392 CA22     		movs	r2, #202
 2395 0394 5A62     		str	r2, [r3, #36]
1175:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2396              		.loc 1 1175 0
 2397 0396 4FF42053 		mov	r3, #10240
 2398 039a C4F20003 		movt	r3, 16384
 2399 039e 5322     		movs	r2, #83
 2400 03a0 5A62     		str	r2, [r3, #36]
1176:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1177:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the Alarm register */
1178:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Alarm == RTC_Alarm_A)
 2401              		.loc 1 1178 0
 2402 03a2 BB68     		ldr	r3, [r7, #8]
 2403 03a4 B3F5807F 		cmp	r3, #256
 2404 03a8 06D1     		bne	.L125
1179:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1180:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->ALRMAR = (uint32_t)tmpreg;
 2405              		.loc 1 1180 0
 2406 03aa 4FF42053 		mov	r3, #10240
 2407 03ae C4F20003 		movt	r3, 16384
 2408 03b2 7A69     		ldr	r2, [r7, #20]
 2409 03b4 DA61     		str	r2, [r3, #28]
 2410 03b6 05E0     		b	.L126
 2411              	.L125:
1181:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1182:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1183:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1184:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->ALRMBR = (uint32_t)tmpreg;
 2412              		.loc 1 1184 0
 2413 03b8 4FF42053 		mov	r3, #10240
 2414 03bc C4F20003 		movt	r3, 16384
 2415 03c0 7A69     		ldr	r2, [r7, #20]
 2416 03c2 1A62     		str	r2, [r3, #32]
 2417              	.L126:
1185:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1186:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1187:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1188:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;   
 2418              		.loc 1 1188 0
 2419 03c4 4FF42053 		mov	r3, #10240
 2420 03c8 C4F20003 		movt	r3, 16384
 2421 03cc FF22     		movs	r2, #255
 2422 03ce 5A62     		str	r2, [r3, #36]
1189:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2423              		.loc 1 1189 0
 2424 03d0 1C37     		adds	r7, r7, #28
 2425 03d2 BD46     		mov	sp, r7
 2426              		@ sp needed
 2427 03d4 90BD     		pop	{r4, r7, pc}
 2428              		.cfi_endproc
 2429              	.LFE126:
 2431 03d6 00BF     		.section	.text.RTC_AlarmStructInit,"ax",%progbits
 2432              		.align	2
 2433              		.global	RTC_AlarmStructInit
 2434              		.thumb
 2435              		.thumb_func
 2437              	RTC_AlarmStructInit:
 2438              	.LFB127:
1190:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1191:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1192:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Fills each RTC_AlarmStruct member with its default value
1193:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         (Time = 00h:00mn:00sec / Date = 1st day of the month/Mask =
1194:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         all fields are masked).
1195:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_AlarmStruct: pointer to a @ref RTC_AlarmTypeDef structure which
1196:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         will be initialized.
1197:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1198:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1199:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_AlarmStructInit(RTC_AlarmTypeDef* RTC_AlarmStruct)
1200:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 2439              		.loc 1 1200 0
 2440              		.cfi_startproc
 2441              		@ args = 0, pretend = 0, frame = 8
 2442              		@ frame_needed = 1, uses_anonymous_args = 0
 2443              		@ link register save eliminated.
 2444 0000 80B4     		push	{r7}
 2445              	.LCFI50:
 2446              		.cfi_def_cfa_offset 4
 2447              		.cfi_offset 7, -4
 2448 0002 83B0     		sub	sp, sp, #12
 2449              	.LCFI51:
 2450              		.cfi_def_cfa_offset 16
 2451 0004 00AF     		add	r7, sp, #0
 2452              	.LCFI52:
 2453              		.cfi_def_cfa_register 7
 2454 0006 7860     		str	r0, [r7, #4]
1201:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Alarm Time Settings : Time = 00h:00mn:00sec */
1202:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = RTC_H12_AM;
 2455              		.loc 1 1202 0
 2456 0008 7B68     		ldr	r3, [r7, #4]
 2457 000a 0022     		movs	r2, #0
 2458 000c DA70     		strb	r2, [r3, #3]
1203:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = 0;
 2459              		.loc 1 1203 0
 2460 000e 7B68     		ldr	r3, [r7, #4]
 2461 0010 0022     		movs	r2, #0
 2462 0012 1A70     		strb	r2, [r3]
1204:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = 0;
 2463              		.loc 1 1204 0
 2464 0014 7B68     		ldr	r3, [r7, #4]
 2465 0016 0022     		movs	r2, #0
 2466 0018 5A70     		strb	r2, [r3, #1]
1205:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = 0;
 2467              		.loc 1 1205 0
 2468 001a 7B68     		ldr	r3, [r7, #4]
 2469 001c 0022     		movs	r2, #0
 2470 001e 9A70     		strb	r2, [r3, #2]
1206:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1207:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Alarm Date Settings : Date = 1st day of the month */
1208:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDaySel = RTC_AlarmDateWeekDaySel_Date;
 2471              		.loc 1 1208 0
 2472 0020 7B68     		ldr	r3, [r7, #4]
 2473 0022 0022     		movs	r2, #0
 2474 0024 9A60     		str	r2, [r3, #8]
1209:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDay = 1;
 2475              		.loc 1 1209 0
 2476 0026 7B68     		ldr	r3, [r7, #4]
 2477 0028 0122     		movs	r2, #1
 2478 002a 1A73     		strb	r2, [r3, #12]
1210:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1211:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Alarm Masks Settings : Mask =  all fields are not masked */
1212:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmMask = RTC_AlarmMask_None;
 2479              		.loc 1 1212 0
 2480 002c 7B68     		ldr	r3, [r7, #4]
 2481 002e 0022     		movs	r2, #0
 2482 0030 5A60     		str	r2, [r3, #4]
1213:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2483              		.loc 1 1213 0
 2484 0032 0C37     		adds	r7, r7, #12
 2485 0034 BD46     		mov	sp, r7
 2486              		@ sp needed
 2487 0036 5DF8047B 		ldr	r7, [sp], #4
 2488 003a 7047     		bx	lr
 2489              		.cfi_endproc
 2490              	.LFE127:
 2492              		.section	.text.RTC_GetAlarm,"ax",%progbits
 2493              		.align	2
 2494              		.global	RTC_GetAlarm
 2495              		.thumb
 2496              		.thumb_func
 2498              	RTC_GetAlarm:
 2499              	.LFB128:
1214:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1215:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1216:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Get the RTC Alarm value and masks.
1217:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the output parameters.
1218:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1219:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN: Binary data format 
1220:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD: BCD data format
1221:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Alarm: specifies the alarm to be read.
1222:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1223:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Alarm_A: to select Alarm A
1224:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Alarm_B: to select Alarm B  
1225:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_AlarmStruct: pointer to a RTC_AlarmTypeDef structure that will 
1226:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                          contains the output alarm configuration values.     
1227:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1228:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1229:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_GetAlarm(uint32_t RTC_Format, uint32_t RTC_Alarm, RTC_AlarmTypeDef* RTC_AlarmStruct)
1230:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 2500              		.loc 1 1230 0
 2501              		.cfi_startproc
 2502              		@ args = 0, pretend = 0, frame = 24
 2503              		@ frame_needed = 1, uses_anonymous_args = 0
 2504 0000 80B5     		push	{r7, lr}
 2505              	.LCFI53:
 2506              		.cfi_def_cfa_offset 8
 2507              		.cfi_offset 7, -8
 2508              		.cfi_offset 14, -4
 2509 0002 86B0     		sub	sp, sp, #24
 2510              	.LCFI54:
 2511              		.cfi_def_cfa_offset 32
 2512 0004 00AF     		add	r7, sp, #0
 2513              	.LCFI55:
 2514              		.cfi_def_cfa_register 7
 2515 0006 F860     		str	r0, [r7, #12]
 2516 0008 B960     		str	r1, [r7, #8]
 2517 000a 7A60     		str	r2, [r7, #4]
1231:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 2518              		.loc 1 1231 0
 2519 000c 0023     		movs	r3, #0
 2520 000e 7B61     		str	r3, [r7, #20]
1232:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1233:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1234:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
 2521              		.loc 1 1234 0
 2522 0010 FB68     		ldr	r3, [r7, #12]
 2523 0012 002B     		cmp	r3, #0
 2524 0014 0AD0     		beq	.L129
 2525              		.loc 1 1234 0 is_stmt 0 discriminator 1
 2526 0016 FB68     		ldr	r3, [r7, #12]
 2527 0018 012B     		cmp	r3, #1
 2528 001a 07D0     		beq	.L129
 2529 001c 40F20000 		movw	r0, #:lower16:.LC0
 2530 0020 C0F20000 		movt	r0, #:upper16:.LC0
 2531 0024 40F2D241 		movw	r1, #1234
 2532 0028 FFF7FEFF 		bl	assert_failed
 2533              	.L129:
1235:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM(RTC_Alarm)); 
 2534              		.loc 1 1235 0 is_stmt 1
 2535 002c BB68     		ldr	r3, [r7, #8]
 2536 002e B3F5807F 		cmp	r3, #256
 2537 0032 0BD0     		beq	.L130
 2538              		.loc 1 1235 0 is_stmt 0 discriminator 1
 2539 0034 BB68     		ldr	r3, [r7, #8]
 2540 0036 B3F5007F 		cmp	r3, #512
 2541 003a 07D0     		beq	.L130
 2542 003c 40F20000 		movw	r0, #:lower16:.LC0
 2543 0040 C0F20000 		movt	r0, #:upper16:.LC0
 2544 0044 40F2D341 		movw	r1, #1235
 2545 0048 FFF7FEFF 		bl	assert_failed
 2546              	.L130:
1236:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1237:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the RTC_ALRMxR register */
1238:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Alarm == RTC_Alarm_A)
 2547              		.loc 1 1238 0 is_stmt 1
 2548 004c BB68     		ldr	r3, [r7, #8]
 2549 004e B3F5807F 		cmp	r3, #256
 2550 0052 06D1     		bne	.L131
1239:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1240:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (uint32_t)(RTC->ALRMAR);
 2551              		.loc 1 1240 0
 2552 0054 4FF42053 		mov	r3, #10240
 2553 0058 C4F20003 		movt	r3, 16384
 2554 005c DB69     		ldr	r3, [r3, #28]
 2555 005e 7B61     		str	r3, [r7, #20]
 2556 0060 05E0     		b	.L132
 2557              	.L131:
1241:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1242:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1243:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1244:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (uint32_t)(RTC->ALRMBR);
 2558              		.loc 1 1244 0
 2559 0062 4FF42053 		mov	r3, #10240
 2560 0066 C4F20003 		movt	r3, 16384
 2561 006a 1B6A     		ldr	r3, [r3, #32]
 2562 006c 7B61     		str	r3, [r7, #20]
 2563              	.L132:
1245:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1246:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1247:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Fill the structure with the read parameters */
1248:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = (uint32_t)((tmpreg & (RTC_ALRMAR_HT | \
 2564              		.loc 1 1248 0
 2565 006e 7B69     		ldr	r3, [r7, #20]
 2566 0070 03F47C13 		and	r3, r3, #4128768
 2567 0074 1B0C     		lsrs	r3, r3, #16
 2568 0076 DAB2     		uxtb	r2, r3
 2569 0078 7B68     		ldr	r3, [r7, #4]
 2570 007a 1A70     		strb	r2, [r3]
1249:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_HU)) >> 16);
1250:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = (uint32_t)((tmpreg & (RTC_ALRMAR_MNT | \
 2571              		.loc 1 1250 0
 2572 007c 7B69     		ldr	r3, [r7, #20]
 2573 007e 03F4FE43 		and	r3, r3, #32512
 2574 0082 1B0A     		lsrs	r3, r3, #8
 2575 0084 DAB2     		uxtb	r2, r3
 2576 0086 7B68     		ldr	r3, [r7, #4]
 2577 0088 5A70     		strb	r2, [r3, #1]
1251:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_MNU)) >> 8);
1252:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = (uint32_t)(tmpreg & (RTC_ALRMAR_ST | \
 2578              		.loc 1 1252 0
 2579 008a 7B69     		ldr	r3, [r7, #20]
 2580 008c DBB2     		uxtb	r3, r3
 2581 008e 03F07F03 		and	r3, r3, #127
 2582 0092 DAB2     		uxtb	r2, r3
 2583 0094 7B68     		ldr	r3, [r7, #4]
 2584 0096 9A70     		strb	r2, [r3, #2]
1253:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_SU));
1254:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = (uint32_t)((tmpreg & RTC_ALRMAR_PM) >> 16);
 2585              		.loc 1 1254 0
 2586 0098 7B69     		ldr	r3, [r7, #20]
 2587 009a 03F48003 		and	r3, r3, #4194304
 2588 009e 1B0C     		lsrs	r3, r3, #16
 2589 00a0 DAB2     		uxtb	r2, r3
 2590 00a2 7B68     		ldr	r3, [r7, #4]
 2591 00a4 DA70     		strb	r2, [r3, #3]
1255:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 
 2592              		.loc 1 1255 0
 2593 00a6 7B69     		ldr	r3, [r7, #20]
 2594 00a8 03F07C53 		and	r3, r3, #1056964608
 2595 00ac 1B0E     		lsrs	r3, r3, #24
 2596 00ae DAB2     		uxtb	r2, r3
 2597 00b0 7B68     		ldr	r3, [r7, #4]
 2598 00b2 1A73     		strb	r2, [r3, #12]
1256:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
 2599              		.loc 1 1256 0
 2600 00b4 7B69     		ldr	r3, [r7, #20]
 2601 00b6 03F08042 		and	r2, r3, #1073741824
 2602 00ba 7B68     		ldr	r3, [r7, #4]
 2603 00bc 9A60     		str	r2, [r3, #8]
1257:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmMask = (uint32_t)(tmpreg & RTC_AlarmMask_All);
 2604              		.loc 1 1257 0
 2605 00be 7B69     		ldr	r3, [r7, #20]
 2606 00c0 03F08032 		and	r2, r3, #-2139062144
 2607 00c4 7B68     		ldr	r3, [r7, #4]
 2608 00c6 5A60     		str	r2, [r3, #4]
1258:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1259:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 2609              		.loc 1 1259 0
 2610 00c8 FB68     		ldr	r3, [r7, #12]
 2611 00ca 002B     		cmp	r3, #0
 2612 00cc 23D1     		bne	.L128
1260:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1261:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = RTC_Bcd2ToByte(RTC_AlarmStruct-> \
 2613              		.loc 1 1261 0
 2614 00ce 7B68     		ldr	r3, [r7, #4]
 2615 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2616 00d2 1846     		mov	r0, r3
 2617 00d4 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2618 00d8 0346     		mov	r3, r0
 2619 00da 1A46     		mov	r2, r3
 2620 00dc 7B68     		ldr	r3, [r7, #4]
 2621 00de 1A70     		strb	r2, [r3]
1262:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Hours);
1263:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = RTC_Bcd2ToByte(RTC_AlarmStruct-> \
 2622              		.loc 1 1263 0
 2623 00e0 7B68     		ldr	r3, [r7, #4]
 2624 00e2 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2625 00e4 1846     		mov	r0, r3
 2626 00e6 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2627 00ea 0346     		mov	r3, r0
 2628 00ec 1A46     		mov	r2, r3
 2629 00ee 7B68     		ldr	r3, [r7, #4]
 2630 00f0 5A70     		strb	r2, [r3, #1]
1264:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Minutes);
1265:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = RTC_Bcd2ToByte(RTC_AlarmStruct-> \
 2631              		.loc 1 1265 0
 2632 00f2 7B68     		ldr	r3, [r7, #4]
 2633 00f4 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2634 00f6 1846     		mov	r0, r3
 2635 00f8 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2636 00fc 0346     		mov	r3, r0
 2637 00fe 1A46     		mov	r2, r3
 2638 0100 7B68     		ldr	r3, [r7, #4]
 2639 0102 9A70     		strb	r2, [r3, #2]
1266:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Seconds);
1267:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_AlarmStruct->RTC_AlarmDateWeekDay = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmDateWeekDay);
 2640              		.loc 1 1267 0
 2641 0104 7B68     		ldr	r3, [r7, #4]
 2642 0106 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2643 0108 1846     		mov	r0, r3
 2644 010a FFF7FEFF 		bl	RTC_Bcd2ToByte
 2645 010e 0346     		mov	r3, r0
 2646 0110 1A46     		mov	r2, r3
 2647 0112 7B68     		ldr	r3, [r7, #4]
 2648 0114 1A73     		strb	r2, [r3, #12]
 2649              	.L128:
1268:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
1269:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2650              		.loc 1 1269 0
 2651 0116 1837     		adds	r7, r7, #24
 2652 0118 BD46     		mov	sp, r7
 2653              		@ sp needed
 2654 011a 80BD     		pop	{r7, pc}
 2655              		.cfi_endproc
 2656              	.LFE128:
 2658              		.section	.text.RTC_AlarmCmd,"ax",%progbits
 2659              		.align	2
 2660              		.global	RTC_AlarmCmd
 2661              		.thumb
 2662              		.thumb_func
 2664              	RTC_AlarmCmd:
 2665              	.LFB129:
1270:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1271:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1272:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or disables the specified RTC Alarm.
1273:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Alarm: specifies the alarm to be configured.
1274:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be any combination of the following values:
1275:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Alarm_A: to select Alarm A
1276:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Alarm_B: to select Alarm B  
1277:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the specified alarm.
1278:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1279:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
1280:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Alarm is enabled/disabled
1281:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC Alarm is not enabled/disabled  
1282:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1283:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_AlarmCmd(uint32_t RTC_Alarm, FunctionalState NewState)
1284:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 2666              		.loc 1 1284 0
 2667              		.cfi_startproc
 2668              		@ args = 0, pretend = 0, frame = 24
 2669              		@ frame_needed = 1, uses_anonymous_args = 0
 2670 0000 80B5     		push	{r7, lr}
 2671              	.LCFI56:
 2672              		.cfi_def_cfa_offset 8
 2673              		.cfi_offset 7, -8
 2674              		.cfi_offset 14, -4
 2675 0002 86B0     		sub	sp, sp, #24
 2676              	.LCFI57:
 2677              		.cfi_def_cfa_offset 32
 2678 0004 00AF     		add	r7, sp, #0
 2679              	.LCFI58:
 2680              		.cfi_def_cfa_register 7
 2681 0006 7860     		str	r0, [r7, #4]
 2682 0008 0B46     		mov	r3, r1
 2683 000a FB70     		strb	r3, [r7, #3]
1285:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t alarmcounter = 0x00;
 2684              		.loc 1 1285 0
 2685 000c 0023     		movs	r3, #0
 2686 000e FB60     		str	r3, [r7, #12]
1286:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t alarmstatus = 0x00;
 2687              		.loc 1 1286 0
 2688 0010 0023     		movs	r3, #0
 2689 0012 3B61     		str	r3, [r7, #16]
1287:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 2690              		.loc 1 1287 0
 2691 0014 0023     		movs	r3, #0
 2692 0016 FB75     		strb	r3, [r7, #23]
1288:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
1289:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1290:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CMD_ALARM(RTC_Alarm));
 2693              		.loc 1 1290 0
 2694 0018 7B68     		ldr	r3, [r7, #4]
 2695 001a 03F44073 		and	r3, r3, #768
 2696 001e 002B     		cmp	r3, #0
 2697 0020 07D1     		bne	.L135
 2698              		.loc 1 1290 0 is_stmt 0 discriminator 1
 2699 0022 40F20000 		movw	r0, #:lower16:.LC0
 2700 0026 C0F20000 		movt	r0, #:upper16:.LC0
 2701 002a 40F20A51 		movw	r1, #1290
 2702 002e FFF7FEFF 		bl	assert_failed
 2703              	.L135:
1291:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2704              		.loc 1 1291 0 is_stmt 1
 2705 0032 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2706 0034 002B     		cmp	r3, #0
 2707 0036 0AD0     		beq	.L136
 2708              		.loc 1 1291 0 is_stmt 0 discriminator 1
 2709 0038 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2710 003a 012B     		cmp	r3, #1
 2711 003c 07D0     		beq	.L136
 2712 003e 40F20000 		movw	r0, #:lower16:.LC0
 2713 0042 C0F20000 		movt	r0, #:upper16:.LC0
 2714 0046 40F20B51 		movw	r1, #1291
 2715 004a FFF7FEFF 		bl	assert_failed
 2716              	.L136:
1292:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1293:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1294:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 2717              		.loc 1 1294 0 is_stmt 1
 2718 004e 4FF42053 		mov	r3, #10240
 2719 0052 C4F20003 		movt	r3, 16384
 2720 0056 CA22     		movs	r2, #202
 2721 0058 5A62     		str	r2, [r3, #36]
1295:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2722              		.loc 1 1295 0
 2723 005a 4FF42053 		mov	r3, #10240
 2724 005e C4F20003 		movt	r3, 16384
 2725 0062 5322     		movs	r2, #83
 2726 0064 5A62     		str	r2, [r3, #36]
1296:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1297:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the Alarm state */
1298:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
 2727              		.loc 1 1298 0
 2728 0066 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2729 0068 002B     		cmp	r3, #0
 2730 006a 0ED0     		beq	.L137
1299:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1300:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR |= (uint32_t)RTC_Alarm;
 2731              		.loc 1 1300 0
 2732 006c 4FF42053 		mov	r3, #10240
 2733 0070 C4F20003 		movt	r3, 16384
 2734 0074 4FF42052 		mov	r2, #10240
 2735 0078 C4F20002 		movt	r2, 16384
 2736 007c 9168     		ldr	r1, [r2, #8]
 2737 007e 7A68     		ldr	r2, [r7, #4]
 2738 0080 0A43     		orrs	r2, r2, r1
 2739 0082 9A60     		str	r2, [r3, #8]
1301:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1302:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;    
 2740              		.loc 1 1302 0
 2741 0084 0123     		movs	r3, #1
 2742 0086 FB75     		strb	r3, [r7, #23]
 2743 0088 2EE0     		b	.L138
 2744              	.L137:
1303:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1304:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1305:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   { 
1306:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Disable the Alarm in RTC_CR register */
1307:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR &= (uint32_t)~RTC_Alarm;
 2745              		.loc 1 1307 0
 2746 008a 4FF42053 		mov	r3, #10240
 2747 008e C4F20003 		movt	r3, 16384
 2748 0092 4FF42052 		mov	r2, #10240
 2749 0096 C4F20002 		movt	r2, 16384
 2750 009a 9168     		ldr	r1, [r2, #8]
 2751 009c 7A68     		ldr	r2, [r7, #4]
 2752 009e D243     		mvns	r2, r2
 2753 00a0 0A40     		ands	r2, r2, r1
 2754 00a2 9A60     		str	r2, [r3, #8]
 2755              	.L140:
1308:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    
1309:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Wait till RTC ALRxWF flag is set and if Time out is reached exit */
1310:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     do
1311:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1312:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       alarmstatus = RTC->ISR & (RTC_Alarm >> 8);
 2756              		.loc 1 1312 0 discriminator 1
 2757 00a4 4FF42053 		mov	r3, #10240
 2758 00a8 C4F20003 		movt	r3, 16384
 2759 00ac DA68     		ldr	r2, [r3, #12]
 2760 00ae 7B68     		ldr	r3, [r7, #4]
 2761 00b0 1B0A     		lsrs	r3, r3, #8
 2762 00b2 1340     		ands	r3, r3, r2
 2763 00b4 3B61     		str	r3, [r7, #16]
1313:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       alarmcounter++;  
 2764              		.loc 1 1313 0 discriminator 1
 2765 00b6 FB68     		ldr	r3, [r7, #12]
 2766 00b8 0133     		adds	r3, r3, #1
 2767 00ba FB60     		str	r3, [r7, #12]
1314:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } while((alarmcounter != INITMODE_TIMEOUT) && (alarmstatus == 0x00));
 2768              		.loc 1 1314 0 discriminator 1
 2769 00bc FB68     		ldr	r3, [r7, #12]
 2770 00be B3F5803F 		cmp	r3, #65536
 2771 00c2 02D0     		beq	.L139
 2772 00c4 3B69     		ldr	r3, [r7, #16]
 2773 00c6 002B     		cmp	r3, #0
 2774 00c8 ECD0     		beq	.L140
 2775              	.L139:
1315:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
1316:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->ISR & (RTC_Alarm >> 8)) == RESET)
 2776              		.loc 1 1316 0
 2777 00ca 4FF42053 		mov	r3, #10240
 2778 00ce C4F20003 		movt	r3, 16384
 2779 00d2 DA68     		ldr	r2, [r3, #12]
 2780 00d4 7B68     		ldr	r3, [r7, #4]
 2781 00d6 1B0A     		lsrs	r3, r3, #8
 2782 00d8 1340     		ands	r3, r3, r2
 2783 00da 002B     		cmp	r3, #0
 2784 00dc 02D1     		bne	.L141
1317:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1318:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = ERROR;
 2785              		.loc 1 1318 0
 2786 00de 0023     		movs	r3, #0
 2787 00e0 FB75     		strb	r3, [r7, #23]
 2788 00e2 01E0     		b	.L138
 2789              	.L141:
1319:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } 
1320:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
1321:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1322:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = SUCCESS;
 2790              		.loc 1 1322 0
 2791 00e4 0123     		movs	r3, #1
 2792 00e6 FB75     		strb	r3, [r7, #23]
 2793              	.L138:
1323:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }        
1324:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
1325:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1326:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1327:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 2794              		.loc 1 1327 0
 2795 00e8 4FF42053 		mov	r3, #10240
 2796 00ec C4F20003 		movt	r3, 16384
 2797 00f0 FF22     		movs	r2, #255
 2798 00f2 5A62     		str	r2, [r3, #36]
1328:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1329:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status;
 2799              		.loc 1 1329 0
 2800 00f4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1330:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2801              		.loc 1 1330 0
 2802 00f6 1846     		mov	r0, r3
 2803 00f8 1837     		adds	r7, r7, #24
 2804 00fa BD46     		mov	sp, r7
 2805              		@ sp needed
 2806 00fc 80BD     		pop	{r7, pc}
 2807              		.cfi_endproc
 2808              	.LFE129:
 2810 00fe 00BF     		.section	.text.RTC_AlarmSubSecondConfig,"ax",%progbits
 2811              		.align	2
 2812              		.global	RTC_AlarmSubSecondConfig
 2813              		.thumb
 2814              		.thumb_func
 2816              	RTC_AlarmSubSecondConfig:
 2817              	.LFB130:
1331:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1332:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1333:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configure the RTC AlarmA/B Subseconds value and mask.*
1334:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   This function is performed only when the Alarm is disabled. 
1335:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Alarm: specifies the alarm to be configured.
1336:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
1337:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_Alarm_A: to select Alarm A
1338:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_Alarm_B: to select Alarm B
1339:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_AlarmSubSecondValue: specifies the Subseconds value.
1340:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be a value from 0 to 0x00007FFF.
1341:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_AlarmSubSecondMask:  specifies the Subseconds Mask.
1342:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be any combination of the following values:
1343:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_All    : All Alarm SS fields are masked.
1344:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          There is no comparison on sub seconds for Alarm.
1345:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_1 : SS[14:1] are don't care in Alarm comparison.
1346:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[0] is compared
1347:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_2 : SS[14:2] are don't care in Alarm comparison.
1348:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[1:0] are compared
1349:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_3 : SS[14:3] are don't care in Alarm comparison.
1350:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[2:0] are compared
1351:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_4 : SS[14:4] are don't care in Alarm comparison.
1352:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[3:0] are compared
1353:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_5 : SS[14:5] are don't care in Alarm comparison.
1354:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[4:0] are compared
1355:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_6 : SS[14:6] are don't care in Alarm comparison.
1356:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[5:0] are compared
1357:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_7 : SS[14:7] are don't care in Alarm comparison.
1358:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[6:0] are compared
1359:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_8 : SS[14:8] are don't care in Alarm comparison.
1360:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[7:0] are compared
1361:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_9 : SS[14:9] are don't care in Alarm comparison.
1362:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[8:0] are compared
1363:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_10: SS[14:10] are don't care in Alarm comparison.
1364:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[9:0] are compared
1365:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_11: SS[14:11] are don't care in Alarm comparison.
1366:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[10:0] are compared
1367:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_12: SS[14:12] are don't care in Alarm comparison.
1368:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[11:0] are compared
1369:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_13: SS[14:13] are don't care in Alarm comparison.
1370:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[12:0] are compared
1371:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14   : SS[14] is don't care in Alarm comparison.
1372:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[13:0] are compared
1373:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_None   : SS[14:0] are compared and must match
1374:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          to activate alarm
1375:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1376:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1377:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_AlarmSubSecondConfig(uint32_t RTC_Alarm, uint32_t RTC_AlarmSubSecondValue, uint32_t RTC_Al
1378:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 2818              		.loc 1 1378 0
 2819              		.cfi_startproc
 2820              		@ args = 0, pretend = 0, frame = 24
 2821              		@ frame_needed = 1, uses_anonymous_args = 0
 2822 0000 80B5     		push	{r7, lr}
 2823              	.LCFI59:
 2824              		.cfi_def_cfa_offset 8
 2825              		.cfi_offset 7, -8
 2826              		.cfi_offset 14, -4
 2827 0002 86B0     		sub	sp, sp, #24
 2828              	.LCFI60:
 2829              		.cfi_def_cfa_offset 32
 2830 0004 00AF     		add	r7, sp, #0
 2831              	.LCFI61:
 2832              		.cfi_def_cfa_register 7
 2833 0006 F860     		str	r0, [r7, #12]
 2834 0008 B960     		str	r1, [r7, #8]
 2835 000a 7A60     		str	r2, [r7, #4]
1379:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 2836              		.loc 1 1379 0
 2837 000c 0023     		movs	r3, #0
 2838 000e 7B61     		str	r3, [r7, #20]
1380:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1381:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1382:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM(RTC_Alarm));
 2839              		.loc 1 1382 0
 2840 0010 FB68     		ldr	r3, [r7, #12]
 2841 0012 B3F5807F 		cmp	r3, #256
 2842 0016 0BD0     		beq	.L144
 2843              		.loc 1 1382 0 is_stmt 0 discriminator 1
 2844 0018 FB68     		ldr	r3, [r7, #12]
 2845 001a B3F5007F 		cmp	r3, #512
 2846 001e 07D0     		beq	.L144
 2847 0020 40F20000 		movw	r0, #:lower16:.LC0
 2848 0024 C0F20000 		movt	r0, #:upper16:.LC0
 2849 0028 40F26651 		movw	r1, #1382
 2850 002c FFF7FEFF 		bl	assert_failed
 2851              	.L144:
1383:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(RTC_AlarmSubSecondValue));
 2852              		.loc 1 1383 0 is_stmt 1
 2853 0030 BB68     		ldr	r3, [r7, #8]
 2854 0032 B3F5004F 		cmp	r3, #32768
 2855 0036 07D3     		bcc	.L145
 2856              		.loc 1 1383 0 is_stmt 0 discriminator 1
 2857 0038 40F20000 		movw	r0, #:lower16:.LC0
 2858 003c C0F20000 		movt	r0, #:upper16:.LC0
 2859 0040 40F26751 		movw	r1, #1383
 2860 0044 FFF7FEFF 		bl	assert_failed
 2861              	.L145:
1384:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(RTC_AlarmSubSecondMask));
 2862              		.loc 1 1384 0 is_stmt 1
 2863 0048 7B68     		ldr	r3, [r7, #4]
 2864 004a 002B     		cmp	r3, #0
 2865 004c 43D0     		beq	.L146
 2866              		.loc 1 1384 0 is_stmt 0 discriminator 1
 2867 004e 7B68     		ldr	r3, [r7, #4]
 2868 0050 B3F1807F 		cmp	r3, #16777216
 2869 0054 3FD0     		beq	.L146
 2870 0056 7B68     		ldr	r3, [r7, #4]
 2871 0058 B3F1007F 		cmp	r3, #33554432
 2872 005c 3BD0     		beq	.L146
 2873 005e 7B68     		ldr	r3, [r7, #4]
 2874 0060 B3F1407F 		cmp	r3, #50331648
 2875 0064 37D0     		beq	.L146
 2876 0066 7B68     		ldr	r3, [r7, #4]
 2877 0068 B3F1806F 		cmp	r3, #67108864
 2878 006c 33D0     		beq	.L146
 2879 006e 7B68     		ldr	r3, [r7, #4]
 2880 0070 B3F1A06F 		cmp	r3, #83886080
 2881 0074 2FD0     		beq	.L146
 2882 0076 7B68     		ldr	r3, [r7, #4]
 2883 0078 B3F1C06F 		cmp	r3, #100663296
 2884 007c 2BD0     		beq	.L146
 2885 007e 7B68     		ldr	r3, [r7, #4]
 2886 0080 B3F1E06F 		cmp	r3, #117440512
 2887 0084 27D0     		beq	.L146
 2888 0086 7B68     		ldr	r3, [r7, #4]
 2889 0088 B3F1006F 		cmp	r3, #134217728
 2890 008c 23D0     		beq	.L146
 2891 008e 7B68     		ldr	r3, [r7, #4]
 2892 0090 B3F1106F 		cmp	r3, #150994944
 2893 0094 1FD0     		beq	.L146
 2894 0096 7B68     		ldr	r3, [r7, #4]
 2895 0098 B3F1206F 		cmp	r3, #167772160
 2896 009c 1BD0     		beq	.L146
 2897 009e 7B68     		ldr	r3, [r7, #4]
 2898 00a0 B3F1306F 		cmp	r3, #184549376
 2899 00a4 17D0     		beq	.L146
 2900 00a6 7B68     		ldr	r3, [r7, #4]
 2901 00a8 B3F1406F 		cmp	r3, #201326592
 2902 00ac 13D0     		beq	.L146
 2903 00ae 7B68     		ldr	r3, [r7, #4]
 2904 00b0 B3F1506F 		cmp	r3, #218103808
 2905 00b4 0FD0     		beq	.L146
 2906 00b6 7B68     		ldr	r3, [r7, #4]
 2907 00b8 B3F1606F 		cmp	r3, #234881024
 2908 00bc 0BD0     		beq	.L146
 2909 00be 7B68     		ldr	r3, [r7, #4]
 2910 00c0 B3F1706F 		cmp	r3, #251658240
 2911 00c4 07D0     		beq	.L146
 2912 00c6 40F20000 		movw	r0, #:lower16:.LC0
 2913 00ca C0F20000 		movt	r0, #:upper16:.LC0
 2914 00ce 4FF4AD61 		mov	r1, #1384
 2915 00d2 FFF7FEFF 		bl	assert_failed
 2916              	.L146:
1385:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1386:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1387:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 2917              		.loc 1 1387 0 is_stmt 1
 2918 00d6 4FF42053 		mov	r3, #10240
 2919 00da C4F20003 		movt	r3, 16384
 2920 00de CA22     		movs	r2, #202
 2921 00e0 5A62     		str	r2, [r3, #36]
1388:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2922              		.loc 1 1388 0
 2923 00e2 4FF42053 		mov	r3, #10240
 2924 00e6 C4F20003 		movt	r3, 16384
 2925 00ea 5322     		movs	r2, #83
 2926 00ec 5A62     		str	r2, [r3, #36]
1389:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1390:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the Alarm A or Alarm B SubSecond registers */
1391:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t) (uint32_t)(RTC_AlarmSubSecondValue) | (uint32_t)(RTC_AlarmSubSecondMask);
 2927              		.loc 1 1391 0
 2928 00ee BA68     		ldr	r2, [r7, #8]
 2929 00f0 7B68     		ldr	r3, [r7, #4]
 2930 00f2 1343     		orrs	r3, r3, r2
 2931 00f4 7B61     		str	r3, [r7, #20]
1392:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1393:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Alarm == RTC_Alarm_A)
 2932              		.loc 1 1393 0
 2933 00f6 FB68     		ldr	r3, [r7, #12]
 2934 00f8 B3F5807F 		cmp	r3, #256
 2935 00fc 06D1     		bne	.L147
1394:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1395:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the AlarmA SubSecond register */
1396:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->ALRMASSR = tmpreg;
 2936              		.loc 1 1396 0
 2937 00fe 4FF42053 		mov	r3, #10240
 2938 0102 C4F20003 		movt	r3, 16384
 2939 0106 7A69     		ldr	r2, [r7, #20]
 2940 0108 5A64     		str	r2, [r3, #68]
 2941 010a 05E0     		b	.L148
 2942              	.L147:
1397:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1398:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1399:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1400:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the Alarm B SubSecond register */
1401:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->ALRMBSSR = tmpreg;
 2943              		.loc 1 1401 0
 2944 010c 4FF42053 		mov	r3, #10240
 2945 0110 C4F20003 		movt	r3, 16384
 2946 0114 7A69     		ldr	r2, [r7, #20]
 2947 0116 9A64     		str	r2, [r3, #72]
 2948              	.L148:
1402:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1403:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1404:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1405:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;
 2949              		.loc 1 1405 0
 2950 0118 4FF42053 		mov	r3, #10240
 2951 011c C4F20003 		movt	r3, 16384
 2952 0120 FF22     		movs	r2, #255
 2953 0122 5A62     		str	r2, [r3, #36]
1406:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1407:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2954              		.loc 1 1407 0
 2955 0124 1837     		adds	r7, r7, #24
 2956 0126 BD46     		mov	sp, r7
 2957              		@ sp needed
 2958 0128 80BD     		pop	{r7, pc}
 2959              		.cfi_endproc
 2960              	.LFE130:
 2962 012a 00BF     		.section	.text.RTC_GetAlarmSubSecond,"ax",%progbits
 2963              		.align	2
 2964              		.global	RTC_GetAlarmSubSecond
 2965              		.thumb
 2966              		.thumb_func
 2968              	RTC_GetAlarmSubSecond:
 2969              	.LFB131:
1408:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1409:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1410:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Gets the RTC Alarm Subseconds value.
1411:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Alarm: specifies the alarm to be read.
1412:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
1413:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_Alarm_A: to select Alarm A
1414:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_Alarm_B: to select Alarm B
1415:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
1416:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval RTC Alarm Subseconds value.
1417:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1418:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** uint32_t RTC_GetAlarmSubSecond(uint32_t RTC_Alarm)
1419:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 2970              		.loc 1 1419 0
 2971              		.cfi_startproc
 2972              		@ args = 0, pretend = 0, frame = 16
 2973              		@ frame_needed = 1, uses_anonymous_args = 0
 2974              		@ link register save eliminated.
 2975 0000 80B4     		push	{r7}
 2976              	.LCFI62:
 2977              		.cfi_def_cfa_offset 4
 2978              		.cfi_offset 7, -4
 2979 0002 85B0     		sub	sp, sp, #20
 2980              	.LCFI63:
 2981              		.cfi_def_cfa_offset 24
 2982 0004 00AF     		add	r7, sp, #0
 2983              	.LCFI64:
 2984              		.cfi_def_cfa_register 7
 2985 0006 7860     		str	r0, [r7, #4]
1420:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 2986              		.loc 1 1420 0
 2987 0008 0023     		movs	r3, #0
 2988 000a FB60     		str	r3, [r7, #12]
1421:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1422:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the RTC_ALRMxR register */
1423:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Alarm == RTC_Alarm_A)
 2989              		.loc 1 1423 0
 2990 000c 7B68     		ldr	r3, [r7, #4]
 2991 000e B3F5807F 		cmp	r3, #256
 2992 0012 08D1     		bne	.L150
1424:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1425:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (uint32_t)((RTC->ALRMASSR) & RTC_ALRMASSR_SS);
 2993              		.loc 1 1425 0
 2994 0014 4FF42053 		mov	r3, #10240
 2995 0018 C4F20003 		movt	r3, 16384
 2996 001c 5B6C     		ldr	r3, [r3, #68]
 2997 001e C3F30E03 		ubfx	r3, r3, #0, #15
 2998 0022 FB60     		str	r3, [r7, #12]
 2999 0024 07E0     		b	.L151
 3000              	.L150:
1426:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1427:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1428:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1429:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (uint32_t)((RTC->ALRMBSSR) & RTC_ALRMBSSR_SS);
 3001              		.loc 1 1429 0
 3002 0026 4FF42053 		mov	r3, #10240
 3003 002a C4F20003 		movt	r3, 16384
 3004 002e 9B6C     		ldr	r3, [r3, #72]
 3005 0030 C3F30E03 		ubfx	r3, r3, #0, #15
 3006 0034 FB60     		str	r3, [r7, #12]
 3007              	.L151:
1430:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
1431:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1432:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (tmpreg);
 3008              		.loc 1 1432 0
 3009 0036 FB68     		ldr	r3, [r7, #12]
1433:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3010              		.loc 1 1433 0
 3011 0038 1846     		mov	r0, r3
 3012 003a 1437     		adds	r7, r7, #20
 3013 003c BD46     		mov	sp, r7
 3014              		@ sp needed
 3015 003e 5DF8047B 		ldr	r7, [sp], #4
 3016 0042 7047     		bx	lr
 3017              		.cfi_endproc
 3018              	.LFE131:
 3020              		.section	.text.RTC_WakeUpClockConfig,"ax",%progbits
 3021              		.align	2
 3022              		.global	RTC_WakeUpClockConfig
 3023              		.thumb
 3024              		.thumb_func
 3026              	RTC_WakeUpClockConfig:
 3027              	.LFB132:
1434:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1435:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1436:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
1437:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1438:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1439:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group4 WakeUp Timer configuration functions
1440:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   WakeUp Timer configuration functions 
1441:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
1442:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
1443:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
1444:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                      WakeUp Timer configuration functions
1445:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
1446:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1447:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   This section provide functions allowing to program and read the RTC WakeUp.
1448:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1449:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
1450:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
1451:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1452:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1453:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1454:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the RTC Wakeup clock source.
1455:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The WakeUp Clock source can only be changed when the RTC WakeUp
1456:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         is disabled (Use the RTC_WakeUpCmd(DISABLE)).      
1457:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_WakeUpClock: Wakeup Clock source.
1458:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1459:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_WakeUpClock_RTCCLK_Div16: RTC Wakeup Counter Clock = RTCCLK/16
1460:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_WakeUpClock_RTCCLK_Div8: RTC Wakeup Counter Clock = RTCCLK/8
1461:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_WakeUpClock_RTCCLK_Div4: RTC Wakeup Counter Clock = RTCCLK/4
1462:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_WakeUpClock_RTCCLK_Div2: RTC Wakeup Counter Clock = RTCCLK/2
1463:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_WakeUpClock_CK_SPRE_16bits: RTC Wakeup Counter Clock = CK_SPRE
1464:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_WakeUpClock_CK_SPRE_17bits: RTC Wakeup Counter Clock = CK_SPRE
1465:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1466:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1467:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_WakeUpClockConfig(uint32_t RTC_WakeUpClock)
1468:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3028              		.loc 1 1468 0
 3029              		.cfi_startproc
 3030              		@ args = 0, pretend = 0, frame = 8
 3031              		@ frame_needed = 1, uses_anonymous_args = 0
 3032 0000 80B5     		push	{r7, lr}
 3033              	.LCFI65:
 3034              		.cfi_def_cfa_offset 8
 3035              		.cfi_offset 7, -8
 3036              		.cfi_offset 14, -4
 3037 0002 82B0     		sub	sp, sp, #8
 3038              	.LCFI66:
 3039              		.cfi_def_cfa_offset 16
 3040 0004 00AF     		add	r7, sp, #0
 3041              	.LCFI67:
 3042              		.cfi_def_cfa_register 7
 3043 0006 7860     		str	r0, [r7, #4]
1469:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1470:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(RTC_WakeUpClock));
 3044              		.loc 1 1470 0
 3045 0008 7B68     		ldr	r3, [r7, #4]
 3046 000a 002B     		cmp	r3, #0
 3047 000c 16D0     		beq	.L154
 3048              		.loc 1 1470 0 is_stmt 0 discriminator 1
 3049 000e 7B68     		ldr	r3, [r7, #4]
 3050 0010 012B     		cmp	r3, #1
 3051 0012 13D0     		beq	.L154
 3052 0014 7B68     		ldr	r3, [r7, #4]
 3053 0016 022B     		cmp	r3, #2
 3054 0018 10D0     		beq	.L154
 3055 001a 7B68     		ldr	r3, [r7, #4]
 3056 001c 032B     		cmp	r3, #3
 3057 001e 0DD0     		beq	.L154
 3058 0020 7B68     		ldr	r3, [r7, #4]
 3059 0022 042B     		cmp	r3, #4
 3060 0024 0AD0     		beq	.L154
 3061 0026 7B68     		ldr	r3, [r7, #4]
 3062 0028 062B     		cmp	r3, #6
 3063 002a 07D0     		beq	.L154
 3064 002c 40F20000 		movw	r0, #:lower16:.LC0
 3065 0030 C0F20000 		movt	r0, #:upper16:.LC0
 3066 0034 40F2BE51 		movw	r1, #1470
 3067 0038 FFF7FEFF 		bl	assert_failed
 3068              	.L154:
1471:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1472:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1473:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 3069              		.loc 1 1473 0 is_stmt 1
 3070 003c 4FF42053 		mov	r3, #10240
 3071 0040 C4F20003 		movt	r3, 16384
 3072 0044 CA22     		movs	r2, #202
 3073 0046 5A62     		str	r2, [r3, #36]
1474:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 3074              		.loc 1 1474 0
 3075 0048 4FF42053 		mov	r3, #10240
 3076 004c C4F20003 		movt	r3, 16384
 3077 0050 5322     		movs	r2, #83
 3078 0052 5A62     		str	r2, [r3, #36]
1475:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1476:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear the Wakeup Timer clock source bits in CR register */
1477:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR &= (uint32_t)~RTC_CR_WUCKSEL;
 3079              		.loc 1 1477 0
 3080 0054 4FF42053 		mov	r3, #10240
 3081 0058 C4F20003 		movt	r3, 16384
 3082 005c 4FF42052 		mov	r2, #10240
 3083 0060 C4F20002 		movt	r2, 16384
 3084 0064 9268     		ldr	r2, [r2, #8]
 3085 0066 22F00702 		bic	r2, r2, #7
 3086 006a 9A60     		str	r2, [r3, #8]
1478:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1479:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the clock source */
1480:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR |= (uint32_t)RTC_WakeUpClock;
 3087              		.loc 1 1480 0
 3088 006c 4FF42053 		mov	r3, #10240
 3089 0070 C4F20003 		movt	r3, 16384
 3090 0074 4FF42052 		mov	r2, #10240
 3091 0078 C4F20002 		movt	r2, 16384
 3092 007c 9168     		ldr	r1, [r2, #8]
 3093 007e 7A68     		ldr	r2, [r7, #4]
 3094 0080 0A43     		orrs	r2, r2, r1
 3095 0082 9A60     		str	r2, [r3, #8]
1481:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1482:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1483:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 3096              		.loc 1 1483 0
 3097 0084 4FF42053 		mov	r3, #10240
 3098 0088 C4F20003 		movt	r3, 16384
 3099 008c FF22     		movs	r2, #255
 3100 008e 5A62     		str	r2, [r3, #36]
1484:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3101              		.loc 1 1484 0
 3102 0090 0837     		adds	r7, r7, #8
 3103 0092 BD46     		mov	sp, r7
 3104              		@ sp needed
 3105 0094 80BD     		pop	{r7, pc}
 3106              		.cfi_endproc
 3107              	.LFE132:
 3109 0096 00BF     		.section	.text.RTC_SetWakeUpCounter,"ax",%progbits
 3110              		.align	2
 3111              		.global	RTC_SetWakeUpCounter
 3112              		.thumb
 3113              		.thumb_func
 3115              	RTC_SetWakeUpCounter:
 3116              	.LFB133:
1485:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1486:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1487:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the RTC Wakeup counter.
1488:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The RTC WakeUp counter can only be written when the RTC WakeUp
1489:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         is disabled (Use the RTC_WakeUpCmd(DISABLE)).        
1490:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_WakeUpCounter: specifies the WakeUp counter.
1491:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be a value from 0x0000 to 0xFFFF. 
1492:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1493:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1494:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_SetWakeUpCounter(uint32_t RTC_WakeUpCounter)
1495:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3117              		.loc 1 1495 0
 3118              		.cfi_startproc
 3119              		@ args = 0, pretend = 0, frame = 8
 3120              		@ frame_needed = 1, uses_anonymous_args = 0
 3121 0000 80B5     		push	{r7, lr}
 3122              	.LCFI68:
 3123              		.cfi_def_cfa_offset 8
 3124              		.cfi_offset 7, -8
 3125              		.cfi_offset 14, -4
 3126 0002 82B0     		sub	sp, sp, #8
 3127              	.LCFI69:
 3128              		.cfi_def_cfa_offset 16
 3129 0004 00AF     		add	r7, sp, #0
 3130              	.LCFI70:
 3131              		.cfi_def_cfa_register 7
 3132 0006 7860     		str	r0, [r7, #4]
1496:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1497:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(RTC_WakeUpCounter));
 3133              		.loc 1 1497 0
 3134 0008 7B68     		ldr	r3, [r7, #4]
 3135 000a B3F5803F 		cmp	r3, #65536
 3136 000e 07D3     		bcc	.L156
 3137              		.loc 1 1497 0 is_stmt 0 discriminator 1
 3138 0010 40F20000 		movw	r0, #:lower16:.LC0
 3139 0014 C0F20000 		movt	r0, #:upper16:.LC0
 3140 0018 40F2D951 		movw	r1, #1497
 3141 001c FFF7FEFF 		bl	assert_failed
 3142              	.L156:
1498:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1499:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1500:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 3143              		.loc 1 1500 0 is_stmt 1
 3144 0020 4FF42053 		mov	r3, #10240
 3145 0024 C4F20003 		movt	r3, 16384
 3146 0028 CA22     		movs	r2, #202
 3147 002a 5A62     		str	r2, [r3, #36]
1501:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 3148              		.loc 1 1501 0
 3149 002c 4FF42053 		mov	r3, #10240
 3150 0030 C4F20003 		movt	r3, 16384
 3151 0034 5322     		movs	r2, #83
 3152 0036 5A62     		str	r2, [r3, #36]
1502:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1503:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the Wakeup Timer counter */
1504:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WUTR = (uint32_t)RTC_WakeUpCounter;
 3153              		.loc 1 1504 0
 3154 0038 4FF42053 		mov	r3, #10240
 3155 003c C4F20003 		movt	r3, 16384
 3156 0040 7A68     		ldr	r2, [r7, #4]
 3157 0042 5A61     		str	r2, [r3, #20]
1505:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1506:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1507:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 3158              		.loc 1 1507 0
 3159 0044 4FF42053 		mov	r3, #10240
 3160 0048 C4F20003 		movt	r3, 16384
 3161 004c FF22     		movs	r2, #255
 3162 004e 5A62     		str	r2, [r3, #36]
1508:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3163              		.loc 1 1508 0
 3164 0050 0837     		adds	r7, r7, #8
 3165 0052 BD46     		mov	sp, r7
 3166              		@ sp needed
 3167 0054 80BD     		pop	{r7, pc}
 3168              		.cfi_endproc
 3169              	.LFE133:
 3171 0056 00BF     		.section	.text.RTC_GetWakeUpCounter,"ax",%progbits
 3172              		.align	2
 3173              		.global	RTC_GetWakeUpCounter
 3174              		.thumb
 3175              		.thumb_func
 3177              	RTC_GetWakeUpCounter:
 3178              	.LFB134:
1509:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1510:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1511:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Returns the RTC WakeUp timer counter value.
1512:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
1513:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval The RTC WakeUp Counter value.
1514:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1515:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** uint32_t RTC_GetWakeUpCounter(void)
1516:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3179              		.loc 1 1516 0
 3180              		.cfi_startproc
 3181              		@ args = 0, pretend = 0, frame = 0
 3182              		@ frame_needed = 1, uses_anonymous_args = 0
 3183              		@ link register save eliminated.
 3184 0000 80B4     		push	{r7}
 3185              	.LCFI71:
 3186              		.cfi_def_cfa_offset 4
 3187              		.cfi_offset 7, -4
 3188 0002 00AF     		add	r7, sp, #0
 3189              	.LCFI72:
 3190              		.cfi_def_cfa_register 7
1517:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the counter value */
1518:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return ((uint32_t)(RTC->WUTR & RTC_WUTR_WUT));
 3191              		.loc 1 1518 0
 3192 0004 4FF42053 		mov	r3, #10240
 3193 0008 C4F20003 		movt	r3, 16384
 3194 000c 5B69     		ldr	r3, [r3, #20]
 3195 000e 9BB2     		uxth	r3, r3
1519:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3196              		.loc 1 1519 0
 3197 0010 1846     		mov	r0, r3
 3198 0012 BD46     		mov	sp, r7
 3199              		@ sp needed
 3200 0014 5DF8047B 		ldr	r7, [sp], #4
 3201 0018 7047     		bx	lr
 3202              		.cfi_endproc
 3203              	.LFE134:
 3205 001a 00BF     		.section	.text.RTC_WakeUpCmd,"ax",%progbits
 3206              		.align	2
 3207              		.global	RTC_WakeUpCmd
 3208              		.thumb
 3209              		.thumb_func
 3211              	RTC_WakeUpCmd:
 3212              	.LFB135:
1520:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1521:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1522:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or Disables the RTC WakeUp timer.
1523:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the WakeUp timer.
1524:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1525:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1526:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1527:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_WakeUpCmd(FunctionalState NewState)
1528:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3213              		.loc 1 1528 0
 3214              		.cfi_startproc
 3215              		@ args = 0, pretend = 0, frame = 24
 3216              		@ frame_needed = 1, uses_anonymous_args = 0
 3217 0000 80B5     		push	{r7, lr}
 3218              	.LCFI73:
 3219              		.cfi_def_cfa_offset 8
 3220              		.cfi_offset 7, -8
 3221              		.cfi_offset 14, -4
 3222 0002 86B0     		sub	sp, sp, #24
 3223              	.LCFI74:
 3224              		.cfi_def_cfa_offset 32
 3225 0004 00AF     		add	r7, sp, #0
 3226              	.LCFI75:
 3227              		.cfi_def_cfa_register 7
 3228 0006 0346     		mov	r3, r0
 3229 0008 FB71     		strb	r3, [r7, #7]
1529:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t wutcounter = 0x00;
 3230              		.loc 1 1529 0
 3231 000a 0023     		movs	r3, #0
 3232 000c FB60     		str	r3, [r7, #12]
1530:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t wutwfstatus = 0x00;
 3233              		.loc 1 1530 0
 3234 000e 0023     		movs	r3, #0
 3235 0010 3B61     		str	r3, [r7, #16]
1531:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 3236              		.loc 1 1531 0
 3237 0012 0023     		movs	r3, #0
 3238 0014 FB75     		strb	r3, [r7, #23]
1532:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1533:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1534:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 3239              		.loc 1 1534 0
 3240 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3241 0018 002B     		cmp	r3, #0
 3242 001a 0AD0     		beq	.L160
 3243              		.loc 1 1534 0 is_stmt 0 discriminator 1
 3244 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3245 001e 012B     		cmp	r3, #1
 3246 0020 07D0     		beq	.L160
 3247 0022 40F20000 		movw	r0, #:lower16:.LC0
 3248 0026 C0F20000 		movt	r0, #:upper16:.LC0
 3249 002a 40F2FE51 		movw	r1, #1534
 3250 002e FFF7FEFF 		bl	assert_failed
 3251              	.L160:
1535:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1536:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1537:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 3252              		.loc 1 1537 0 is_stmt 1
 3253 0032 4FF42053 		mov	r3, #10240
 3254 0036 C4F20003 		movt	r3, 16384
 3255 003a CA22     		movs	r2, #202
 3256 003c 5A62     		str	r2, [r3, #36]
1538:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 3257              		.loc 1 1538 0
 3258 003e 4FF42053 		mov	r3, #10240
 3259 0042 C4F20003 		movt	r3, 16384
 3260 0046 5322     		movs	r2, #83
 3261 0048 5A62     		str	r2, [r3, #36]
1539:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1540:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
 3262              		.loc 1 1540 0
 3263 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3264 004c 002B     		cmp	r3, #0
 3265 004e 0ED0     		beq	.L161
1541:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1542:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Enable the Wakeup Timer */
1543:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR |= (uint32_t)RTC_CR_WUTE;
 3266              		.loc 1 1543 0
 3267 0050 4FF42053 		mov	r3, #10240
 3268 0054 C4F20003 		movt	r3, 16384
 3269 0058 4FF42052 		mov	r2, #10240
 3270 005c C4F20002 		movt	r2, 16384
 3271 0060 9268     		ldr	r2, [r2, #8]
 3272 0062 42F48062 		orr	r2, r2, #1024
 3273 0066 9A60     		str	r2, [r3, #8]
1544:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;    
 3274              		.loc 1 1544 0
 3275 0068 0123     		movs	r3, #1
 3276 006a FB75     		strb	r3, [r7, #23]
 3277 006c 2BE0     		b	.L162
 3278              	.L161:
1545:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1546:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1547:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1548:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Disable the Wakeup Timer */
1549:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR &= (uint32_t)~RTC_CR_WUTE;
 3279              		.loc 1 1549 0
 3280 006e 4FF42053 		mov	r3, #10240
 3281 0072 C4F20003 		movt	r3, 16384
 3282 0076 4FF42052 		mov	r2, #10240
 3283 007a C4F20002 		movt	r2, 16384
 3284 007e 9268     		ldr	r2, [r2, #8]
 3285 0080 22F48062 		bic	r2, r2, #1024
 3286 0084 9A60     		str	r2, [r3, #8]
 3287              	.L164:
1550:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
1551:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     do
1552:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1553:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       wutwfstatus = RTC->ISR & RTC_ISR_WUTWF;
 3288              		.loc 1 1553 0 discriminator 1
 3289 0086 4FF42053 		mov	r3, #10240
 3290 008a C4F20003 		movt	r3, 16384
 3291 008e DB68     		ldr	r3, [r3, #12]
 3292 0090 03F00403 		and	r3, r3, #4
 3293 0094 3B61     		str	r3, [r7, #16]
1554:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       wutcounter++;  
 3294              		.loc 1 1554 0 discriminator 1
 3295 0096 FB68     		ldr	r3, [r7, #12]
 3296 0098 0133     		adds	r3, r3, #1
 3297 009a FB60     		str	r3, [r7, #12]
1555:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } while((wutcounter != INITMODE_TIMEOUT) && (wutwfstatus == 0x00));
 3298              		.loc 1 1555 0 discriminator 1
 3299 009c FB68     		ldr	r3, [r7, #12]
 3300 009e B3F5803F 		cmp	r3, #65536
 3301 00a2 02D0     		beq	.L163
 3302 00a4 3B69     		ldr	r3, [r7, #16]
 3303 00a6 002B     		cmp	r3, #0
 3304 00a8 EDD0     		beq	.L164
 3305              	.L163:
1556:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
1557:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->ISR & RTC_ISR_WUTWF) == RESET)
 3306              		.loc 1 1557 0
 3307 00aa 4FF42053 		mov	r3, #10240
 3308 00ae C4F20003 		movt	r3, 16384
 3309 00b2 DB68     		ldr	r3, [r3, #12]
 3310 00b4 03F00403 		and	r3, r3, #4
 3311 00b8 002B     		cmp	r3, #0
 3312 00ba 02D1     		bne	.L165
1558:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1559:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = ERROR;
 3313              		.loc 1 1559 0
 3314 00bc 0023     		movs	r3, #0
 3315 00be FB75     		strb	r3, [r7, #23]
 3316 00c0 01E0     		b	.L162
 3317              	.L165:
1560:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1561:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
1562:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1563:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = SUCCESS;
 3318              		.loc 1 1563 0
 3319 00c2 0123     		movs	r3, #1
 3320 00c4 FB75     		strb	r3, [r7, #23]
 3321              	.L162:
1564:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }    
1565:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1566:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1567:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1568:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 3322              		.loc 1 1568 0
 3323 00c6 4FF42053 		mov	r3, #10240
 3324 00ca C4F20003 		movt	r3, 16384
 3325 00ce FF22     		movs	r2, #255
 3326 00d0 5A62     		str	r2, [r3, #36]
1569:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1570:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status;
 3327              		.loc 1 1570 0
 3328 00d2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1571:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3329              		.loc 1 1571 0
 3330 00d4 1846     		mov	r0, r3
 3331 00d6 1837     		adds	r7, r7, #24
 3332 00d8 BD46     		mov	sp, r7
 3333              		@ sp needed
 3334 00da 80BD     		pop	{r7, pc}
 3335              		.cfi_endproc
 3336              	.LFE135:
 3338              		.section	.text.RTC_DayLightSavingConfig,"ax",%progbits
 3339              		.align	2
 3340              		.global	RTC_DayLightSavingConfig
 3341              		.thumb
 3342              		.thumb_func
 3344              	RTC_DayLightSavingConfig:
 3345              	.LFB136:
1572:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1573:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1574:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
1575:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1576:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1577:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group5 Daylight Saving configuration functions
1578:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Daylight Saving configuration functions 
1579:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
1580:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
1581:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
1582:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                     Daylight Saving configuration functions
1583:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
1584:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1585:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   This section provide functions allowing to configure the RTC DayLight Saving.
1586:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1587:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
1588:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
1589:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1590:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1591:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1592:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Adds or substract one hour from the current time.
1593:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_DayLightSaveOperation: the value of hour adjustment. 
1594:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1595:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_DayLightSaving_SUB1H: Substract one hour (winter time)
1596:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_DayLightSaving_ADD1H: Add one hour (summer time)
1597:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_StoreOperation: Specifies the value to be written in the BCK bit 
1598:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                            in CR register to store the operation.
1599:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1600:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_StoreOperation_Reset: BCK Bit Reset
1601:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_StoreOperation_Set: BCK Bit Set
1602:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1603:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1604:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_DayLightSavingConfig(uint32_t RTC_DayLightSaving, uint32_t RTC_StoreOperation)
1605:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3346              		.loc 1 1605 0
 3347              		.cfi_startproc
 3348              		@ args = 0, pretend = 0, frame = 8
 3349              		@ frame_needed = 1, uses_anonymous_args = 0
 3350 0000 80B5     		push	{r7, lr}
 3351              	.LCFI76:
 3352              		.cfi_def_cfa_offset 8
 3353              		.cfi_offset 7, -8
 3354              		.cfi_offset 14, -4
 3355 0002 82B0     		sub	sp, sp, #8
 3356              	.LCFI77:
 3357              		.cfi_def_cfa_offset 16
 3358 0004 00AF     		add	r7, sp, #0
 3359              	.LCFI78:
 3360              		.cfi_def_cfa_register 7
 3361 0006 7860     		str	r0, [r7, #4]
 3362 0008 3960     		str	r1, [r7]
1606:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1607:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_DAYLIGHT_SAVING(RTC_DayLightSaving));
 3363              		.loc 1 1607 0
 3364 000a 7B68     		ldr	r3, [r7, #4]
 3365 000c B3F5003F 		cmp	r3, #131072
 3366 0010 0BD0     		beq	.L168
 3367              		.loc 1 1607 0 is_stmt 0 discriminator 1
 3368 0012 7B68     		ldr	r3, [r7, #4]
 3369 0014 B3F5803F 		cmp	r3, #65536
 3370 0018 07D0     		beq	.L168
 3371 001a 40F20000 		movw	r0, #:lower16:.LC0
 3372 001e C0F20000 		movt	r0, #:upper16:.LC0
 3373 0022 40F24761 		movw	r1, #1607
 3374 0026 FFF7FEFF 		bl	assert_failed
 3375              	.L168:
1608:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_STORE_OPERATION(RTC_StoreOperation));
 3376              		.loc 1 1608 0 is_stmt 1
 3377 002a 3B68     		ldr	r3, [r7]
 3378 002c 002B     		cmp	r3, #0
 3379 002e 0BD0     		beq	.L169
 3380              		.loc 1 1608 0 is_stmt 0 discriminator 1
 3381 0030 3B68     		ldr	r3, [r7]
 3382 0032 B3F5802F 		cmp	r3, #262144
 3383 0036 07D0     		beq	.L169
 3384 0038 40F20000 		movw	r0, #:lower16:.LC0
 3385 003c C0F20000 		movt	r0, #:upper16:.LC0
 3386 0040 4FF4C961 		mov	r1, #1608
 3387 0044 FFF7FEFF 		bl	assert_failed
 3388              	.L169:
1609:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1610:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1611:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 3389              		.loc 1 1611 0 is_stmt 1
 3390 0048 4FF42053 		mov	r3, #10240
 3391 004c C4F20003 		movt	r3, 16384
 3392 0050 CA22     		movs	r2, #202
 3393 0052 5A62     		str	r2, [r3, #36]
1612:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 3394              		.loc 1 1612 0
 3395 0054 4FF42053 		mov	r3, #10240
 3396 0058 C4F20003 		movt	r3, 16384
 3397 005c 5322     		movs	r2, #83
 3398 005e 5A62     		str	r2, [r3, #36]
1613:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1614:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear the bits to be configured */
1615:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR &= (uint32_t)~(RTC_CR_BCK);
 3399              		.loc 1 1615 0
 3400 0060 4FF42053 		mov	r3, #10240
 3401 0064 C4F20003 		movt	r3, 16384
 3402 0068 4FF42052 		mov	r2, #10240
 3403 006c C4F20002 		movt	r2, 16384
 3404 0070 9268     		ldr	r2, [r2, #8]
 3405 0072 22F48022 		bic	r2, r2, #262144
 3406 0076 9A60     		str	r2, [r3, #8]
1616:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1617:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the RTC_CR register */
1618:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR |= (uint32_t)(RTC_DayLightSaving | RTC_StoreOperation);
 3407              		.loc 1 1618 0
 3408 0078 4FF42053 		mov	r3, #10240
 3409 007c C4F20003 		movt	r3, 16384
 3410 0080 4FF42052 		mov	r2, #10240
 3411 0084 C4F20002 		movt	r2, 16384
 3412 0088 9168     		ldr	r1, [r2, #8]
 3413 008a 7868     		ldr	r0, [r7, #4]
 3414 008c 3A68     		ldr	r2, [r7]
 3415 008e 0243     		orrs	r2, r2, r0
 3416 0090 0A43     		orrs	r2, r2, r1
 3417 0092 9A60     		str	r2, [r3, #8]
1619:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1620:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1621:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 3418              		.loc 1 1621 0
 3419 0094 4FF42053 		mov	r3, #10240
 3420 0098 C4F20003 		movt	r3, 16384
 3421 009c FF22     		movs	r2, #255
 3422 009e 5A62     		str	r2, [r3, #36]
1622:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3423              		.loc 1 1622 0
 3424 00a0 0837     		adds	r7, r7, #8
 3425 00a2 BD46     		mov	sp, r7
 3426              		@ sp needed
 3427 00a4 80BD     		pop	{r7, pc}
 3428              		.cfi_endproc
 3429              	.LFE136:
 3431 00a6 00BF     		.section	.text.RTC_GetStoreOperation,"ax",%progbits
 3432              		.align	2
 3433              		.global	RTC_GetStoreOperation
 3434              		.thumb
 3435              		.thumb_func
 3437              	RTC_GetStoreOperation:
 3438              	.LFB137:
1623:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1624:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1625:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Returns the RTC Day Light Saving stored operation.
1626:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
1627:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval RTC Day Light Saving stored operation.
1628:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - RTC_StoreOperation_Reset
1629:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - RTC_StoreOperation_Set       
1630:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1631:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** uint32_t RTC_GetStoreOperation(void)
1632:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3439              		.loc 1 1632 0
 3440              		.cfi_startproc
 3441              		@ args = 0, pretend = 0, frame = 0
 3442              		@ frame_needed = 1, uses_anonymous_args = 0
 3443              		@ link register save eliminated.
 3444 0000 80B4     		push	{r7}
 3445              	.LCFI79:
 3446              		.cfi_def_cfa_offset 4
 3447              		.cfi_offset 7, -4
 3448 0002 00AF     		add	r7, sp, #0
 3449              	.LCFI80:
 3450              		.cfi_def_cfa_register 7
1633:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (RTC->CR & RTC_CR_BCK);
 3451              		.loc 1 1633 0
 3452 0004 4FF42053 		mov	r3, #10240
 3453 0008 C4F20003 		movt	r3, 16384
 3454 000c 9B68     		ldr	r3, [r3, #8]
 3455 000e 03F48023 		and	r3, r3, #262144
1634:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3456              		.loc 1 1634 0
 3457 0012 1846     		mov	r0, r3
 3458 0014 BD46     		mov	sp, r7
 3459              		@ sp needed
 3460 0016 5DF8047B 		ldr	r7, [sp], #4
 3461 001a 7047     		bx	lr
 3462              		.cfi_endproc
 3463              	.LFE137:
 3465              		.section	.text.RTC_OutputConfig,"ax",%progbits
 3466              		.align	2
 3467              		.global	RTC_OutputConfig
 3468              		.thumb
 3469              		.thumb_func
 3471              	RTC_OutputConfig:
 3472              	.LFB138:
1635:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1636:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1637:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
1638:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1639:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1640:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group6 Output pin Configuration function
1641:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Output pin Configuration function 
1642:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
1643:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
1644:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
1645:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                          Output pin Configuration function
1646:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
1647:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1648:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   This section provide functions allowing to configure the RTC Output source.
1649:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1650:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
1651:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
1652:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1653:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1654:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1655:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the RTC output source (AFO_ALARM).
1656:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Output: Specifies which signal will be routed to the RTC output. 
1657:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1658:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Output_Disable: No output selected
1659:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Output_AlarmA: signal of AlarmA mapped to output
1660:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Output_AlarmB: signal of AlarmB mapped to output
1661:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Output_WakeUp: signal of WakeUp mapped to output
1662:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_OutputPolarity: Specifies the polarity of the output signal. 
1663:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following:
1664:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_OutputPolarity_High: The output pin is high when the 
1665:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                 ALRAF/ALRBF/WUTF is high (depending on OSEL)
1666:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_OutputPolarity_Low: The output pin is low when the 
1667:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                 ALRAF/ALRBF/WUTF is high (depending on OSEL)
1668:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1669:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1670:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_OutputConfig(uint32_t RTC_Output, uint32_t RTC_OutputPolarity)
1671:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3473              		.loc 1 1671 0
 3474              		.cfi_startproc
 3475              		@ args = 0, pretend = 0, frame = 8
 3476              		@ frame_needed = 1, uses_anonymous_args = 0
 3477 0000 80B5     		push	{r7, lr}
 3478              	.LCFI81:
 3479              		.cfi_def_cfa_offset 8
 3480              		.cfi_offset 7, -8
 3481              		.cfi_offset 14, -4
 3482 0002 82B0     		sub	sp, sp, #8
 3483              	.LCFI82:
 3484              		.cfi_def_cfa_offset 16
 3485 0004 00AF     		add	r7, sp, #0
 3486              	.LCFI83:
 3487              		.cfi_def_cfa_register 7
 3488 0006 7860     		str	r0, [r7, #4]
 3489 0008 3960     		str	r1, [r7]
1672:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1673:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_OUTPUT(RTC_Output));
 3490              		.loc 1 1673 0
 3491 000a 7B68     		ldr	r3, [r7, #4]
 3492 000c 002B     		cmp	r3, #0
 3493 000e 13D0     		beq	.L173
 3494              		.loc 1 1673 0 is_stmt 0 discriminator 1
 3495 0010 7B68     		ldr	r3, [r7, #4]
 3496 0012 B3F5001F 		cmp	r3, #2097152
 3497 0016 0FD0     		beq	.L173
 3498 0018 7B68     		ldr	r3, [r7, #4]
 3499 001a B3F5800F 		cmp	r3, #4194304
 3500 001e 0BD0     		beq	.L173
 3501 0020 7B68     		ldr	r3, [r7, #4]
 3502 0022 B3F5C00F 		cmp	r3, #6291456
 3503 0026 07D0     		beq	.L173
 3504 0028 40F20000 		movw	r0, #:lower16:.LC0
 3505 002c C0F20000 		movt	r0, #:upper16:.LC0
 3506 0030 40F28961 		movw	r1, #1673
 3507 0034 FFF7FEFF 		bl	assert_failed
 3508              	.L173:
1674:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_OUTPUT_POL(RTC_OutputPolarity));
 3509              		.loc 1 1674 0 is_stmt 1
 3510 0038 3B68     		ldr	r3, [r7]
 3511 003a 002B     		cmp	r3, #0
 3512 003c 0BD0     		beq	.L174
 3513              		.loc 1 1674 0 is_stmt 0 discriminator 1
 3514 003e 3B68     		ldr	r3, [r7]
 3515 0040 B3F5801F 		cmp	r3, #1048576
 3516 0044 07D0     		beq	.L174
 3517 0046 40F20000 		movw	r0, #:lower16:.LC0
 3518 004a C0F20000 		movt	r0, #:upper16:.LC0
 3519 004e 40F28A61 		movw	r1, #1674
 3520 0052 FFF7FEFF 		bl	assert_failed
 3521              	.L174:
1675:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1676:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1677:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 3522              		.loc 1 1677 0 is_stmt 1
 3523 0056 4FF42053 		mov	r3, #10240
 3524 005a C4F20003 		movt	r3, 16384
 3525 005e CA22     		movs	r2, #202
 3526 0060 5A62     		str	r2, [r3, #36]
1678:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 3527              		.loc 1 1678 0
 3528 0062 4FF42053 		mov	r3, #10240
 3529 0066 C4F20003 		movt	r3, 16384
 3530 006a 5322     		movs	r2, #83
 3531 006c 5A62     		str	r2, [r3, #36]
1679:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1680:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear the bits to be configured */
1681:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR &= (uint32_t)~(RTC_CR_OSEL | RTC_CR_POL);
 3532              		.loc 1 1681 0
 3533 006e 4FF42053 		mov	r3, #10240
 3534 0072 C4F20003 		movt	r3, 16384
 3535 0076 4FF42052 		mov	r2, #10240
 3536 007a C4F20002 		movt	r2, 16384
 3537 007e 9268     		ldr	r2, [r2, #8]
 3538 0080 22F4E002 		bic	r2, r2, #7340032
 3539 0084 9A60     		str	r2, [r3, #8]
1682:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1683:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the output selection and polarity */
1684:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR |= (uint32_t)(RTC_Output | RTC_OutputPolarity);
 3540              		.loc 1 1684 0
 3541 0086 4FF42053 		mov	r3, #10240
 3542 008a C4F20003 		movt	r3, 16384
 3543 008e 4FF42052 		mov	r2, #10240
 3544 0092 C4F20002 		movt	r2, 16384
 3545 0096 9168     		ldr	r1, [r2, #8]
 3546 0098 7868     		ldr	r0, [r7, #4]
 3547 009a 3A68     		ldr	r2, [r7]
 3548 009c 0243     		orrs	r2, r2, r0
 3549 009e 0A43     		orrs	r2, r2, r1
 3550 00a0 9A60     		str	r2, [r3, #8]
1685:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1686:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1687:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 3551              		.loc 1 1687 0
 3552 00a2 4FF42053 		mov	r3, #10240
 3553 00a6 C4F20003 		movt	r3, 16384
 3554 00aa FF22     		movs	r2, #255
 3555 00ac 5A62     		str	r2, [r3, #36]
1688:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3556              		.loc 1 1688 0
 3557 00ae 0837     		adds	r7, r7, #8
 3558 00b0 BD46     		mov	sp, r7
 3559              		@ sp needed
 3560 00b2 80BD     		pop	{r7, pc}
 3561              		.cfi_endproc
 3562              	.LFE138:
 3564              		.section	.text.RTC_CoarseCalibConfig,"ax",%progbits
 3565              		.align	2
 3566              		.global	RTC_CoarseCalibConfig
 3567              		.thumb
 3568              		.thumb_func
 3570              	RTC_CoarseCalibConfig:
 3571              	.LFB139:
1689:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1690:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1691:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
1692:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1693:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1694:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group7 Digital Calibration configuration functions
1695:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Coarse Calibration configuration functions 
1696:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
1697:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
1698:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
1699:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                   Digital Calibration configuration functions
1700:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
1701:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1702:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
1703:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
1704:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1705:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1706:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1707:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the Coarse calibration parameters.
1708:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_CalibSign: specifies the sign of the coarse calibration value.
1709:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be  one of the following values:
1710:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_CalibSign_Positive: The value sign is positive 
1711:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_CalibSign_Negative: The value sign is negative
1712:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  Value: value of coarse calibration expressed in ppm (coded on 5 bits).
1713:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *    
1714:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   This Calibration value should be between 0 and 63 when using negative
1715:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         sign with a 2-ppm step.
1716:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           
1717:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   This Calibration value should be between 0 and 126 when using positive
1718:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         sign with a 4-ppm step.
1719:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           
1720:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
1721:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Coarse calibration are initialized
1722:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC Coarse calibration are not initialized     
1723:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1724:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_CoarseCalibConfig(uint32_t RTC_CalibSign, uint32_t Value)
1725:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3572              		.loc 1 1725 0
 3573              		.cfi_startproc
 3574              		@ args = 0, pretend = 0, frame = 16
 3575              		@ frame_needed = 1, uses_anonymous_args = 0
 3576 0000 80B5     		push	{r7, lr}
 3577              	.LCFI84:
 3578              		.cfi_def_cfa_offset 8
 3579              		.cfi_offset 7, -8
 3580              		.cfi_offset 14, -4
 3581 0002 84B0     		sub	sp, sp, #16
 3582              	.LCFI85:
 3583              		.cfi_def_cfa_offset 24
 3584 0004 00AF     		add	r7, sp, #0
 3585              	.LCFI86:
 3586              		.cfi_def_cfa_register 7
 3587 0006 7860     		str	r0, [r7, #4]
 3588 0008 3960     		str	r1, [r7]
1726:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 3589              		.loc 1 1726 0
 3590 000a 0023     		movs	r3, #0
 3591 000c FB73     		strb	r3, [r7, #15]
1727:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    
1728:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1729:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CALIB_SIGN(RTC_CalibSign));
 3592              		.loc 1 1729 0
 3593 000e 7B68     		ldr	r3, [r7, #4]
 3594 0010 002B     		cmp	r3, #0
 3595 0012 0AD0     		beq	.L176
 3596              		.loc 1 1729 0 is_stmt 0 discriminator 1
 3597 0014 7B68     		ldr	r3, [r7, #4]
 3598 0016 802B     		cmp	r3, #128
 3599 0018 07D0     		beq	.L176
 3600 001a 40F20000 		movw	r0, #:lower16:.LC0
 3601 001e C0F20000 		movt	r0, #:upper16:.LC0
 3602 0022 40F2C161 		movw	r1, #1729
 3603 0026 FFF7FEFF 		bl	assert_failed
 3604              	.L176:
1730:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CALIB_VALUE(Value)); 
 3605              		.loc 1 1730 0 is_stmt 1
 3606 002a 3B68     		ldr	r3, [r7]
 3607 002c 1F2B     		cmp	r3, #31
 3608 002e 07D9     		bls	.L177
 3609              		.loc 1 1730 0 is_stmt 0 discriminator 1
 3610 0030 40F20000 		movw	r0, #:lower16:.LC0
 3611 0034 C0F20000 		movt	r0, #:upper16:.LC0
 3612 0038 40F2C261 		movw	r1, #1730
 3613 003c FFF7FEFF 		bl	assert_failed
 3614              	.L177:
1731:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1732:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1733:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 3615              		.loc 1 1733 0 is_stmt 1
 3616 0040 4FF42053 		mov	r3, #10240
 3617 0044 C4F20003 		movt	r3, 16384
 3618 0048 CA22     		movs	r2, #202
 3619 004a 5A62     		str	r2, [r3, #36]
1734:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 3620              		.loc 1 1734 0
 3621 004c 4FF42053 		mov	r3, #10240
 3622 0050 C4F20003 		movt	r3, 16384
 3623 0054 5322     		movs	r2, #83
 3624 0056 5A62     		str	r2, [r3, #36]
1735:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1736:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Set Initialization mode */
1737:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 3625              		.loc 1 1737 0
 3626 0058 FFF7FEFF 		bl	RTC_EnterInitMode
 3627 005c 0346     		mov	r3, r0
 3628 005e 002B     		cmp	r3, #0
 3629 0060 02D1     		bne	.L178
1738:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1739:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
 3630              		.loc 1 1739 0
 3631 0062 0023     		movs	r3, #0
 3632 0064 FB73     		strb	r3, [r7, #15]
 3633 0066 0BE0     		b	.L179
 3634              	.L178:
1740:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
1741:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1742:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1743:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Set the coarse calibration value */
1744:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CALIBR = (uint32_t)(RTC_CalibSign | Value);
 3635              		.loc 1 1744 0
 3636 0068 4FF42053 		mov	r3, #10240
 3637 006c C4F20003 		movt	r3, 16384
 3638 0070 7968     		ldr	r1, [r7, #4]
 3639 0072 3A68     		ldr	r2, [r7]
 3640 0074 0A43     		orrs	r2, r2, r1
 3641 0076 9A61     		str	r2, [r3, #24]
1745:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
1746:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_ExitInitMode();
 3642              		.loc 1 1746 0
 3643 0078 FFF7FEFF 		bl	RTC_ExitInitMode
1747:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
1748:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;
 3644              		.loc 1 1748 0
 3645 007c 0123     		movs	r3, #1
 3646 007e FB73     		strb	r3, [r7, #15]
 3647              	.L179:
1749:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
1750:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1751:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1752:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 3648              		.loc 1 1752 0
 3649 0080 4FF42053 		mov	r3, #10240
 3650 0084 C4F20003 		movt	r3, 16384
 3651 0088 FF22     		movs	r2, #255
 3652 008a 5A62     		str	r2, [r3, #36]
1753:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1754:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status;
 3653              		.loc 1 1754 0
 3654 008c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1755:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3655              		.loc 1 1755 0
 3656 008e 1846     		mov	r0, r3
 3657 0090 1037     		adds	r7, r7, #16
 3658 0092 BD46     		mov	sp, r7
 3659              		@ sp needed
 3660 0094 80BD     		pop	{r7, pc}
 3661              		.cfi_endproc
 3662              	.LFE139:
 3664 0096 00BF     		.section	.text.RTC_CoarseCalibCmd,"ax",%progbits
 3665              		.align	2
 3666              		.global	RTC_CoarseCalibCmd
 3667              		.thumb
 3668              		.thumb_func
 3670              	RTC_CoarseCalibCmd:
 3671              	.LFB140:
1756:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1757:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1758:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or disables the Coarse calibration process.
1759:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the Coarse calibration.
1760:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1761:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
1762:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Coarse calibration are enabled/disabled
1763:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC Coarse calibration are not enabled/disabled    
1764:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1765:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_CoarseCalibCmd(FunctionalState NewState)
1766:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3672              		.loc 1 1766 0
 3673              		.cfi_startproc
 3674              		@ args = 0, pretend = 0, frame = 16
 3675              		@ frame_needed = 1, uses_anonymous_args = 0
 3676 0000 80B5     		push	{r7, lr}
 3677              	.LCFI87:
 3678              		.cfi_def_cfa_offset 8
 3679              		.cfi_offset 7, -8
 3680              		.cfi_offset 14, -4
 3681 0002 84B0     		sub	sp, sp, #16
 3682              	.LCFI88:
 3683              		.cfi_def_cfa_offset 24
 3684 0004 00AF     		add	r7, sp, #0
 3685              	.LCFI89:
 3686              		.cfi_def_cfa_register 7
 3687 0006 0346     		mov	r3, r0
 3688 0008 FB71     		strb	r3, [r7, #7]
1767:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 3689              		.loc 1 1767 0
 3690 000a 0023     		movs	r3, #0
 3691 000c FB73     		strb	r3, [r7, #15]
1768:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1769:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1770:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 3692              		.loc 1 1770 0
 3693 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3694 0010 002B     		cmp	r3, #0
 3695 0012 0AD0     		beq	.L182
 3696              		.loc 1 1770 0 is_stmt 0 discriminator 1
 3697 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3698 0016 012B     		cmp	r3, #1
 3699 0018 07D0     		beq	.L182
 3700 001a 40F20000 		movw	r0, #:lower16:.LC0
 3701 001e C0F20000 		movt	r0, #:upper16:.LC0
 3702 0022 40F2EA61 		movw	r1, #1770
 3703 0026 FFF7FEFF 		bl	assert_failed
 3704              	.L182:
1771:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1772:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1773:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 3705              		.loc 1 1773 0 is_stmt 1
 3706 002a 4FF42053 		mov	r3, #10240
 3707 002e C4F20003 		movt	r3, 16384
 3708 0032 CA22     		movs	r2, #202
 3709 0034 5A62     		str	r2, [r3, #36]
1774:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 3710              		.loc 1 1774 0
 3711 0036 4FF42053 		mov	r3, #10240
 3712 003a C4F20003 		movt	r3, 16384
 3713 003e 5322     		movs	r2, #83
 3714 0040 5A62     		str	r2, [r3, #36]
1775:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1776:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Set Initialization mode */
1777:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 3715              		.loc 1 1777 0
 3716 0042 FFF7FEFF 		bl	RTC_EnterInitMode
 3717 0046 0346     		mov	r3, r0
 3718 0048 002B     		cmp	r3, #0
 3719 004a 02D1     		bne	.L183
1778:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1779:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status =  ERROR;
 3720              		.loc 1 1779 0
 3721 004c 0023     		movs	r3, #0
 3722 004e FB73     		strb	r3, [r7, #15]
 3723 0050 1FE0     		b	.L184
 3724              	.L183:
1780:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1781:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1782:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1783:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if (NewState != DISABLE)
 3725              		.loc 1 1783 0
 3726 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3727 0054 002B     		cmp	r3, #0
 3728 0056 0CD0     		beq	.L185
1784:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1785:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       /* Enable the Coarse Calibration */
1786:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->CR |= (uint32_t)RTC_CR_DCE;
 3729              		.loc 1 1786 0
 3730 0058 4FF42053 		mov	r3, #10240
 3731 005c C4F20003 		movt	r3, 16384
 3732 0060 4FF42052 		mov	r2, #10240
 3733 0064 C4F20002 		movt	r2, 16384
 3734 0068 9268     		ldr	r2, [r2, #8]
 3735 006a 42F08002 		orr	r2, r2, #128
 3736 006e 9A60     		str	r2, [r3, #8]
 3737 0070 0BE0     		b	.L186
 3738              	.L185:
1787:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1788:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
1789:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     { 
1790:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       /* Disable the Coarse Calibration */
1791:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->CR &= (uint32_t)~RTC_CR_DCE;
 3739              		.loc 1 1791 0
 3740 0072 4FF42053 		mov	r3, #10240
 3741 0076 C4F20003 		movt	r3, 16384
 3742 007a 4FF42052 		mov	r2, #10240
 3743 007e C4F20002 		movt	r2, 16384
 3744 0082 9268     		ldr	r2, [r2, #8]
 3745 0084 22F08002 		bic	r2, r2, #128
 3746 0088 9A60     		str	r2, [r3, #8]
 3747              	.L186:
1792:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1793:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
1794:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_ExitInitMode();
 3748              		.loc 1 1794 0
 3749 008a FFF7FEFF 		bl	RTC_ExitInitMode
1795:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
1796:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;
 3750              		.loc 1 1796 0
 3751 008e 0123     		movs	r3, #1
 3752 0090 FB73     		strb	r3, [r7, #15]
 3753              	.L184:
1797:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
1798:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1799:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1800:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 3754              		.loc 1 1800 0
 3755 0092 4FF42053 		mov	r3, #10240
 3756 0096 C4F20003 		movt	r3, 16384
 3757 009a FF22     		movs	r2, #255
 3758 009c 5A62     		str	r2, [r3, #36]
1801:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1802:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status;
 3759              		.loc 1 1802 0
 3760 009e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1803:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3761              		.loc 1 1803 0
 3762 00a0 1846     		mov	r0, r3
 3763 00a2 1037     		adds	r7, r7, #16
 3764 00a4 BD46     		mov	sp, r7
 3765              		@ sp needed
 3766 00a6 80BD     		pop	{r7, pc}
 3767              		.cfi_endproc
 3768              	.LFE140:
 3770              		.section	.text.RTC_CalibOutputCmd,"ax",%progbits
 3771              		.align	2
 3772              		.global	RTC_CalibOutputCmd
 3773              		.thumb
 3774              		.thumb_func
 3776              	RTC_CalibOutputCmd:
 3777              	.LFB141:
1804:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1805:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1806:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or disables the RTC clock to be output through the relative pin.
1807:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the digital calibration Output.
1808:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1809:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1810:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1811:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_CalibOutputCmd(FunctionalState NewState)
1812:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3778              		.loc 1 1812 0
 3779              		.cfi_startproc
 3780              		@ args = 0, pretend = 0, frame = 8
 3781              		@ frame_needed = 1, uses_anonymous_args = 0
 3782 0000 80B5     		push	{r7, lr}
 3783              	.LCFI90:
 3784              		.cfi_def_cfa_offset 8
 3785              		.cfi_offset 7, -8
 3786              		.cfi_offset 14, -4
 3787 0002 82B0     		sub	sp, sp, #8
 3788              	.LCFI91:
 3789              		.cfi_def_cfa_offset 16
 3790 0004 00AF     		add	r7, sp, #0
 3791              	.LCFI92:
 3792              		.cfi_def_cfa_register 7
 3793 0006 0346     		mov	r3, r0
 3794 0008 FB71     		strb	r3, [r7, #7]
1813:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1814:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 3795              		.loc 1 1814 0
 3796 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3797 000c 002B     		cmp	r3, #0
 3798 000e 0AD0     		beq	.L189
 3799              		.loc 1 1814 0 is_stmt 0 discriminator 1
 3800 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3801 0012 012B     		cmp	r3, #1
 3802 0014 07D0     		beq	.L189
 3803 0016 40F20000 		movw	r0, #:lower16:.LC0
 3804 001a C0F20000 		movt	r0, #:upper16:.LC0
 3805 001e 40F21671 		movw	r1, #1814
 3806 0022 FFF7FEFF 		bl	assert_failed
 3807              	.L189:
1815:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1816:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1817:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 3808              		.loc 1 1817 0 is_stmt 1
 3809 0026 4FF42053 		mov	r3, #10240
 3810 002a C4F20003 		movt	r3, 16384
 3811 002e CA22     		movs	r2, #202
 3812 0030 5A62     		str	r2, [r3, #36]
1818:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 3813              		.loc 1 1818 0
 3814 0032 4FF42053 		mov	r3, #10240
 3815 0036 C4F20003 		movt	r3, 16384
 3816 003a 5322     		movs	r2, #83
 3817 003c 5A62     		str	r2, [r3, #36]
1819:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1820:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
 3818              		.loc 1 1820 0
 3819 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3820 0040 002B     		cmp	r3, #0
 3821 0042 0CD0     		beq	.L190
1821:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1822:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Enable the RTC clock output */
1823:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR |= (uint32_t)RTC_CR_COE;
 3822              		.loc 1 1823 0
 3823 0044 4FF42053 		mov	r3, #10240
 3824 0048 C4F20003 		movt	r3, 16384
 3825 004c 4FF42052 		mov	r2, #10240
 3826 0050 C4F20002 		movt	r2, 16384
 3827 0054 9268     		ldr	r2, [r2, #8]
 3828 0056 42F40002 		orr	r2, r2, #8388608
 3829 005a 9A60     		str	r2, [r3, #8]
 3830 005c 0BE0     		b	.L191
 3831              	.L190:
1824:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1825:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1826:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   { 
1827:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Disable the RTC clock output */
1828:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR &= (uint32_t)~RTC_CR_COE;
 3832              		.loc 1 1828 0
 3833 005e 4FF42053 		mov	r3, #10240
 3834 0062 C4F20003 		movt	r3, 16384
 3835 0066 4FF42052 		mov	r2, #10240
 3836 006a C4F20002 		movt	r2, 16384
 3837 006e 9268     		ldr	r2, [r2, #8]
 3838 0070 22F40002 		bic	r2, r2, #8388608
 3839 0074 9A60     		str	r2, [r3, #8]
 3840              	.L191:
1829:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1830:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1831:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1832:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 3841              		.loc 1 1832 0
 3842 0076 4FF42053 		mov	r3, #10240
 3843 007a C4F20003 		movt	r3, 16384
 3844 007e FF22     		movs	r2, #255
 3845 0080 5A62     		str	r2, [r3, #36]
1833:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3846              		.loc 1 1833 0
 3847 0082 0837     		adds	r7, r7, #8
 3848 0084 BD46     		mov	sp, r7
 3849              		@ sp needed
 3850 0086 80BD     		pop	{r7, pc}
 3851              		.cfi_endproc
 3852              	.LFE141:
 3854              		.section	.text.RTC_CalibOutputConfig,"ax",%progbits
 3855              		.align	2
 3856              		.global	RTC_CalibOutputConfig
 3857              		.thumb
 3858              		.thumb_func
 3860              	RTC_CalibOutputConfig:
 3861              	.LFB142:
1834:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1835:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1836:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configure the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1837:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_CalibOutput : Select the Calibration output Selection .
1838:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
1839:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_CalibOutput_512Hz: A signal has a regular waveform at 512Hz. 
1840:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_CalibOutput_1Hz  : A signal has a regular waveform at 1Hz.
1841:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1842:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** */
1843:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_CalibOutputConfig(uint32_t RTC_CalibOutput)
1844:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3862              		.loc 1 1844 0
 3863              		.cfi_startproc
 3864              		@ args = 0, pretend = 0, frame = 8
 3865              		@ frame_needed = 1, uses_anonymous_args = 0
 3866 0000 80B5     		push	{r7, lr}
 3867              	.LCFI93:
 3868              		.cfi_def_cfa_offset 8
 3869              		.cfi_offset 7, -8
 3870              		.cfi_offset 14, -4
 3871 0002 82B0     		sub	sp, sp, #8
 3872              	.LCFI94:
 3873              		.cfi_def_cfa_offset 16
 3874 0004 00AF     		add	r7, sp, #0
 3875              	.LCFI95:
 3876              		.cfi_def_cfa_register 7
 3877 0006 7860     		str	r0, [r7, #4]
1845:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1846:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CALIB_OUTPUT(RTC_CalibOutput));
 3878              		.loc 1 1846 0
 3879 0008 7B68     		ldr	r3, [r7, #4]
 3880 000a 002B     		cmp	r3, #0
 3881 000c 0BD0     		beq	.L193
 3882              		.loc 1 1846 0 is_stmt 0 discriminator 1
 3883 000e 7B68     		ldr	r3, [r7, #4]
 3884 0010 B3F5002F 		cmp	r3, #524288
 3885 0014 07D0     		beq	.L193
 3886 0016 40F20000 		movw	r0, #:lower16:.LC0
 3887 001a C0F20000 		movt	r0, #:upper16:.LC0
 3888 001e 40F23671 		movw	r1, #1846
 3889 0022 FFF7FEFF 		bl	assert_failed
 3890              	.L193:
1847:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1848:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1849:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 3891              		.loc 1 1849 0 is_stmt 1
 3892 0026 4FF42053 		mov	r3, #10240
 3893 002a C4F20003 		movt	r3, 16384
 3894 002e CA22     		movs	r2, #202
 3895 0030 5A62     		str	r2, [r3, #36]
1850:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 3896              		.loc 1 1850 0
 3897 0032 4FF42053 		mov	r3, #10240
 3898 0036 C4F20003 		movt	r3, 16384
 3899 003a 5322     		movs	r2, #83
 3900 003c 5A62     		str	r2, [r3, #36]
1851:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1852:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /*clear flags before config*/
1853:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR &= (uint32_t)~(RTC_CR_COSEL);
 3901              		.loc 1 1853 0
 3902 003e 4FF42053 		mov	r3, #10240
 3903 0042 C4F20003 		movt	r3, 16384
 3904 0046 4FF42052 		mov	r2, #10240
 3905 004a C4F20002 		movt	r2, 16384
 3906 004e 9268     		ldr	r2, [r2, #8]
 3907 0050 22F40022 		bic	r2, r2, #524288
 3908 0054 9A60     		str	r2, [r3, #8]
1854:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1855:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the RTC_CR register */
1856:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR |= (uint32_t)RTC_CalibOutput;
 3909              		.loc 1 1856 0
 3910 0056 4FF42053 		mov	r3, #10240
 3911 005a C4F20003 		movt	r3, 16384
 3912 005e 4FF42052 		mov	r2, #10240
 3913 0062 C4F20002 		movt	r2, 16384
 3914 0066 9168     		ldr	r1, [r2, #8]
 3915 0068 7A68     		ldr	r2, [r7, #4]
 3916 006a 0A43     		orrs	r2, r2, r1
 3917 006c 9A60     		str	r2, [r3, #8]
1857:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1858:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1859:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;
 3918              		.loc 1 1859 0
 3919 006e 4FF42053 		mov	r3, #10240
 3920 0072 C4F20003 		movt	r3, 16384
 3921 0076 FF22     		movs	r2, #255
 3922 0078 5A62     		str	r2, [r3, #36]
1860:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3923              		.loc 1 1860 0
 3924 007a 0837     		adds	r7, r7, #8
 3925 007c BD46     		mov	sp, r7
 3926              		@ sp needed
 3927 007e 80BD     		pop	{r7, pc}
 3928              		.cfi_endproc
 3929              	.LFE142:
 3931              		.section	.text.RTC_SmoothCalibConfig,"ax",%progbits
 3932              		.align	2
 3933              		.global	RTC_SmoothCalibConfig
 3934              		.thumb
 3935              		.thumb_func
 3937              	RTC_SmoothCalibConfig:
 3938              	.LFB143:
1861:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1862:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1863:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the Smooth Calibration Settings.
1864:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_SmoothCalibPeriod : Select the Smooth Calibration Period.
1865:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be can be one of the following values:
1866:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_SmoothCalibPeriod_32sec : The smooth calibration periode is 32s.
1867:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_SmoothCalibPeriod_16sec : The smooth calibration periode is 16s.
1868:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_SmoothCalibPeriod_8sec  : The smooth calibartion periode is 8s.
1869:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_SmoothCalibPlusPulses : Select to Set or reset the CALP bit.
1870:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
1871:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_SmoothCalibPlusPulses_Set  : Add one RTCCLK puls every 2**11 pulses.
1872:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_SmoothCalibPlusPulses_Reset: No RTCCLK pulses are added.
1873:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_SmouthCalibMinusPulsesValue: Select the value of CALM[8:0] bits.
1874:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one any value from 0 to 0x000001FF.
1875:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
1876:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Calib registers are configured
1877:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC Calib registers are not configured
1878:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** */
1879:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_SmoothCalibConfig(uint32_t RTC_SmoothCalibPeriod,
1880:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                   uint32_t RTC_SmoothCalibPlusPulses,
1881:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                   uint32_t RTC_SmouthCalibMinusPulsesValue)
1882:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3939              		.loc 1 1882 0
 3940              		.cfi_startproc
 3941              		@ args = 0, pretend = 0, frame = 24
 3942              		@ frame_needed = 1, uses_anonymous_args = 0
 3943 0000 80B5     		push	{r7, lr}
 3944              	.LCFI96:
 3945              		.cfi_def_cfa_offset 8
 3946              		.cfi_offset 7, -8
 3947              		.cfi_offset 14, -4
 3948 0002 86B0     		sub	sp, sp, #24
 3949              	.LCFI97:
 3950              		.cfi_def_cfa_offset 32
 3951 0004 00AF     		add	r7, sp, #0
 3952              	.LCFI98:
 3953              		.cfi_def_cfa_register 7
 3954 0006 F860     		str	r0, [r7, #12]
 3955 0008 B960     		str	r1, [r7, #8]
 3956 000a 7A60     		str	r2, [r7, #4]
1883:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 3957              		.loc 1 1883 0
 3958 000c 0023     		movs	r3, #0
 3959 000e FB75     		strb	r3, [r7, #23]
1884:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t recalpfcount = 0;
 3960              		.loc 1 1884 0
 3961 0010 0023     		movs	r3, #0
 3962 0012 3B61     		str	r3, [r7, #16]
1885:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1886:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1887:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PERIOD(RTC_SmoothCalibPeriod));
 3963              		.loc 1 1887 0
 3964 0014 FB68     		ldr	r3, [r7, #12]
 3965 0016 002B     		cmp	r3, #0
 3966 0018 0FD0     		beq	.L195
 3967              		.loc 1 1887 0 is_stmt 0 discriminator 1
 3968 001a FB68     		ldr	r3, [r7, #12]
 3969 001c B3F5005F 		cmp	r3, #8192
 3970 0020 0BD0     		beq	.L195
 3971 0022 FB68     		ldr	r3, [r7, #12]
 3972 0024 B3F5804F 		cmp	r3, #16384
 3973 0028 07D0     		beq	.L195
 3974 002a 40F20000 		movw	r0, #:lower16:.LC0
 3975 002e C0F20000 		movt	r0, #:upper16:.LC0
 3976 0032 40F25F71 		movw	r1, #1887
 3977 0036 FFF7FEFF 		bl	assert_failed
 3978              	.L195:
1888:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PLUS(RTC_SmoothCalibPlusPulses));
 3979              		.loc 1 1888 0 is_stmt 1
 3980 003a BB68     		ldr	r3, [r7, #8]
 3981 003c B3F5004F 		cmp	r3, #32768
 3982 0040 0AD0     		beq	.L196
 3983              		.loc 1 1888 0 is_stmt 0 discriminator 1
 3984 0042 BB68     		ldr	r3, [r7, #8]
 3985 0044 002B     		cmp	r3, #0
 3986 0046 07D0     		beq	.L196
 3987 0048 40F20000 		movw	r0, #:lower16:.LC0
 3988 004c C0F20000 		movt	r0, #:upper16:.LC0
 3989 0050 4FF4EC61 		mov	r1, #1888
 3990 0054 FFF7FEFF 		bl	assert_failed
 3991              	.L196:
1889:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SMOOTH_CALIB_MINUS(RTC_SmouthCalibMinusPulsesValue));
 3992              		.loc 1 1889 0 is_stmt 1
 3993 0058 7B68     		ldr	r3, [r7, #4]
 3994 005a B3F5007F 		cmp	r3, #512
 3995 005e 07D3     		bcc	.L197
 3996              		.loc 1 1889 0 is_stmt 0 discriminator 1
 3997 0060 40F20000 		movw	r0, #:lower16:.LC0
 3998 0064 C0F20000 		movt	r0, #:upper16:.LC0
 3999 0068 40F26171 		movw	r1, #1889
 4000 006c FFF7FEFF 		bl	assert_failed
 4001              	.L197:
1890:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1891:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1892:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 4002              		.loc 1 1892 0 is_stmt 1
 4003 0070 4FF42053 		mov	r3, #10240
 4004 0074 C4F20003 		movt	r3, 16384
 4005 0078 CA22     		movs	r2, #202
 4006 007a 5A62     		str	r2, [r3, #36]
1893:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 4007              		.loc 1 1893 0
 4008 007c 4FF42053 		mov	r3, #10240
 4009 0080 C4F20003 		movt	r3, 16384
 4010 0084 5322     		movs	r2, #83
 4011 0086 5A62     		str	r2, [r3, #36]
1894:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1895:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* check if a calibration is pending*/
1896:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_RECALPF) != RESET)
 4012              		.loc 1 1896 0
 4013 0088 4FF42053 		mov	r3, #10240
 4014 008c C4F20003 		movt	r3, 16384
 4015 0090 DB68     		ldr	r3, [r3, #12]
 4016 0092 03F48033 		and	r3, r3, #65536
 4017 0096 002B     		cmp	r3, #0
 4018 0098 10D0     		beq	.L198
1897:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1898:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* wait until the Calibration is completed*/
1899:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     while (((RTC->ISR & RTC_ISR_RECALPF) != RESET) && (recalpfcount != RECALPF_TIMEOUT))
 4019              		.loc 1 1899 0
 4020 009a 02E0     		b	.L199
 4021              	.L200:
1900:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1901:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       recalpfcount++;
 4022              		.loc 1 1901 0
 4023 009c 3B69     		ldr	r3, [r7, #16]
 4024 009e 0133     		adds	r3, r3, #1
 4025 00a0 3B61     		str	r3, [r7, #16]
 4026              	.L199:
1899:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 4027              		.loc 1 1899 0 discriminator 1
 4028 00a2 4FF42053 		mov	r3, #10240
 4029 00a6 C4F20003 		movt	r3, 16384
 4030 00aa DB68     		ldr	r3, [r3, #12]
 4031 00ac 03F48033 		and	r3, r3, #65536
 4032 00b0 002B     		cmp	r3, #0
 4033 00b2 03D0     		beq	.L198
1899:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 4034              		.loc 1 1899 0 is_stmt 0 discriminator 2
 4035 00b4 3B69     		ldr	r3, [r7, #16]
 4036 00b6 B3F5003F 		cmp	r3, #131072
 4037 00ba EFD1     		bne	.L200
 4038              	.L198:
1902:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1903:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1904:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1905:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* check if the calibration pending is completed or if there is no calibration operation at all*/
1906:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_RECALPF) == RESET)
 4039              		.loc 1 1906 0 is_stmt 1
 4040 00bc 4FF42053 		mov	r3, #10240
 4041 00c0 C4F20003 		movt	r3, 16384
 4042 00c4 DB68     		ldr	r3, [r3, #12]
 4043 00c6 03F48033 		and	r3, r3, #65536
 4044 00ca 002B     		cmp	r3, #0
 4045 00cc 0CD1     		bne	.L201
1907:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1908:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the Smooth calibration settings */
1909:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CALR = (uint32_t)((uint32_t)RTC_SmoothCalibPeriod | (uint32_t)RTC_SmoothCalibPlusPulses | 
 4046              		.loc 1 1909 0
 4047 00ce 4FF42053 		mov	r3, #10240
 4048 00d2 C4F20003 		movt	r3, 16384
 4049 00d6 F968     		ldr	r1, [r7, #12]
 4050 00d8 BA68     		ldr	r2, [r7, #8]
 4051 00da 1143     		orrs	r1, r1, r2
 4052 00dc 7A68     		ldr	r2, [r7, #4]
 4053 00de 0A43     		orrs	r2, r2, r1
 4054 00e0 DA63     		str	r2, [r3, #60]
1910:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1911:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;
 4055              		.loc 1 1911 0
 4056 00e2 0123     		movs	r3, #1
 4057 00e4 FB75     		strb	r3, [r7, #23]
 4058 00e6 01E0     		b	.L202
 4059              	.L201:
1912:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1913:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1914:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1915:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
 4060              		.loc 1 1915 0
 4061 00e8 0023     		movs	r3, #0
 4062 00ea FB75     		strb	r3, [r7, #23]
 4063              	.L202:
1916:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1917:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1918:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1919:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;
 4064              		.loc 1 1919 0
 4065 00ec 4FF42053 		mov	r3, #10240
 4066 00f0 C4F20003 		movt	r3, 16384
 4067 00f4 FF22     		movs	r2, #255
 4068 00f6 5A62     		str	r2, [r3, #36]
1920:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1921:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (ErrorStatus)(status);
 4069              		.loc 1 1921 0
 4070 00f8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1922:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 4071              		.loc 1 1922 0
 4072 00fa 1846     		mov	r0, r3
 4073 00fc 1837     		adds	r7, r7, #24
 4074 00fe BD46     		mov	sp, r7
 4075              		@ sp needed
 4076 0100 80BD     		pop	{r7, pc}
 4077              		.cfi_endproc
 4078              	.LFE143:
 4080 0102 00BF     		.section	.text.RTC_TimeStampCmd,"ax",%progbits
 4081              		.align	2
 4082              		.global	RTC_TimeStampCmd
 4083              		.thumb
 4084              		.thumb_func
 4086              	RTC_TimeStampCmd:
 4087              	.LFB144:
1923:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1924:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1925:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
1926:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1927:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1928:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1929:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group8 TimeStamp configuration functions
1930:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   TimeStamp configuration functions 
1931:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
1932:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
1933:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
1934:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                        TimeStamp configuration functions
1935:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
1936:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1937:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
1938:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
1939:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1940:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1941:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1942:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or Disables the RTC TimeStamp functionality with the 
1943:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         specified time stamp pin stimulating edge.
1944:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TimeStampEdge: Specifies the pin edge on which the TimeStamp is 
1945:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         activated.
1946:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following:
1947:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_TimeStampEdge_Rising: the Time stamp event occurs on the rising 
1948:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                    edge of the related pin.
1949:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_TimeStampEdge_Falling: the Time stamp event occurs on the 
1950:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                     falling edge of the related pin.
1951:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the TimeStamp.
1952:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1953:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1954:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1955:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TimeStampCmd(uint32_t RTC_TimeStampEdge, FunctionalState NewState)
1956:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 4088              		.loc 1 1956 0
 4089              		.cfi_startproc
 4090              		@ args = 0, pretend = 0, frame = 16
 4091              		@ frame_needed = 1, uses_anonymous_args = 0
 4092 0000 80B5     		push	{r7, lr}
 4093              	.LCFI99:
 4094              		.cfi_def_cfa_offset 8
 4095              		.cfi_offset 7, -8
 4096              		.cfi_offset 14, -4
 4097 0002 84B0     		sub	sp, sp, #16
 4098              	.LCFI100:
 4099              		.cfi_def_cfa_offset 24
 4100 0004 00AF     		add	r7, sp, #0
 4101              	.LCFI101:
 4102              		.cfi_def_cfa_register 7
 4103 0006 7860     		str	r0, [r7, #4]
 4104 0008 0B46     		mov	r3, r1
 4105 000a FB70     		strb	r3, [r7, #3]
1957:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 4106              		.loc 1 1957 0
 4107 000c 0023     		movs	r3, #0
 4108 000e FB60     		str	r3, [r7, #12]
1958:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1959:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1960:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TIMESTAMP_EDGE(RTC_TimeStampEdge));
 4109              		.loc 1 1960 0
 4110 0010 7B68     		ldr	r3, [r7, #4]
 4111 0012 002B     		cmp	r3, #0
 4112 0014 0AD0     		beq	.L205
 4113              		.loc 1 1960 0 is_stmt 0 discriminator 1
 4114 0016 7B68     		ldr	r3, [r7, #4]
 4115 0018 082B     		cmp	r3, #8
 4116 001a 07D0     		beq	.L205
 4117 001c 40F20000 		movw	r0, #:lower16:.LC0
 4118 0020 C0F20000 		movt	r0, #:upper16:.LC0
 4119 0024 4FF4F561 		mov	r1, #1960
 4120 0028 FFF7FEFF 		bl	assert_failed
 4121              	.L205:
1961:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 4122              		.loc 1 1961 0 is_stmt 1
 4123 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4124 002e 002B     		cmp	r3, #0
 4125 0030 0AD0     		beq	.L206
 4126              		.loc 1 1961 0 is_stmt 0 discriminator 1
 4127 0032 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4128 0034 012B     		cmp	r3, #1
 4129 0036 07D0     		beq	.L206
 4130 0038 40F20000 		movw	r0, #:lower16:.LC0
 4131 003c C0F20000 		movt	r0, #:upper16:.LC0
 4132 0040 40F2A971 		movw	r1, #1961
 4133 0044 FFF7FEFF 		bl	assert_failed
 4134              	.L206:
1962:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1963:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the RTC_CR register and clear the bits to be configured */
1964:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 4135              		.loc 1 1964 0 is_stmt 1
 4136 0048 4FF42053 		mov	r3, #10240
 4137 004c C4F20003 		movt	r3, 16384
 4138 0050 9B68     		ldr	r3, [r3, #8]
 4139 0052 23F40063 		bic	r3, r3, #2048
 4140 0056 23F00803 		bic	r3, r3, #8
 4141 005a FB60     		str	r3, [r7, #12]
1965:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1966:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the new configuration */
1967:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
 4142              		.loc 1 1967 0
 4143 005c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4144 005e 002B     		cmp	r3, #0
 4145 0060 06D0     		beq	.L207
1968:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1969:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg |= (uint32_t)(RTC_TimeStampEdge | RTC_CR_TSE);
 4146              		.loc 1 1969 0
 4147 0062 7A68     		ldr	r2, [r7, #4]
 4148 0064 FB68     		ldr	r3, [r7, #12]
 4149 0066 1343     		orrs	r3, r3, r2
 4150 0068 43F40063 		orr	r3, r3, #2048
 4151 006c FB60     		str	r3, [r7, #12]
 4152 006e 03E0     		b	.L208
 4153              	.L207:
1970:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1971:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1972:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1973:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg |= (uint32_t)(RTC_TimeStampEdge);
 4154              		.loc 1 1973 0
 4155 0070 FA68     		ldr	r2, [r7, #12]
 4156 0072 7B68     		ldr	r3, [r7, #4]
 4157 0074 1343     		orrs	r3, r3, r2
 4158 0076 FB60     		str	r3, [r7, #12]
 4159              	.L208:
1974:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1975:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1976:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1977:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 4160              		.loc 1 1977 0
 4161 0078 4FF42053 		mov	r3, #10240
 4162 007c C4F20003 		movt	r3, 16384
 4163 0080 CA22     		movs	r2, #202
 4164 0082 5A62     		str	r2, [r3, #36]
1978:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 4165              		.loc 1 1978 0
 4166 0084 4FF42053 		mov	r3, #10240
 4167 0088 C4F20003 		movt	r3, 16384
 4168 008c 5322     		movs	r2, #83
 4169 008e 5A62     		str	r2, [r3, #36]
1979:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1980:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
1981:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR = (uint32_t)tmpreg;
 4170              		.loc 1 1981 0
 4171 0090 4FF42053 		mov	r3, #10240
 4172 0094 C4F20003 		movt	r3, 16384
 4173 0098 FA68     		ldr	r2, [r7, #12]
 4174 009a 9A60     		str	r2, [r3, #8]
1982:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1983:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1984:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 4175              		.loc 1 1984 0
 4176 009c 4FF42053 		mov	r3, #10240
 4177 00a0 C4F20003 		movt	r3, 16384
 4178 00a4 FF22     		movs	r2, #255
 4179 00a6 5A62     		str	r2, [r3, #36]
1985:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 4180              		.loc 1 1985 0
 4181 00a8 1037     		adds	r7, r7, #16
 4182 00aa BD46     		mov	sp, r7
 4183              		@ sp needed
 4184 00ac 80BD     		pop	{r7, pc}
 4185              		.cfi_endproc
 4186              	.LFE144:
 4188 00ae 00BF     		.section	.text.RTC_GetTimeStamp,"ax",%progbits
 4189              		.align	2
 4190              		.global	RTC_GetTimeStamp
 4191              		.thumb
 4192              		.thumb_func
 4194              	RTC_GetTimeStamp:
 4195              	.LFB145:
1986:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1987:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1988:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Get the RTC TimeStamp value and masks.
1989:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the output parameters.
1990:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1991:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN: Binary data format 
1992:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD: BCD data format
1993:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param RTC_StampTimeStruct: pointer to a RTC_TimeTypeDef structure that will 
1994:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                             contains the TimeStamp time values. 
1995:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param RTC_StampDateStruct: pointer to a RTC_DateTypeDef structure that will 
1996:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                             contains the TimeStamp date values.     
1997:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1998:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1999:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_GetTimeStamp(uint32_t RTC_Format, RTC_TimeTypeDef* RTC_StampTimeStruct, 
2000:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                       RTC_DateTypeDef* RTC_StampDateStruct)
2001:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 4196              		.loc 1 2001 0
 4197              		.cfi_startproc
 4198              		@ args = 0, pretend = 0, frame = 24
 4199              		@ frame_needed = 1, uses_anonymous_args = 0
 4200 0000 80B5     		push	{r7, lr}
 4201              	.LCFI102:
 4202              		.cfi_def_cfa_offset 8
 4203              		.cfi_offset 7, -8
 4204              		.cfi_offset 14, -4
 4205 0002 86B0     		sub	sp, sp, #24
 4206              	.LCFI103:
 4207              		.cfi_def_cfa_offset 32
 4208 0004 00AF     		add	r7, sp, #0
 4209              	.LCFI104:
 4210              		.cfi_def_cfa_register 7
 4211 0006 F860     		str	r0, [r7, #12]
 4212 0008 B960     		str	r1, [r7, #8]
 4213 000a 7A60     		str	r2, [r7, #4]
2002:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmptime = 0, tmpdate = 0;
 4214              		.loc 1 2002 0
 4215 000c 0023     		movs	r3, #0
 4216 000e 7B61     		str	r3, [r7, #20]
 4217 0010 0023     		movs	r3, #0
 4218 0012 3B61     		str	r3, [r7, #16]
2003:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2004:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2005:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
 4219              		.loc 1 2005 0
 4220 0014 FB68     		ldr	r3, [r7, #12]
 4221 0016 002B     		cmp	r3, #0
 4222 0018 0AD0     		beq	.L210
 4223              		.loc 1 2005 0 is_stmt 0 discriminator 1
 4224 001a FB68     		ldr	r3, [r7, #12]
 4225 001c 012B     		cmp	r3, #1
 4226 001e 07D0     		beq	.L210
 4227 0020 40F20000 		movw	r0, #:lower16:.LC0
 4228 0024 C0F20000 		movt	r0, #:upper16:.LC0
 4229 0028 40F2D571 		movw	r1, #2005
 4230 002c FFF7FEFF 		bl	assert_failed
 4231              	.L210:
2006:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2007:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the TimeStamp time and date registers values */
2008:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmptime = (uint32_t)(RTC->TSTR & RTC_TR_RESERVED_MASK);
 4232              		.loc 1 2008 0 is_stmt 1
 4233 0030 4FF42053 		mov	r3, #10240
 4234 0034 C4F20003 		movt	r3, 16384
 4235 0038 1B6B     		ldr	r3, [r3, #48]
 4236 003a 03F07F33 		and	r3, r3, #2139062143
 4237 003e 23F0FE43 		bic	r3, r3, #2130706432
 4238 0042 7B61     		str	r3, [r7, #20]
2009:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpdate = (uint32_t)(RTC->TSDR & RTC_DR_RESERVED_MASK);
 4239              		.loc 1 2009 0
 4240 0044 4FF42053 		mov	r3, #10240
 4241 0048 C4F20003 		movt	r3, 16384
 4242 004c 5B6B     		ldr	r3, [r3, #52]
 4243 004e 23F07F43 		bic	r3, r3, #-16777216
 4244 0052 23F0C003 		bic	r3, r3, #192
 4245 0056 3B61     		str	r3, [r7, #16]
2010:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2011:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Fill the Time structure fields with the read parameters */
2012:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_Hours = (uint8_t)((tmptime & (RTC_TR_HT | RTC_TR_HU)) >> 16);
 4246              		.loc 1 2012 0
 4247 0058 7B69     		ldr	r3, [r7, #20]
 4248 005a 03F47C13 		and	r3, r3, #4128768
 4249 005e 1B0C     		lsrs	r3, r3, #16
 4250 0060 DAB2     		uxtb	r2, r3
 4251 0062 BB68     		ldr	r3, [r7, #8]
 4252 0064 1A70     		strb	r2, [r3]
2013:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_Minutes = (uint8_t)((tmptime & (RTC_TR_MNT | RTC_TR_MNU)) >> 8);
 4253              		.loc 1 2013 0
 4254 0066 7B69     		ldr	r3, [r7, #20]
 4255 0068 03F4FE43 		and	r3, r3, #32512
 4256 006c 1B0A     		lsrs	r3, r3, #8
 4257 006e DAB2     		uxtb	r2, r3
 4258 0070 BB68     		ldr	r3, [r7, #8]
 4259 0072 5A70     		strb	r2, [r3, #1]
2014:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_Seconds = (uint8_t)(tmptime & (RTC_TR_ST | RTC_TR_SU));
 4260              		.loc 1 2014 0
 4261 0074 7B69     		ldr	r3, [r7, #20]
 4262 0076 DBB2     		uxtb	r3, r3
 4263 0078 03F07F03 		and	r3, r3, #127
 4264 007c DAB2     		uxtb	r2, r3
 4265 007e BB68     		ldr	r3, [r7, #8]
 4266 0080 9A70     		strb	r2, [r3, #2]
2015:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_H12 = (uint8_t)((tmptime & (RTC_TR_PM)) >> 16);  
 4267              		.loc 1 2015 0
 4268 0082 7B69     		ldr	r3, [r7, #20]
 4269 0084 03F48003 		and	r3, r3, #4194304
 4270 0088 1B0C     		lsrs	r3, r3, #16
 4271 008a DAB2     		uxtb	r2, r3
 4272 008c BB68     		ldr	r3, [r7, #8]
 4273 008e DA70     		strb	r2, [r3, #3]
2016:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2017:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Fill the Date structure fields with the read parameters */
2018:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_Year = 0;
 4274              		.loc 1 2018 0
 4275 0090 7B68     		ldr	r3, [r7, #4]
 4276 0092 0022     		movs	r2, #0
 4277 0094 DA70     		strb	r2, [r3, #3]
2019:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_Month = (uint8_t)((tmpdate & (RTC_DR_MT | RTC_DR_MU)) >> 8);
 4278              		.loc 1 2019 0
 4279 0096 3B69     		ldr	r3, [r7, #16]
 4280 0098 03F4F853 		and	r3, r3, #7936
 4281 009c 1B0A     		lsrs	r3, r3, #8
 4282 009e DAB2     		uxtb	r2, r3
 4283 00a0 7B68     		ldr	r3, [r7, #4]
 4284 00a2 5A70     		strb	r2, [r3, #1]
2020:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_Date = (uint8_t)(tmpdate & (RTC_DR_DT | RTC_DR_DU));
 4285              		.loc 1 2020 0
 4286 00a4 3B69     		ldr	r3, [r7, #16]
 4287 00a6 DBB2     		uxtb	r3, r3
 4288 00a8 03F03F03 		and	r3, r3, #63
 4289 00ac DAB2     		uxtb	r2, r3
 4290 00ae 7B68     		ldr	r3, [r7, #4]
 4291 00b0 9A70     		strb	r2, [r3, #2]
2021:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_WeekDay = (uint8_t)((tmpdate & (RTC_DR_WDU)) >> 13);
 4292              		.loc 1 2021 0
 4293 00b2 3B69     		ldr	r3, [r7, #16]
 4294 00b4 03F46043 		and	r3, r3, #57344
 4295 00b8 5B0B     		lsrs	r3, r3, #13
 4296 00ba DAB2     		uxtb	r2, r3
 4297 00bc 7B68     		ldr	r3, [r7, #4]
 4298 00be 1A70     		strb	r2, [r3]
2022:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2023:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the input parameters format */
2024:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 4299              		.loc 1 2024 0
 4300 00c0 FB68     		ldr	r3, [r7, #12]
 4301 00c2 002B     		cmp	r3, #0
 4302 00c4 35D1     		bne	.L209
2025:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2026:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Convert the Time structure parameters to Binary format */
2027:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampTimeStruct->RTC_Hours = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Hours);
 4303              		.loc 1 2027 0
 4304 00c6 BB68     		ldr	r3, [r7, #8]
 4305 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4306 00ca 1846     		mov	r0, r3
 4307 00cc FFF7FEFF 		bl	RTC_Bcd2ToByte
 4308 00d0 0346     		mov	r3, r0
 4309 00d2 1A46     		mov	r2, r3
 4310 00d4 BB68     		ldr	r3, [r7, #8]
 4311 00d6 1A70     		strb	r2, [r3]
2028:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampTimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Minutes);
 4312              		.loc 1 2028 0
 4313 00d8 BB68     		ldr	r3, [r7, #8]
 4314 00da 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 4315 00dc 1846     		mov	r0, r3
 4316 00de FFF7FEFF 		bl	RTC_Bcd2ToByte
 4317 00e2 0346     		mov	r3, r0
 4318 00e4 1A46     		mov	r2, r3
 4319 00e6 BB68     		ldr	r3, [r7, #8]
 4320 00e8 5A70     		strb	r2, [r3, #1]
2029:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampTimeStruct->RTC_Seconds = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Seconds);
 4321              		.loc 1 2029 0
 4322 00ea BB68     		ldr	r3, [r7, #8]
 4323 00ec 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 4324 00ee 1846     		mov	r0, r3
 4325 00f0 FFF7FEFF 		bl	RTC_Bcd2ToByte
 4326 00f4 0346     		mov	r3, r0
 4327 00f6 1A46     		mov	r2, r3
 4328 00f8 BB68     		ldr	r3, [r7, #8]
 4329 00fa 9A70     		strb	r2, [r3, #2]
2030:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2031:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Convert the Date structure parameters to Binary format */
2032:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampDateStruct->RTC_Month = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_Month);
 4330              		.loc 1 2032 0
 4331 00fc 7B68     		ldr	r3, [r7, #4]
 4332 00fe 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 4333 0100 1846     		mov	r0, r3
 4334 0102 FFF7FEFF 		bl	RTC_Bcd2ToByte
 4335 0106 0346     		mov	r3, r0
 4336 0108 1A46     		mov	r2, r3
 4337 010a 7B68     		ldr	r3, [r7, #4]
 4338 010c 5A70     		strb	r2, [r3, #1]
2033:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampDateStruct->RTC_Date = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_Date);
 4339              		.loc 1 2033 0
 4340 010e 7B68     		ldr	r3, [r7, #4]
 4341 0110 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 4342 0112 1846     		mov	r0, r3
 4343 0114 FFF7FEFF 		bl	RTC_Bcd2ToByte
 4344 0118 0346     		mov	r3, r0
 4345 011a 1A46     		mov	r2, r3
 4346 011c 7B68     		ldr	r3, [r7, #4]
 4347 011e 9A70     		strb	r2, [r3, #2]
2034:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampDateStruct->RTC_WeekDay = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_WeekDay);
 4348              		.loc 1 2034 0
 4349 0120 7B68     		ldr	r3, [r7, #4]
 4350 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4351 0124 1846     		mov	r0, r3
 4352 0126 FFF7FEFF 		bl	RTC_Bcd2ToByte
 4353 012a 0346     		mov	r3, r0
 4354 012c 1A46     		mov	r2, r3
 4355 012e 7B68     		ldr	r3, [r7, #4]
 4356 0130 1A70     		strb	r2, [r3]
 4357              	.L209:
2035:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2036:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 4358              		.loc 1 2036 0
 4359 0132 1837     		adds	r7, r7, #24
 4360 0134 BD46     		mov	sp, r7
 4361              		@ sp needed
 4362 0136 80BD     		pop	{r7, pc}
 4363              		.cfi_endproc
 4364              	.LFE145:
 4366              		.section	.text.RTC_GetTimeStampSubSecond,"ax",%progbits
 4367              		.align	2
 4368              		.global	RTC_GetTimeStampSubSecond
 4369              		.thumb
 4370              		.thumb_func
 4372              	RTC_GetTimeStampSubSecond:
 4373              	.LFB146:
2037:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2038:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2039:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Get the RTC timestamp Subseconds value.
2040:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
2041:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval RTC current timestamp Subseconds value.
2042:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2043:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** uint32_t RTC_GetTimeStampSubSecond(void)
2044:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 4374              		.loc 1 2044 0
 4375              		.cfi_startproc
 4376              		@ args = 0, pretend = 0, frame = 0
 4377              		@ frame_needed = 1, uses_anonymous_args = 0
 4378              		@ link register save eliminated.
 4379 0000 80B4     		push	{r7}
 4380              	.LCFI105:
 4381              		.cfi_def_cfa_offset 4
 4382              		.cfi_offset 7, -4
 4383 0002 00AF     		add	r7, sp, #0
 4384              	.LCFI106:
 4385              		.cfi_def_cfa_register 7
2045:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get timestamp subseconds values from the correspondent registers */
2046:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (uint32_t)(RTC->TSSSR);
 4386              		.loc 1 2046 0
 4387 0004 4FF42053 		mov	r3, #10240
 4388 0008 C4F20003 		movt	r3, 16384
 4389 000c 9B6B     		ldr	r3, [r3, #56]
2047:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 4390              		.loc 1 2047 0
 4391 000e 1846     		mov	r0, r3
 4392 0010 BD46     		mov	sp, r7
 4393              		@ sp needed
 4394 0012 5DF8047B 		ldr	r7, [sp], #4
 4395 0016 7047     		bx	lr
 4396              		.cfi_endproc
 4397              	.LFE146:
 4399              		.section	.text.RTC_TamperTriggerConfig,"ax",%progbits
 4400              		.align	2
 4401              		.global	RTC_TamperTriggerConfig
 4402              		.thumb
 4403              		.thumb_func
 4405              	RTC_TamperTriggerConfig:
 4406              	.LFB147:
2048:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2049:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2050:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
2051:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2052:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2053:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group9 Tampers configuration functions
2054:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Tampers configuration functions 
2055:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
2056:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
2057:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
2058:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                        Tampers configuration functions
2059:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
2060:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2061:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
2062:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
2063:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2064:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2065:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2066:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the select Tamper pin edge.
2067:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Tamper: Selected tamper pin.
2068:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be RTC_Tamper_1.
2069:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TamperTrigger: Specifies the trigger on the tamper pin that 
2070:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         stimulates tamper event. 
2071:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
2072:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperTrigger_RisingEdge: Rising Edge of the tamper pin causes tamper event.
2073:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperTrigger_FallingEdge: Falling Edge of the tamper pin causes tamper event.
2074:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperTrigger_LowLevel: Low Level of the tamper pin causes tamper event.
2075:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperTrigger_HighLevel: High Level of the tamper pin causes tamper event.
2076:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2077:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2078:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TamperTriggerConfig(uint32_t RTC_Tamper, uint32_t RTC_TamperTrigger)
2079:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 4407              		.loc 1 2079 0
 4408              		.cfi_startproc
 4409              		@ args = 0, pretend = 0, frame = 8
 4410              		@ frame_needed = 1, uses_anonymous_args = 0
 4411 0000 80B5     		push	{r7, lr}
 4412              	.LCFI107:
 4413              		.cfi_def_cfa_offset 8
 4414              		.cfi_offset 7, -8
 4415              		.cfi_offset 14, -4
 4416 0002 82B0     		sub	sp, sp, #8
 4417              	.LCFI108:
 4418              		.cfi_def_cfa_offset 16
 4419 0004 00AF     		add	r7, sp, #0
 4420              	.LCFI109:
 4421              		.cfi_def_cfa_register 7
 4422 0006 7860     		str	r0, [r7, #4]
 4423 0008 3960     		str	r1, [r7]
2080:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2081:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER(RTC_Tamper)); 
 4424              		.loc 1 2081 0
 4425 000a 7B68     		ldr	r3, [r7, #4]
 4426 000c 012B     		cmp	r3, #1
 4427 000e 07D0     		beq	.L215
 4428              		.loc 1 2081 0 is_stmt 0 discriminator 1
 4429 0010 40F20000 		movw	r0, #:lower16:.LC0
 4430 0014 C0F20000 		movt	r0, #:upper16:.LC0
 4431 0018 40F62101 		movw	r1, #2081
 4432 001c FFF7FEFF 		bl	assert_failed
 4433              	.L215:
2082:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(RTC_TamperTrigger));
 4434              		.loc 1 2082 0 is_stmt 1
 4435 0020 3B68     		ldr	r3, [r7]
 4436 0022 002B     		cmp	r3, #0
 4437 0024 10D0     		beq	.L216
 4438              		.loc 1 2082 0 is_stmt 0 discriminator 1
 4439 0026 3B68     		ldr	r3, [r7]
 4440 0028 012B     		cmp	r3, #1
 4441 002a 0DD0     		beq	.L216
 4442 002c 3B68     		ldr	r3, [r7]
 4443 002e 002B     		cmp	r3, #0
 4444 0030 0AD0     		beq	.L216
 4445 0032 3B68     		ldr	r3, [r7]
 4446 0034 012B     		cmp	r3, #1
 4447 0036 07D0     		beq	.L216
 4448 0038 40F20000 		movw	r0, #:lower16:.LC0
 4449 003c C0F20000 		movt	r0, #:upper16:.LC0
 4450 0040 40F62201 		movw	r1, #2082
 4451 0044 FFF7FEFF 		bl	assert_failed
 4452              	.L216:
2083:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  
2084:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_TamperTrigger == RTC_TamperTrigger_RisingEdge)
 4453              		.loc 1 2084 0 is_stmt 1
 4454 0048 3B68     		ldr	r3, [r7]
 4455 004a 002B     		cmp	r3, #0
 4456 004c 0ED1     		bne	.L217
2085:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {  
2086:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the RTC_TAFCR register */
2087:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR &= (uint32_t)((uint32_t)~(RTC_Tamper << 1));	
 4457              		.loc 1 2087 0
 4458 004e 4FF42053 		mov	r3, #10240
 4459 0052 C4F20003 		movt	r3, 16384
 4460 0056 4FF42052 		mov	r2, #10240
 4461 005a C4F20002 		movt	r2, 16384
 4462 005e 116C     		ldr	r1, [r2, #64]
 4463 0060 7A68     		ldr	r2, [r7, #4]
 4464 0062 5200     		lsls	r2, r2, #1
 4465 0064 D243     		mvns	r2, r2
 4466 0066 0A40     		ands	r2, r2, r1
 4467 0068 1A64     		str	r2, [r3, #64]
 4468 006a 0CE0     		b	.L214
 4469              	.L217:
2088:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2089:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
2090:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   { 
2091:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the RTC_TAFCR register */
2092:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR |= (uint32_t)(RTC_Tamper << 1);  
 4470              		.loc 1 2092 0
 4471 006c 4FF42053 		mov	r3, #10240
 4472 0070 C4F20003 		movt	r3, 16384
 4473 0074 4FF42052 		mov	r2, #10240
 4474 0078 C4F20002 		movt	r2, 16384
 4475 007c 116C     		ldr	r1, [r2, #64]
 4476 007e 7A68     		ldr	r2, [r7, #4]
 4477 0080 5200     		lsls	r2, r2, #1
 4478 0082 0A43     		orrs	r2, r2, r1
 4479 0084 1A64     		str	r2, [r3, #64]
 4480              	.L214:
2093:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
2094:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 4481              		.loc 1 2094 0
 4482 0086 0837     		adds	r7, r7, #8
 4483 0088 BD46     		mov	sp, r7
 4484              		@ sp needed
 4485 008a 80BD     		pop	{r7, pc}
 4486              		.cfi_endproc
 4487              	.LFE147:
 4489              		.section	.text.RTC_TamperCmd,"ax",%progbits
 4490              		.align	2
 4491              		.global	RTC_TamperCmd
 4492              		.thumb
 4493              		.thumb_func
 4495              	RTC_TamperCmd:
 4496              	.LFB148:
2095:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2096:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2097:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or Disables the Tamper detection.
2098:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Tamper: Selected tamper pin.
2099:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be RTC_Tamper_1.
2100:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the tamper pin.
2101:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.                   
2102:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2103:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2104:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TamperCmd(uint32_t RTC_Tamper, FunctionalState NewState)
2105:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 4497              		.loc 1 2105 0
 4498              		.cfi_startproc
 4499              		@ args = 0, pretend = 0, frame = 8
 4500              		@ frame_needed = 1, uses_anonymous_args = 0
 4501 0000 80B5     		push	{r7, lr}
 4502              	.LCFI110:
 4503              		.cfi_def_cfa_offset 8
 4504              		.cfi_offset 7, -8
 4505              		.cfi_offset 14, -4
 4506 0002 82B0     		sub	sp, sp, #8
 4507              	.LCFI111:
 4508              		.cfi_def_cfa_offset 16
 4509 0004 00AF     		add	r7, sp, #0
 4510              	.LCFI112:
 4511              		.cfi_def_cfa_register 7
 4512 0006 7860     		str	r0, [r7, #4]
 4513 0008 0B46     		mov	r3, r1
 4514 000a FB70     		strb	r3, [r7, #3]
2106:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2107:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER(RTC_Tamper));  
 4515              		.loc 1 2107 0
 4516 000c 7B68     		ldr	r3, [r7, #4]
 4517 000e 012B     		cmp	r3, #1
 4518 0010 07D0     		beq	.L220
 4519              		.loc 1 2107 0 is_stmt 0 discriminator 1
 4520 0012 40F20000 		movw	r0, #:lower16:.LC0
 4521 0016 C0F20000 		movt	r0, #:upper16:.LC0
 4522 001a 40F63B01 		movw	r1, #2107
 4523 001e FFF7FEFF 		bl	assert_failed
 4524              	.L220:
2108:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 4525              		.loc 1 2108 0 is_stmt 1
 4526 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4527 0024 002B     		cmp	r3, #0
 4528 0026 0AD0     		beq	.L221
 4529              		.loc 1 2108 0 is_stmt 0 discriminator 1
 4530 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4531 002a 012B     		cmp	r3, #1
 4532 002c 07D0     		beq	.L221
 4533 002e 40F20000 		movw	r0, #:lower16:.LC0
 4534 0032 C0F20000 		movt	r0, #:upper16:.LC0
 4535 0036 40F63C01 		movw	r1, #2108
 4536 003a FFF7FEFF 		bl	assert_failed
 4537              	.L221:
2109:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2110:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
 4538              		.loc 1 2110 0 is_stmt 1
 4539 003e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4540 0040 002B     		cmp	r3, #0
 4541 0042 0CD0     		beq	.L222
2111:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2112:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Enable the selected Tamper pin */
2113:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR |= (uint32_t)RTC_Tamper;
 4542              		.loc 1 2113 0
 4543 0044 4FF42053 		mov	r3, #10240
 4544 0048 C4F20003 		movt	r3, 16384
 4545 004c 4FF42052 		mov	r2, #10240
 4546 0050 C4F20002 		movt	r2, 16384
 4547 0054 116C     		ldr	r1, [r2, #64]
 4548 0056 7A68     		ldr	r2, [r7, #4]
 4549 0058 0A43     		orrs	r2, r2, r1
 4550 005a 1A64     		str	r2, [r3, #64]
 4551 005c 0CE0     		b	.L219
 4552              	.L222:
2114:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2115:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
2116:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2117:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Disable the selected Tamper pin */
2118:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR &= (uint32_t)~RTC_Tamper;    
 4553              		.loc 1 2118 0
 4554 005e 4FF42053 		mov	r3, #10240
 4555 0062 C4F20003 		movt	r3, 16384
 4556 0066 4FF42052 		mov	r2, #10240
 4557 006a C4F20002 		movt	r2, 16384
 4558 006e 116C     		ldr	r1, [r2, #64]
 4559 0070 7A68     		ldr	r2, [r7, #4]
 4560 0072 D243     		mvns	r2, r2
 4561 0074 0A40     		ands	r2, r2, r1
 4562 0076 1A64     		str	r2, [r3, #64]
 4563              	.L219:
2119:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
2120:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 4564              		.loc 1 2120 0
 4565 0078 0837     		adds	r7, r7, #8
 4566 007a BD46     		mov	sp, r7
 4567              		@ sp needed
 4568 007c 80BD     		pop	{r7, pc}
 4569              		.cfi_endproc
 4570              	.LFE148:
 4572 007e 00BF     		.section	.text.RTC_TamperFilterConfig,"ax",%progbits
 4573              		.align	2
 4574              		.global	RTC_TamperFilterConfig
 4575              		.thumb
 4576              		.thumb_func
 4578              	RTC_TamperFilterConfig:
 4579              	.LFB149:
2121:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2122:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2123:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the Tampers Filter.
2124:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TamperFilter: Specifies the tampers filter.
2125:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
2126:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperFilter_Disable: Tamper filter is disabled.
2127:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperFilter_2Sample: Tamper is activated after 2 consecutive 
2128:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                    samples at the active level 
2129:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperFilter_4Sample: Tamper is activated after 4 consecutive 
2130:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                    samples at the active level
2131:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperFilter_8Sample: Tamper is activated after 8 consecutive 
2132:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                    samples at the active level 
2133:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2134:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2135:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TamperFilterConfig(uint32_t RTC_TamperFilter)
2136:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 4580              		.loc 1 2136 0
 4581              		.cfi_startproc
 4582              		@ args = 0, pretend = 0, frame = 8
 4583              		@ frame_needed = 1, uses_anonymous_args = 0
 4584 0000 80B5     		push	{r7, lr}
 4585              	.LCFI113:
 4586              		.cfi_def_cfa_offset 8
 4587              		.cfi_offset 7, -8
 4588              		.cfi_offset 14, -4
 4589 0002 82B0     		sub	sp, sp, #8
 4590              	.LCFI114:
 4591              		.cfi_def_cfa_offset 16
 4592 0004 00AF     		add	r7, sp, #0
 4593              	.LCFI115:
 4594              		.cfi_def_cfa_register 7
 4595 0006 7860     		str	r0, [r7, #4]
2137:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2138:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER_FILTER(RTC_TamperFilter));
 4596              		.loc 1 2138 0
 4597 0008 7B68     		ldr	r3, [r7, #4]
 4598 000a 002B     		cmp	r3, #0
 4599 000c 13D0     		beq	.L225
 4600              		.loc 1 2138 0 is_stmt 0 discriminator 1
 4601 000e 7B68     		ldr	r3, [r7, #4]
 4602 0010 B3F5006F 		cmp	r3, #2048
 4603 0014 0FD0     		beq	.L225
 4604 0016 7B68     		ldr	r3, [r7, #4]
 4605 0018 B3F5805F 		cmp	r3, #4096
 4606 001c 0BD0     		beq	.L225
 4607 001e 7B68     		ldr	r3, [r7, #4]
 4608 0020 B3F5C05F 		cmp	r3, #6144
 4609 0024 07D0     		beq	.L225
 4610 0026 40F20000 		movw	r0, #:lower16:.LC0
 4611 002a C0F20000 		movt	r0, #:upper16:.LC0
 4612 002e 40F65A01 		movw	r1, #2138
 4613 0032 FFF7FEFF 		bl	assert_failed
 4614              	.L225:
2139:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    
2140:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear TAMPFLT[1:0] bits in the RTC_TAFCR register */
2141:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_TAMPFLT);
 4615              		.loc 1 2141 0 is_stmt 1
 4616 0036 4FF42053 		mov	r3, #10240
 4617 003a C4F20003 		movt	r3, 16384
 4618 003e 4FF42052 		mov	r2, #10240
 4619 0042 C4F20002 		movt	r2, 16384
 4620 0046 126C     		ldr	r2, [r2, #64]
 4621 0048 22F4C052 		bic	r2, r2, #6144
 4622 004c 1A64     		str	r2, [r3, #64]
2142:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2143:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the RTC_TAFCR register */
2144:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)RTC_TamperFilter;
 4623              		.loc 1 2144 0
 4624 004e 4FF42053 		mov	r3, #10240
 4625 0052 C4F20003 		movt	r3, 16384
 4626 0056 4FF42052 		mov	r2, #10240
 4627 005a C4F20002 		movt	r2, 16384
 4628 005e 116C     		ldr	r1, [r2, #64]
 4629 0060 7A68     		ldr	r2, [r7, #4]
 4630 0062 0A43     		orrs	r2, r2, r1
 4631 0064 1A64     		str	r2, [r3, #64]
2145:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 4632              		.loc 1 2145 0
 4633 0066 0837     		adds	r7, r7, #8
 4634 0068 BD46     		mov	sp, r7
 4635              		@ sp needed
 4636 006a 80BD     		pop	{r7, pc}
 4637              		.cfi_endproc
 4638              	.LFE149:
 4640              		.section	.text.RTC_TamperSamplingFreqConfig,"ax",%progbits
 4641              		.align	2
 4642              		.global	RTC_TamperSamplingFreqConfig
 4643              		.thumb
 4644              		.thumb_func
 4646              	RTC_TamperSamplingFreqConfig:
 4647              	.LFB150:
2146:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2147:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2148:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the Tampers Sampling Frequency.
2149:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TamperSamplingFreq: Specifies the tampers Sampling Frequency.
2150:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
2151:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div32768: Each of the tamper inputs are sampled
2152:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 32768
2153:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div16384: Each of the tamper inputs are sampled
2154:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 16384
2155:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div8192: Each of the tamper inputs are sampled
2156:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 8192
2157:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div4096: Each of the tamper inputs are sampled
2158:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 4096
2159:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div2048: Each of the tamper inputs are sampled
2160:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 2048
2161:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div1024: Each of the tamper inputs are sampled
2162:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 1024
2163:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div512: Each of the tamper inputs are sampled
2164:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 512  
2165:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div256: Each of the tamper inputs are sampled
2166:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 256  
2167:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2168:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2169:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TamperSamplingFreqConfig(uint32_t RTC_TamperSamplingFreq)
2170:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 4648              		.loc 1 2170 0
 4649              		.cfi_startproc
 4650              		@ args = 0, pretend = 0, frame = 8
 4651              		@ frame_needed = 1, uses_anonymous_args = 0
 4652 0000 80B5     		push	{r7, lr}
 4653              	.LCFI116:
 4654              		.cfi_def_cfa_offset 8
 4655              		.cfi_offset 7, -8
 4656              		.cfi_offset 14, -4
 4657 0002 82B0     		sub	sp, sp, #8
 4658              	.LCFI117:
 4659              		.cfi_def_cfa_offset 16
 4660 0004 00AF     		add	r7, sp, #0
 4661              	.LCFI118:
 4662              		.cfi_def_cfa_register 7
 4663 0006 7860     		str	r0, [r7, #4]
2171:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2172:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(RTC_TamperSamplingFreq));
 4664              		.loc 1 2172 0
 4665 0008 7B68     		ldr	r3, [r7, #4]
 4666 000a 002B     		cmp	r3, #0
 4667 000c 23D0     		beq	.L227
 4668              		.loc 1 2172 0 is_stmt 0 discriminator 1
 4669 000e 7B68     		ldr	r3, [r7, #4]
 4670 0010 B3F5807F 		cmp	r3, #256
 4671 0014 1FD0     		beq	.L227
 4672 0016 7B68     		ldr	r3, [r7, #4]
 4673 0018 B3F5007F 		cmp	r3, #512
 4674 001c 1BD0     		beq	.L227
 4675 001e 7B68     		ldr	r3, [r7, #4]
 4676 0020 B3F5407F 		cmp	r3, #768
 4677 0024 17D0     		beq	.L227
 4678 0026 7B68     		ldr	r3, [r7, #4]
 4679 0028 B3F5806F 		cmp	r3, #1024
 4680 002c 13D0     		beq	.L227
 4681 002e 7B68     		ldr	r3, [r7, #4]
 4682 0030 B3F5A06F 		cmp	r3, #1280
 4683 0034 0FD0     		beq	.L227
 4684 0036 7B68     		ldr	r3, [r7, #4]
 4685 0038 B3F5C06F 		cmp	r3, #1536
 4686 003c 0BD0     		beq	.L227
 4687 003e 7B68     		ldr	r3, [r7, #4]
 4688 0040 B3F5E06F 		cmp	r3, #1792
 4689 0044 07D0     		beq	.L227
 4690 0046 40F20000 		movw	r0, #:lower16:.LC0
 4691 004a C0F20000 		movt	r0, #:upper16:.LC0
 4692 004e 40F67C01 		movw	r1, #2172
 4693 0052 FFF7FEFF 		bl	assert_failed
 4694              	.L227:
2173:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  
2174:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear TAMPFREQ[2:0] bits in the RTC_TAFCR register */
2175:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_TAMPFREQ);
 4695              		.loc 1 2175 0 is_stmt 1
 4696 0056 4FF42053 		mov	r3, #10240
 4697 005a C4F20003 		movt	r3, 16384
 4698 005e 4FF42052 		mov	r2, #10240
 4699 0062 C4F20002 		movt	r2, 16384
 4700 0066 126C     		ldr	r2, [r2, #64]
 4701 0068 22F4E062 		bic	r2, r2, #1792
 4702 006c 1A64     		str	r2, [r3, #64]
2176:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2177:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the RTC_TAFCR register */
2178:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)RTC_TamperSamplingFreq;
 4703              		.loc 1 2178 0
 4704 006e 4FF42053 		mov	r3, #10240
 4705 0072 C4F20003 		movt	r3, 16384
 4706 0076 4FF42052 		mov	r2, #10240
 4707 007a C4F20002 		movt	r2, 16384
 4708 007e 116C     		ldr	r1, [r2, #64]
 4709 0080 7A68     		ldr	r2, [r7, #4]
 4710 0082 0A43     		orrs	r2, r2, r1
 4711 0084 1A64     		str	r2, [r3, #64]
2179:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 4712              		.loc 1 2179 0
 4713 0086 0837     		adds	r7, r7, #8
 4714 0088 BD46     		mov	sp, r7
 4715              		@ sp needed
 4716 008a 80BD     		pop	{r7, pc}
 4717              		.cfi_endproc
 4718              	.LFE150:
 4720              		.section	.text.RTC_TamperPinsPrechargeDuration,"ax",%progbits
 4721              		.align	2
 4722              		.global	RTC_TamperPinsPrechargeDuration
 4723              		.thumb
 4724              		.thumb_func
 4726              	RTC_TamperPinsPrechargeDuration:
 4727              	.LFB151:
2180:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2181:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2182:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the Tampers Pins input Precharge Duration.
2183:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TamperPrechargeDuration: Specifies the Tampers Pins input
2184:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         Precharge Duration.
2185:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
2186:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperPrechargeDuration_1RTCCLK: Tamper pins are pre-charged before sampling durin
2187:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperPrechargeDuration_2RTCCLK: Tamper pins are pre-charged before sampling durin
2188:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperPrechargeDuration_4RTCCLK: Tamper pins are pre-charged before sampling durin
2189:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperPrechargeDuration_8RTCCLK: Tamper pins are pre-charged before sampling durin
2190:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2191:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2192:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TamperPinsPrechargeDuration(uint32_t RTC_TamperPrechargeDuration)
2193:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 4728              		.loc 1 2193 0
 4729              		.cfi_startproc
 4730              		@ args = 0, pretend = 0, frame = 8
 4731              		@ frame_needed = 1, uses_anonymous_args = 0
 4732 0000 80B5     		push	{r7, lr}
 4733              	.LCFI119:
 4734              		.cfi_def_cfa_offset 8
 4735              		.cfi_offset 7, -8
 4736              		.cfi_offset 14, -4
 4737 0002 82B0     		sub	sp, sp, #8
 4738              	.LCFI120:
 4739              		.cfi_def_cfa_offset 16
 4740 0004 00AF     		add	r7, sp, #0
 4741              	.LCFI121:
 4742              		.cfi_def_cfa_register 7
 4743 0006 7860     		str	r0, [r7, #4]
2194:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2195:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(RTC_TamperPrechargeDuration));
 4744              		.loc 1 2195 0
 4745 0008 7B68     		ldr	r3, [r7, #4]
 4746 000a 002B     		cmp	r3, #0
 4747 000c 13D0     		beq	.L229
 4748              		.loc 1 2195 0 is_stmt 0 discriminator 1
 4749 000e 7B68     		ldr	r3, [r7, #4]
 4750 0010 B3F5005F 		cmp	r3, #8192
 4751 0014 0FD0     		beq	.L229
 4752 0016 7B68     		ldr	r3, [r7, #4]
 4753 0018 B3F5804F 		cmp	r3, #16384
 4754 001c 0BD0     		beq	.L229
 4755 001e 7B68     		ldr	r3, [r7, #4]
 4756 0020 B3F5C04F 		cmp	r3, #24576
 4757 0024 07D0     		beq	.L229
 4758 0026 40F20000 		movw	r0, #:lower16:.LC0
 4759 002a C0F20000 		movt	r0, #:upper16:.LC0
 4760 002e 40F69301 		movw	r1, #2195
 4761 0032 FFF7FEFF 		bl	assert_failed
 4762              	.L229:
2196:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    
2197:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear TAMPPRCH[1:0] bits in the RTC_TAFCR register */
2198:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_TAMPPRCH);
 4763              		.loc 1 2198 0 is_stmt 1
 4764 0036 4FF42053 		mov	r3, #10240
 4765 003a C4F20003 		movt	r3, 16384
 4766 003e 4FF42052 		mov	r2, #10240
 4767 0042 C4F20002 		movt	r2, 16384
 4768 0046 126C     		ldr	r2, [r2, #64]
 4769 0048 22F4C042 		bic	r2, r2, #24576
 4770 004c 1A64     		str	r2, [r3, #64]
2199:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2200:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the RTC_TAFCR register */
2201:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)RTC_TamperPrechargeDuration;
 4771              		.loc 1 2201 0
 4772 004e 4FF42053 		mov	r3, #10240
 4773 0052 C4F20003 		movt	r3, 16384
 4774 0056 4FF42052 		mov	r2, #10240
 4775 005a C4F20002 		movt	r2, 16384
 4776 005e 116C     		ldr	r1, [r2, #64]
 4777 0060 7A68     		ldr	r2, [r7, #4]
 4778 0062 0A43     		orrs	r2, r2, r1
 4779 0064 1A64     		str	r2, [r3, #64]
2202:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 4780              		.loc 1 2202 0
 4781 0066 0837     		adds	r7, r7, #8
 4782 0068 BD46     		mov	sp, r7
 4783              		@ sp needed
 4784 006a 80BD     		pop	{r7, pc}
 4785              		.cfi_endproc
 4786              	.LFE151:
 4788              		.section	.text.RTC_TimeStampOnTamperDetectionCmd,"ax",%progbits
 4789              		.align	2
 4790              		.global	RTC_TimeStampOnTamperDetectionCmd
 4791              		.thumb
 4792              		.thumb_func
 4794              	RTC_TimeStampOnTamperDetectionCmd:
 4795              	.LFB152:
2203:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2204:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2205:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or Disables the TimeStamp on Tamper Detection Event.
2206:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The timestamp is valid even the TSE bit in tamper control register 
2207:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         is reset.   
2208:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the timestamp on tamper event.
2209:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         This parameter can be: ENABLE or DISABLE.
2210:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2211:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2212:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TimeStampOnTamperDetectionCmd(FunctionalState NewState)
2213:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 4796              		.loc 1 2213 0
 4797              		.cfi_startproc
 4798              		@ args = 0, pretend = 0, frame = 8
 4799              		@ frame_needed = 1, uses_anonymous_args = 0
 4800 0000 80B5     		push	{r7, lr}
 4801              	.LCFI122:
 4802              		.cfi_def_cfa_offset 8
 4803              		.cfi_offset 7, -8
 4804              		.cfi_offset 14, -4
 4805 0002 82B0     		sub	sp, sp, #8
 4806              	.LCFI123:
 4807              		.cfi_def_cfa_offset 16
 4808 0004 00AF     		add	r7, sp, #0
 4809              	.LCFI124:
 4810              		.cfi_def_cfa_register 7
 4811 0006 0346     		mov	r3, r0
 4812 0008 FB71     		strb	r3, [r7, #7]
2214:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2215:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 4813              		.loc 1 2215 0
 4814 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4815 000c 002B     		cmp	r3, #0
 4816 000e 0AD0     		beq	.L231
 4817              		.loc 1 2215 0 is_stmt 0 discriminator 1
 4818 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4819 0012 012B     		cmp	r3, #1
 4820 0014 07D0     		beq	.L231
 4821 0016 40F20000 		movw	r0, #:lower16:.LC0
 4822 001a C0F20000 		movt	r0, #:upper16:.LC0
 4823 001e 40F6A701 		movw	r1, #2215
 4824 0022 FFF7FEFF 		bl	assert_failed
 4825              	.L231:
2216:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    
2217:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
 4826              		.loc 1 2217 0 is_stmt 1
 4827 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4828 0028 002B     		cmp	r3, #0
 4829 002a 0CD0     		beq	.L232
2218:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2219:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Save timestamp on tamper detection event */
2220:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR |= (uint32_t)RTC_TAFCR_TAMPTS;
 4830              		.loc 1 2220 0
 4831 002c 4FF42053 		mov	r3, #10240
 4832 0030 C4F20003 		movt	r3, 16384
 4833 0034 4FF42052 		mov	r2, #10240
 4834 0038 C4F20002 		movt	r2, 16384
 4835 003c 126C     		ldr	r2, [r2, #64]
 4836 003e 42F08002 		orr	r2, r2, #128
 4837 0042 1A64     		str	r2, [r3, #64]
 4838 0044 0BE0     		b	.L230
 4839              	.L232:
2221:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2222:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
2223:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2224:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Tamper detection does not cause a timestamp to be saved */
2225:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR &= (uint32_t)~RTC_TAFCR_TAMPTS;    
 4840              		.loc 1 2225 0
 4841 0046 4FF42053 		mov	r3, #10240
 4842 004a C4F20003 		movt	r3, 16384
 4843 004e 4FF42052 		mov	r2, #10240
 4844 0052 C4F20002 		movt	r2, 16384
 4845 0056 126C     		ldr	r2, [r2, #64]
 4846 0058 22F08002 		bic	r2, r2, #128
 4847 005c 1A64     		str	r2, [r3, #64]
 4848              	.L230:
2226:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2227:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 4849              		.loc 1 2227 0
 4850 005e 0837     		adds	r7, r7, #8
 4851 0060 BD46     		mov	sp, r7
 4852              		@ sp needed
 4853 0062 80BD     		pop	{r7, pc}
 4854              		.cfi_endproc
 4855              	.LFE152:
 4857              		.section	.text.RTC_TamperPullUpCmd,"ax",%progbits
 4858              		.align	2
 4859              		.global	RTC_TamperPullUpCmd
 4860              		.thumb
 4861              		.thumb_func
 4863              	RTC_TamperPullUpCmd:
 4864              	.LFB153:
2228:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2229:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2230:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or Disables the Precharge of Tamper pin.
2231:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of tamper pull up.
2232:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be: ENABLE or DISABLE.                   
2233:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2234:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2235:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TamperPullUpCmd(FunctionalState NewState)
2236:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 4865              		.loc 1 2236 0
 4866              		.cfi_startproc
 4867              		@ args = 0, pretend = 0, frame = 8
 4868              		@ frame_needed = 1, uses_anonymous_args = 0
 4869 0000 80B5     		push	{r7, lr}
 4870              	.LCFI125:
 4871              		.cfi_def_cfa_offset 8
 4872              		.cfi_offset 7, -8
 4873              		.cfi_offset 14, -4
 4874 0002 82B0     		sub	sp, sp, #8
 4875              	.LCFI126:
 4876              		.cfi_def_cfa_offset 16
 4877 0004 00AF     		add	r7, sp, #0
 4878              	.LCFI127:
 4879              		.cfi_def_cfa_register 7
 4880 0006 0346     		mov	r3, r0
 4881 0008 FB71     		strb	r3, [r7, #7]
2237:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2238:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 4882              		.loc 1 2238 0
 4883 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4884 000c 002B     		cmp	r3, #0
 4885 000e 0AD0     		beq	.L235
 4886              		.loc 1 2238 0 is_stmt 0 discriminator 1
 4887 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4888 0012 012B     		cmp	r3, #1
 4889 0014 07D0     		beq	.L235
 4890 0016 40F20000 		movw	r0, #:lower16:.LC0
 4891 001a C0F20000 		movt	r0, #:upper16:.LC0
 4892 001e 40F6BE01 		movw	r1, #2238
 4893 0022 FFF7FEFF 		bl	assert_failed
 4894              	.L235:
2239:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2240:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  if (NewState != DISABLE)
 4895              		.loc 1 2240 0 is_stmt 1
 4896 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4897 0028 002B     		cmp	r3, #0
 4898 002a 0CD0     		beq	.L236
2241:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2242:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Enable precharge of the selected Tamper pin */
2243:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR &= (uint32_t)~RTC_TAFCR_TAMPPUDIS; 
 4899              		.loc 1 2243 0
 4900 002c 4FF42053 		mov	r3, #10240
 4901 0030 C4F20003 		movt	r3, 16384
 4902 0034 4FF42052 		mov	r2, #10240
 4903 0038 C4F20002 		movt	r2, 16384
 4904 003c 126C     		ldr	r2, [r2, #64]
 4905 003e 22F40042 		bic	r2, r2, #32768
 4906 0042 1A64     		str	r2, [r3, #64]
 4907 0044 0BE0     		b	.L234
 4908              	.L236:
2244:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2245:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
2246:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2247:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Disable precharge of the selected Tamper pin */
2248:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR |= (uint32_t)RTC_TAFCR_TAMPPUDIS;    
 4909              		.loc 1 2248 0
 4910 0046 4FF42053 		mov	r3, #10240
 4911 004a C4F20003 		movt	r3, 16384
 4912 004e 4FF42052 		mov	r2, #10240
 4913 0052 C4F20002 		movt	r2, 16384
 4914 0056 126C     		ldr	r2, [r2, #64]
 4915 0058 42F40042 		orr	r2, r2, #32768
 4916 005c 1A64     		str	r2, [r3, #64]
 4917              	.L234:
2249:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
2250:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 4918              		.loc 1 2250 0
 4919 005e 0837     		adds	r7, r7, #8
 4920 0060 BD46     		mov	sp, r7
 4921              		@ sp needed
 4922 0062 80BD     		pop	{r7, pc}
 4923              		.cfi_endproc
 4924              	.LFE153:
 4926              		.section	.text.RTC_WriteBackupRegister,"ax",%progbits
 4927              		.align	2
 4928              		.global	RTC_WriteBackupRegister
 4929              		.thumb
 4930              		.thumb_func
 4932              	RTC_WriteBackupRegister:
 4933              	.LFB154:
2251:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2252:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2253:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
2254:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2255:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2256:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group10 Backup Data Registers configuration functions
2257:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Backup Data Registers configuration functions  
2258:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
2259:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
2260:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
2261:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                        Backup Data Registers configuration functions 
2262:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
2263:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2264:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
2265:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
2266:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2267:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2268:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2269:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Writes a data in a specified RTC Backup data register.
2270:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_BKP_DR: RTC Backup data Register number.
2271:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 19 to 
2272:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                          specify the register.
2273:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  Data: Data to be written in the specified RTC Backup data register.                    
2274:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2275:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2276:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_WriteBackupRegister(uint32_t RTC_BKP_DR, uint32_t Data)
2277:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 4934              		.loc 1 2277 0
 4935              		.cfi_startproc
 4936              		@ args = 0, pretend = 0, frame = 16
 4937              		@ frame_needed = 1, uses_anonymous_args = 0
 4938 0000 80B5     		push	{r7, lr}
 4939              	.LCFI128:
 4940              		.cfi_def_cfa_offset 8
 4941              		.cfi_offset 7, -8
 4942              		.cfi_offset 14, -4
 4943 0002 84B0     		sub	sp, sp, #16
 4944              	.LCFI129:
 4945              		.cfi_def_cfa_offset 24
 4946 0004 00AF     		add	r7, sp, #0
 4947              	.LCFI130:
 4948              		.cfi_def_cfa_register 7
 4949 0006 7860     		str	r0, [r7, #4]
 4950 0008 3960     		str	r1, [r7]
2278:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t tmp = 0;
 4951              		.loc 1 2278 0
 4952 000a 0023     		movs	r3, #0
 4953 000c FB60     		str	r3, [r7, #12]
2279:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2280:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2281:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_BKP(RTC_BKP_DR));
 4954              		.loc 1 2281 0
 4955 000e 7B68     		ldr	r3, [r7, #4]
 4956 0010 002B     		cmp	r3, #0
 4957 0012 40D0     		beq	.L239
 4958              		.loc 1 2281 0 is_stmt 0 discriminator 1
 4959 0014 7B68     		ldr	r3, [r7, #4]
 4960 0016 012B     		cmp	r3, #1
 4961 0018 3DD0     		beq	.L239
 4962 001a 7B68     		ldr	r3, [r7, #4]
 4963 001c 022B     		cmp	r3, #2
 4964 001e 3AD0     		beq	.L239
 4965 0020 7B68     		ldr	r3, [r7, #4]
 4966 0022 032B     		cmp	r3, #3
 4967 0024 37D0     		beq	.L239
 4968 0026 7B68     		ldr	r3, [r7, #4]
 4969 0028 042B     		cmp	r3, #4
 4970 002a 34D0     		beq	.L239
 4971 002c 7B68     		ldr	r3, [r7, #4]
 4972 002e 052B     		cmp	r3, #5
 4973 0030 31D0     		beq	.L239
 4974 0032 7B68     		ldr	r3, [r7, #4]
 4975 0034 062B     		cmp	r3, #6
 4976 0036 2ED0     		beq	.L239
 4977 0038 7B68     		ldr	r3, [r7, #4]
 4978 003a 072B     		cmp	r3, #7
 4979 003c 2BD0     		beq	.L239
 4980 003e 7B68     		ldr	r3, [r7, #4]
 4981 0040 082B     		cmp	r3, #8
 4982 0042 28D0     		beq	.L239
 4983 0044 7B68     		ldr	r3, [r7, #4]
 4984 0046 092B     		cmp	r3, #9
 4985 0048 25D0     		beq	.L239
 4986 004a 7B68     		ldr	r3, [r7, #4]
 4987 004c 0A2B     		cmp	r3, #10
 4988 004e 22D0     		beq	.L239
 4989 0050 7B68     		ldr	r3, [r7, #4]
 4990 0052 0B2B     		cmp	r3, #11
 4991 0054 1FD0     		beq	.L239
 4992 0056 7B68     		ldr	r3, [r7, #4]
 4993 0058 0C2B     		cmp	r3, #12
 4994 005a 1CD0     		beq	.L239
 4995 005c 7B68     		ldr	r3, [r7, #4]
 4996 005e 0D2B     		cmp	r3, #13
 4997 0060 19D0     		beq	.L239
 4998 0062 7B68     		ldr	r3, [r7, #4]
 4999 0064 0E2B     		cmp	r3, #14
 5000 0066 16D0     		beq	.L239
 5001 0068 7B68     		ldr	r3, [r7, #4]
 5002 006a 0F2B     		cmp	r3, #15
 5003 006c 13D0     		beq	.L239
 5004 006e 7B68     		ldr	r3, [r7, #4]
 5005 0070 102B     		cmp	r3, #16
 5006 0072 10D0     		beq	.L239
 5007 0074 7B68     		ldr	r3, [r7, #4]
 5008 0076 112B     		cmp	r3, #17
 5009 0078 0DD0     		beq	.L239
 5010 007a 7B68     		ldr	r3, [r7, #4]
 5011 007c 122B     		cmp	r3, #18
 5012 007e 0AD0     		beq	.L239
 5013 0080 7B68     		ldr	r3, [r7, #4]
 5014 0082 132B     		cmp	r3, #19
 5015 0084 07D0     		beq	.L239
 5016 0086 40F20000 		movw	r0, #:lower16:.LC0
 5017 008a C0F20000 		movt	r0, #:upper16:.LC0
 5018 008e 40F6E901 		movw	r1, #2281
 5019 0092 FFF7FEFF 		bl	assert_failed
 5020              	.L239:
2282:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2283:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmp = RTC_BASE + 0x50;
 5021              		.loc 1 2283 0 is_stmt 1
 5022 0096 42F65003 		movw	r3, #10320
 5023 009a C4F20003 		movt	r3, 16384
 5024 009e FB60     		str	r3, [r7, #12]
2284:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmp += (RTC_BKP_DR * 4);
 5025              		.loc 1 2284 0
 5026 00a0 7B68     		ldr	r3, [r7, #4]
 5027 00a2 9A00     		lsls	r2, r3, #2
 5028 00a4 FB68     		ldr	r3, [r7, #12]
 5029 00a6 1344     		add	r3, r3, r2
 5030 00a8 FB60     		str	r3, [r7, #12]
2285:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2286:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Write the specified register */
2287:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *(__IO uint32_t *)tmp = (uint32_t)Data;
 5031              		.loc 1 2287 0
 5032 00aa FB68     		ldr	r3, [r7, #12]
 5033 00ac 3A68     		ldr	r2, [r7]
 5034 00ae 1A60     		str	r2, [r3]
2288:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 5035              		.loc 1 2288 0
 5036 00b0 1037     		adds	r7, r7, #16
 5037 00b2 BD46     		mov	sp, r7
 5038              		@ sp needed
 5039 00b4 80BD     		pop	{r7, pc}
 5040              		.cfi_endproc
 5041              	.LFE154:
 5043 00b6 00BF     		.section	.text.RTC_ReadBackupRegister,"ax",%progbits
 5044              		.align	2
 5045              		.global	RTC_ReadBackupRegister
 5046              		.thumb
 5047              		.thumb_func
 5049              	RTC_ReadBackupRegister:
 5050              	.LFB155:
2289:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2290:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2291:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Reads data from the specified RTC Backup data Register.
2292:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_BKP_DR: RTC Backup data Register number.
2293:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 19 to 
2294:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                          specify the register.                   
2295:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2296:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2297:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** uint32_t RTC_ReadBackupRegister(uint32_t RTC_BKP_DR)
2298:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 5051              		.loc 1 2298 0
 5052              		.cfi_startproc
 5053              		@ args = 0, pretend = 0, frame = 16
 5054              		@ frame_needed = 1, uses_anonymous_args = 0
 5055 0000 80B5     		push	{r7, lr}
 5056              	.LCFI131:
 5057              		.cfi_def_cfa_offset 8
 5058              		.cfi_offset 7, -8
 5059              		.cfi_offset 14, -4
 5060 0002 84B0     		sub	sp, sp, #16
 5061              	.LCFI132:
 5062              		.cfi_def_cfa_offset 24
 5063 0004 00AF     		add	r7, sp, #0
 5064              	.LCFI133:
 5065              		.cfi_def_cfa_register 7
 5066 0006 7860     		str	r0, [r7, #4]
2299:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t tmp = 0;
 5067              		.loc 1 2299 0
 5068 0008 0023     		movs	r3, #0
 5069 000a FB60     		str	r3, [r7, #12]
2300:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2301:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2302:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_BKP(RTC_BKP_DR));
 5070              		.loc 1 2302 0
 5071 000c 7B68     		ldr	r3, [r7, #4]
 5072 000e 002B     		cmp	r3, #0
 5073 0010 40D0     		beq	.L241
 5074              		.loc 1 2302 0 is_stmt 0 discriminator 1
 5075 0012 7B68     		ldr	r3, [r7, #4]
 5076 0014 012B     		cmp	r3, #1
 5077 0016 3DD0     		beq	.L241
 5078 0018 7B68     		ldr	r3, [r7, #4]
 5079 001a 022B     		cmp	r3, #2
 5080 001c 3AD0     		beq	.L241
 5081 001e 7B68     		ldr	r3, [r7, #4]
 5082 0020 032B     		cmp	r3, #3
 5083 0022 37D0     		beq	.L241
 5084 0024 7B68     		ldr	r3, [r7, #4]
 5085 0026 042B     		cmp	r3, #4
 5086 0028 34D0     		beq	.L241
 5087 002a 7B68     		ldr	r3, [r7, #4]
 5088 002c 052B     		cmp	r3, #5
 5089 002e 31D0     		beq	.L241
 5090 0030 7B68     		ldr	r3, [r7, #4]
 5091 0032 062B     		cmp	r3, #6
 5092 0034 2ED0     		beq	.L241
 5093 0036 7B68     		ldr	r3, [r7, #4]
 5094 0038 072B     		cmp	r3, #7
 5095 003a 2BD0     		beq	.L241
 5096 003c 7B68     		ldr	r3, [r7, #4]
 5097 003e 082B     		cmp	r3, #8
 5098 0040 28D0     		beq	.L241
 5099 0042 7B68     		ldr	r3, [r7, #4]
 5100 0044 092B     		cmp	r3, #9
 5101 0046 25D0     		beq	.L241
 5102 0048 7B68     		ldr	r3, [r7, #4]
 5103 004a 0A2B     		cmp	r3, #10
 5104 004c 22D0     		beq	.L241
 5105 004e 7B68     		ldr	r3, [r7, #4]
 5106 0050 0B2B     		cmp	r3, #11
 5107 0052 1FD0     		beq	.L241
 5108 0054 7B68     		ldr	r3, [r7, #4]
 5109 0056 0C2B     		cmp	r3, #12
 5110 0058 1CD0     		beq	.L241
 5111 005a 7B68     		ldr	r3, [r7, #4]
 5112 005c 0D2B     		cmp	r3, #13
 5113 005e 19D0     		beq	.L241
 5114 0060 7B68     		ldr	r3, [r7, #4]
 5115 0062 0E2B     		cmp	r3, #14
 5116 0064 16D0     		beq	.L241
 5117 0066 7B68     		ldr	r3, [r7, #4]
 5118 0068 0F2B     		cmp	r3, #15
 5119 006a 13D0     		beq	.L241
 5120 006c 7B68     		ldr	r3, [r7, #4]
 5121 006e 102B     		cmp	r3, #16
 5122 0070 10D0     		beq	.L241
 5123 0072 7B68     		ldr	r3, [r7, #4]
 5124 0074 112B     		cmp	r3, #17
 5125 0076 0DD0     		beq	.L241
 5126 0078 7B68     		ldr	r3, [r7, #4]
 5127 007a 122B     		cmp	r3, #18
 5128 007c 0AD0     		beq	.L241
 5129 007e 7B68     		ldr	r3, [r7, #4]
 5130 0080 132B     		cmp	r3, #19
 5131 0082 07D0     		beq	.L241
 5132 0084 40F20000 		movw	r0, #:lower16:.LC0
 5133 0088 C0F20000 		movt	r0, #:upper16:.LC0
 5134 008c 40F6FE01 		movw	r1, #2302
 5135 0090 FFF7FEFF 		bl	assert_failed
 5136              	.L241:
2303:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2304:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmp = RTC_BASE + 0x50;
 5137              		.loc 1 2304 0 is_stmt 1
 5138 0094 42F65003 		movw	r3, #10320
 5139 0098 C4F20003 		movt	r3, 16384
 5140 009c FB60     		str	r3, [r7, #12]
2305:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmp += (RTC_BKP_DR * 4);
 5141              		.loc 1 2305 0
 5142 009e 7B68     		ldr	r3, [r7, #4]
 5143 00a0 9A00     		lsls	r2, r3, #2
 5144 00a2 FB68     		ldr	r3, [r7, #12]
 5145 00a4 1344     		add	r3, r3, r2
 5146 00a6 FB60     		str	r3, [r7, #12]
2306:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2307:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Read the specified register */
2308:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (*(__IO uint32_t *)tmp);
 5147              		.loc 1 2308 0
 5148 00a8 FB68     		ldr	r3, [r7, #12]
 5149 00aa 1B68     		ldr	r3, [r3]
2309:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 5150              		.loc 1 2309 0
 5151 00ac 1846     		mov	r0, r3
 5152 00ae 1037     		adds	r7, r7, #16
 5153 00b0 BD46     		mov	sp, r7
 5154              		@ sp needed
 5155 00b2 80BD     		pop	{r7, pc}
 5156              		.cfi_endproc
 5157              	.LFE155:
 5159              		.section	.text.RTC_TamperPinSelection,"ax",%progbits
 5160              		.align	2
 5161              		.global	RTC_TamperPinSelection
 5162              		.thumb
 5163              		.thumb_func
 5165              	RTC_TamperPinSelection:
 5166              	.LFB156:
2310:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2311:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2312:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
2313:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2314:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2315:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group11 RTC Tamper and TimeStamp Pins Selection and Output Type Config configurat
2316:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   RTC Tamper and TimeStamp Pins Selection and Output Type Config 
2317:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *           configuration functions  
2318:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
2319:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
2320:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
2321:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC Tamper and TimeStamp Pins Selection and Output Type Config configuration 
2322:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   functions 
2323:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
2324:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2325:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
2326:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
2327:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2328:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2329:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2330:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Selects the RTC Tamper Pin.
2331:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TamperPin: specifies the RTC Tamper Pin.
2332:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
2333:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_TamperPin_PC13: PC13 is selected as RTC Tamper Pin.
2334:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_TamperPin_PI8: PI8 is selected as RTC Tamper Pin.    
2335:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2336:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2337:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TamperPinSelection(uint32_t RTC_TamperPin)
2338:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 5167              		.loc 1 2338 0
 5168              		.cfi_startproc
 5169              		@ args = 0, pretend = 0, frame = 8
 5170              		@ frame_needed = 1, uses_anonymous_args = 0
 5171 0000 80B5     		push	{r7, lr}
 5172              	.LCFI134:
 5173              		.cfi_def_cfa_offset 8
 5174              		.cfi_offset 7, -8
 5175              		.cfi_offset 14, -4
 5176 0002 82B0     		sub	sp, sp, #8
 5177              	.LCFI135:
 5178              		.cfi_def_cfa_offset 16
 5179 0004 00AF     		add	r7, sp, #0
 5180              	.LCFI136:
 5181              		.cfi_def_cfa_register 7
 5182 0006 7860     		str	r0, [r7, #4]
2339:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2340:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER_PIN(RTC_TamperPin));
 5183              		.loc 1 2340 0
 5184 0008 7B68     		ldr	r3, [r7, #4]
 5185 000a 002B     		cmp	r3, #0
 5186 000c 0BD0     		beq	.L244
 5187              		.loc 1 2340 0 is_stmt 0 discriminator 1
 5188 000e 7B68     		ldr	r3, [r7, #4]
 5189 0010 B3F5803F 		cmp	r3, #65536
 5190 0014 07D0     		beq	.L244
 5191 0016 40F20000 		movw	r0, #:lower16:.LC0
 5192 001a C0F20000 		movt	r0, #:upper16:.LC0
 5193 001e 40F62411 		movw	r1, #2340
 5194 0022 FFF7FEFF 		bl	assert_failed
 5195              	.L244:
2341:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2342:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_TAMPINSEL);
 5196              		.loc 1 2342 0 is_stmt 1
 5197 0026 4FF42053 		mov	r3, #10240
 5198 002a C4F20003 		movt	r3, 16384
 5199 002e 4FF42052 		mov	r2, #10240
 5200 0032 C4F20002 		movt	r2, 16384
 5201 0036 126C     		ldr	r2, [r2, #64]
 5202 0038 22F48032 		bic	r2, r2, #65536
 5203 003c 1A64     		str	r2, [r3, #64]
2343:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_TamperPin);  
 5204              		.loc 1 2343 0
 5205 003e 4FF42053 		mov	r3, #10240
 5206 0042 C4F20003 		movt	r3, 16384
 5207 0046 4FF42052 		mov	r2, #10240
 5208 004a C4F20002 		movt	r2, 16384
 5209 004e 116C     		ldr	r1, [r2, #64]
 5210 0050 7A68     		ldr	r2, [r7, #4]
 5211 0052 0A43     		orrs	r2, r2, r1
 5212 0054 1A64     		str	r2, [r3, #64]
2344:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 5213              		.loc 1 2344 0
 5214 0056 0837     		adds	r7, r7, #8
 5215 0058 BD46     		mov	sp, r7
 5216              		@ sp needed
 5217 005a 80BD     		pop	{r7, pc}
 5218              		.cfi_endproc
 5219              	.LFE156:
 5221              		.section	.text.RTC_TimeStampPinSelection,"ax",%progbits
 5222              		.align	2
 5223              		.global	RTC_TimeStampPinSelection
 5224              		.thumb
 5225              		.thumb_func
 5227              	RTC_TimeStampPinSelection:
 5228              	.LFB157:
2345:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2346:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2347:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Selects the RTC TimeStamp Pin.
2348:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TimeStampPin: specifies the RTC TimeStamp Pin.
2349:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
2350:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_TimeStampPin_PC13: PC13 is selected as RTC TimeStamp Pin.
2351:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_TimeStampPin_PI8: PI8 is selected as RTC TimeStamp Pin.    
2352:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2353:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2354:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TimeStampPinSelection(uint32_t RTC_TimeStampPin)
2355:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 5229              		.loc 1 2355 0
 5230              		.cfi_startproc
 5231              		@ args = 0, pretend = 0, frame = 8
 5232              		@ frame_needed = 1, uses_anonymous_args = 0
 5233 0000 80B5     		push	{r7, lr}
 5234              	.LCFI137:
 5235              		.cfi_def_cfa_offset 8
 5236              		.cfi_offset 7, -8
 5237              		.cfi_offset 14, -4
 5238 0002 82B0     		sub	sp, sp, #8
 5239              	.LCFI138:
 5240              		.cfi_def_cfa_offset 16
 5241 0004 00AF     		add	r7, sp, #0
 5242              	.LCFI139:
 5243              		.cfi_def_cfa_register 7
 5244 0006 7860     		str	r0, [r7, #4]
2356:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2357:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
 5245              		.loc 1 2357 0
 5246 0008 7B68     		ldr	r3, [r7, #4]
 5247 000a 002B     		cmp	r3, #0
 5248 000c 0BD0     		beq	.L246
 5249              		.loc 1 2357 0 is_stmt 0 discriminator 1
 5250 000e 7B68     		ldr	r3, [r7, #4]
 5251 0010 B3F5003F 		cmp	r3, #131072
 5252 0014 07D0     		beq	.L246
 5253 0016 40F20000 		movw	r0, #:lower16:.LC0
 5254 001a C0F20000 		movt	r0, #:upper16:.LC0
 5255 001e 40F63511 		movw	r1, #2357
 5256 0022 FFF7FEFF 		bl	assert_failed
 5257              	.L246:
2358:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2359:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_TSINSEL);
 5258              		.loc 1 2359 0 is_stmt 1
 5259 0026 4FF42053 		mov	r3, #10240
 5260 002a C4F20003 		movt	r3, 16384
 5261 002e 4FF42052 		mov	r2, #10240
 5262 0032 C4F20002 		movt	r2, 16384
 5263 0036 126C     		ldr	r2, [r2, #64]
 5264 0038 22F40032 		bic	r2, r2, #131072
 5265 003c 1A64     		str	r2, [r3, #64]
2360:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_TimeStampPin);  
 5266              		.loc 1 2360 0
 5267 003e 4FF42053 		mov	r3, #10240
 5268 0042 C4F20003 		movt	r3, 16384
 5269 0046 4FF42052 		mov	r2, #10240
 5270 004a C4F20002 		movt	r2, 16384
 5271 004e 116C     		ldr	r1, [r2, #64]
 5272 0050 7A68     		ldr	r2, [r7, #4]
 5273 0052 0A43     		orrs	r2, r2, r1
 5274 0054 1A64     		str	r2, [r3, #64]
2361:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 5275              		.loc 1 2361 0
 5276 0056 0837     		adds	r7, r7, #8
 5277 0058 BD46     		mov	sp, r7
 5278              		@ sp needed
 5279 005a 80BD     		pop	{r7, pc}
 5280              		.cfi_endproc
 5281              	.LFE157:
 5283              		.section	.text.RTC_OutputTypeConfig,"ax",%progbits
 5284              		.align	2
 5285              		.global	RTC_OutputTypeConfig
 5286              		.thumb
 5287              		.thumb_func
 5289              	RTC_OutputTypeConfig:
 5290              	.LFB158:
2362:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2363:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2364:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the RTC Output Pin mode. 
2365:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_OutputType: specifies the RTC Output (PC13) pin mode.
2366:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
2367:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_OutputType_OpenDrain: RTC Output (PC13) is configured in 
2368:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                    Open Drain mode.
2369:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_OutputType_PushPull:  RTC Output (PC13) is configured in 
2370:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                    Push Pull mode.    
2371:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2372:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2373:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_OutputTypeConfig(uint32_t RTC_OutputType)
2374:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 5291              		.loc 1 2374 0
 5292              		.cfi_startproc
 5293              		@ args = 0, pretend = 0, frame = 8
 5294              		@ frame_needed = 1, uses_anonymous_args = 0
 5295 0000 80B5     		push	{r7, lr}
 5296              	.LCFI140:
 5297              		.cfi_def_cfa_offset 8
 5298              		.cfi_offset 7, -8
 5299              		.cfi_offset 14, -4
 5300 0002 82B0     		sub	sp, sp, #8
 5301              	.LCFI141:
 5302              		.cfi_def_cfa_offset 16
 5303 0004 00AF     		add	r7, sp, #0
 5304              	.LCFI142:
 5305              		.cfi_def_cfa_register 7
 5306 0006 7860     		str	r0, [r7, #4]
2375:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2376:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_OUTPUT_TYPE(RTC_OutputType));
 5307              		.loc 1 2376 0
 5308 0008 7B68     		ldr	r3, [r7, #4]
 5309 000a 002B     		cmp	r3, #0
 5310 000c 0BD0     		beq	.L248
 5311              		.loc 1 2376 0 is_stmt 0 discriminator 1
 5312 000e 7B68     		ldr	r3, [r7, #4]
 5313 0010 B3F5802F 		cmp	r3, #262144
 5314 0014 07D0     		beq	.L248
 5315 0016 40F20000 		movw	r0, #:lower16:.LC0
 5316 001a C0F20000 		movt	r0, #:upper16:.LC0
 5317 001e 40F64811 		movw	r1, #2376
 5318 0022 FFF7FEFF 		bl	assert_failed
 5319              	.L248:
2377:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2378:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_ALARMOUTTYPE);
 5320              		.loc 1 2378 0 is_stmt 1
 5321 0026 4FF42053 		mov	r3, #10240
 5322 002a C4F20003 		movt	r3, 16384
 5323 002e 4FF42052 		mov	r2, #10240
 5324 0032 C4F20002 		movt	r2, 16384
 5325 0036 126C     		ldr	r2, [r2, #64]
 5326 0038 22F48022 		bic	r2, r2, #262144
 5327 003c 1A64     		str	r2, [r3, #64]
2379:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_OutputType);  
 5328              		.loc 1 2379 0
 5329 003e 4FF42053 		mov	r3, #10240
 5330 0042 C4F20003 		movt	r3, 16384
 5331 0046 4FF42052 		mov	r2, #10240
 5332 004a C4F20002 		movt	r2, 16384
 5333 004e 116C     		ldr	r1, [r2, #64]
 5334 0050 7A68     		ldr	r2, [r7, #4]
 5335 0052 0A43     		orrs	r2, r2, r1
 5336 0054 1A64     		str	r2, [r3, #64]
2380:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 5337              		.loc 1 2380 0
 5338 0056 0837     		adds	r7, r7, #8
 5339 0058 BD46     		mov	sp, r7
 5340              		@ sp needed
 5341 005a 80BD     		pop	{r7, pc}
 5342              		.cfi_endproc
 5343              	.LFE158:
 5345              		.section	.text.RTC_SynchroShiftConfig,"ax",%progbits
 5346              		.align	2
 5347              		.global	RTC_SynchroShiftConfig
 5348              		.thumb
 5349              		.thumb_func
 5351              	RTC_SynchroShiftConfig:
 5352              	.LFB159:
2381:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2382:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2383:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
2384:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2385:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2386:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group12 Shift control synchronisation functions
2387:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Shift control synchronisation functions 
2388:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
2389:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
2390:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
2391:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    Shift control synchronisation functions
2392:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
2393:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2394:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
2395:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
2396:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2397:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2398:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2399:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the Synchronization Shift Control Settings.
2400:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   When REFCKON is set, firmware must not write to Shift control register 
2401:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_ShiftAdd1S : Select to add or not 1 second to the time Calendar.
2402:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values :
2403:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_ShiftAdd1S_Set  : Add one second to the clock calendar. 
2404:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_ShiftAdd1S_Reset: No effect.
2405:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_ShiftSubFS: Select the number of Second Fractions to Substitute.
2406:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         This parameter can be one any value from 0 to 0x7FFF.
2407:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
2408:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Shift registers are configured
2409:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC Shift registers are not configured
2410:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** */
2411:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_SynchroShiftConfig(uint32_t RTC_ShiftAdd1S, uint32_t RTC_ShiftSubFS)
2412:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 5353              		.loc 1 2412 0
 5354              		.cfi_startproc
 5355              		@ args = 0, pretend = 0, frame = 16
 5356              		@ frame_needed = 1, uses_anonymous_args = 0
 5357 0000 80B5     		push	{r7, lr}
 5358              	.LCFI143:
 5359              		.cfi_def_cfa_offset 8
 5360              		.cfi_offset 7, -8
 5361              		.cfi_offset 14, -4
 5362 0002 84B0     		sub	sp, sp, #16
 5363              	.LCFI144:
 5364              		.cfi_def_cfa_offset 24
 5365 0004 00AF     		add	r7, sp, #0
 5366              	.LCFI145:
 5367              		.cfi_def_cfa_register 7
 5368 0006 7860     		str	r0, [r7, #4]
 5369 0008 3960     		str	r1, [r7]
2413:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 5370              		.loc 1 2413 0
 5371 000a 0023     		movs	r3, #0
 5372 000c FB73     		strb	r3, [r7, #15]
2414:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t shpfcount = 0;
 5373              		.loc 1 2414 0
 5374 000e 0023     		movs	r3, #0
 5375 0010 BB60     		str	r3, [r7, #8]
2415:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2416:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2417:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SHIFT_ADD1S(RTC_ShiftAdd1S));
 5376              		.loc 1 2417 0
 5377 0012 7B68     		ldr	r3, [r7, #4]
 5378 0014 002B     		cmp	r3, #0
 5379 0016 0BD0     		beq	.L250
 5380              		.loc 1 2417 0 is_stmt 0 discriminator 1
 5381 0018 7B68     		ldr	r3, [r7, #4]
 5382 001a B3F1004F 		cmp	r3, #-2147483648
 5383 001e 07D0     		beq	.L250
 5384 0020 40F20000 		movw	r0, #:lower16:.LC0
 5385 0024 C0F20000 		movt	r0, #:upper16:.LC0
 5386 0028 40F67111 		movw	r1, #2417
 5387 002c FFF7FEFF 		bl	assert_failed
 5388              	.L250:
2418:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SHIFT_SUBFS(RTC_ShiftSubFS));
 5389              		.loc 1 2418 0 is_stmt 1
 5390 0030 3B68     		ldr	r3, [r7]
 5391 0032 B3F5004F 		cmp	r3, #32768
 5392 0036 07D3     		bcc	.L251
 5393              		.loc 1 2418 0 is_stmt 0 discriminator 1
 5394 0038 40F20000 		movw	r0, #:lower16:.LC0
 5395 003c C0F20000 		movt	r0, #:upper16:.LC0
 5396 0040 40F67211 		movw	r1, #2418
 5397 0044 FFF7FEFF 		bl	assert_failed
 5398              	.L251:
2419:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2420:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
2421:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 5399              		.loc 1 2421 0 is_stmt 1
 5400 0048 4FF42053 		mov	r3, #10240
 5401 004c C4F20003 		movt	r3, 16384
 5402 0050 CA22     		movs	r2, #202
 5403 0052 5A62     		str	r2, [r3, #36]
2422:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 5404              		.loc 1 2422 0
 5405 0054 4FF42053 		mov	r3, #10240
 5406 0058 C4F20003 		movt	r3, 16384
 5407 005c 5322     		movs	r2, #83
 5408 005e 5A62     		str	r2, [r3, #36]
2423:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2424:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check if a Shift is pending*/
2425:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_SHPF) != RESET)
 5409              		.loc 1 2425 0
 5410 0060 4FF42053 		mov	r3, #10240
 5411 0064 C4F20003 		movt	r3, 16384
 5412 0068 DB68     		ldr	r3, [r3, #12]
 5413 006a 03F00803 		and	r3, r3, #8
 5414 006e 002B     		cmp	r3, #0
 5415 0070 10D0     		beq	.L252
2426:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2427:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Wait until the shift is completed*/
2428:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     while (((RTC->ISR & RTC_ISR_SHPF) != RESET) && (shpfcount != SHPF_TIMEOUT))
 5416              		.loc 1 2428 0
 5417 0072 02E0     		b	.L253
 5418              	.L254:
2429:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
2430:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       shpfcount++;
 5419              		.loc 1 2430 0
 5420 0074 BB68     		ldr	r3, [r7, #8]
 5421 0076 0133     		adds	r3, r3, #1
 5422 0078 BB60     		str	r3, [r7, #8]
 5423              	.L253:
2428:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 5424              		.loc 1 2428 0 discriminator 1
 5425 007a 4FF42053 		mov	r3, #10240
 5426 007e C4F20003 		movt	r3, 16384
 5427 0082 DB68     		ldr	r3, [r3, #12]
 5428 0084 03F00803 		and	r3, r3, #8
 5429 0088 002B     		cmp	r3, #0
 5430 008a 03D0     		beq	.L252
2428:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 5431              		.loc 1 2428 0 is_stmt 0 discriminator 2
 5432 008c BB68     		ldr	r3, [r7, #8]
 5433 008e B3F5805F 		cmp	r3, #4096
 5434 0092 EFD1     		bne	.L254
 5435              	.L252:
2431:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
2432:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2433:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2434:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check if the Shift pending is completed or if there is no Shift operation at all*/
2435:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_SHPF) == RESET)
 5436              		.loc 1 2435 0 is_stmt 1
 5437 0094 4FF42053 		mov	r3, #10240
 5438 0098 C4F20003 		movt	r3, 16384
 5439 009c DB68     		ldr	r3, [r3, #12]
 5440 009e 03F00803 		and	r3, r3, #8
 5441 00a2 002B     		cmp	r3, #0
 5442 00a4 1ED1     		bne	.L255
2436:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2437:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* check if the reference clock detection is disabled */
2438:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if((RTC->CR & RTC_CR_REFCKON) == RESET)
 5443              		.loc 1 2438 0
 5444 00a6 4FF42053 		mov	r3, #10240
 5445 00aa C4F20003 		movt	r3, 16384
 5446 00ae 9B68     		ldr	r3, [r3, #8]
 5447 00b0 03F01003 		and	r3, r3, #16
 5448 00b4 002B     		cmp	r3, #0
 5449 00b6 12D1     		bne	.L256
2439:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
2440:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       /* Configure the Shift settings */
2441:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->SHIFTR = (uint32_t)(uint32_t)(RTC_ShiftSubFS) | (uint32_t)(RTC_ShiftAdd1S);
 5450              		.loc 1 2441 0
 5451 00b8 4FF42053 		mov	r3, #10240
 5452 00bc C4F20003 		movt	r3, 16384
 5453 00c0 3968     		ldr	r1, [r7]
 5454 00c2 7A68     		ldr	r2, [r7, #4]
 5455 00c4 0A43     		orrs	r2, r2, r1
 5456 00c6 DA62     		str	r2, [r3, #44]
2442:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
2443:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       if(RTC_WaitForSynchro() == ERROR)
 5457              		.loc 1 2443 0
 5458 00c8 FFF7FEFF 		bl	RTC_WaitForSynchro
 5459 00cc 0346     		mov	r3, r0
 5460 00ce 002B     		cmp	r3, #0
 5461 00d0 02D1     		bne	.L257
2444:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       {
2445:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****         status = ERROR;
 5462              		.loc 1 2445 0
 5463 00d2 0023     		movs	r3, #0
 5464 00d4 FB73     		strb	r3, [r7, #15]
 5465 00d6 07E0     		b	.L260
 5466              	.L257:
2446:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       }
2447:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       else
2448:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       {
2449:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****         status = SUCCESS;
 5467              		.loc 1 2449 0
 5468 00d8 0123     		movs	r3, #1
 5469 00da FB73     		strb	r3, [r7, #15]
 5470 00dc 04E0     		b	.L260
 5471              	.L256:
2450:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       }
2451:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
2452:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
2453:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
2454:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = ERROR;
 5472              		.loc 1 2454 0
 5473 00de 0023     		movs	r3, #0
 5474 00e0 FB73     		strb	r3, [r7, #15]
 5475 00e2 01E0     		b	.L260
 5476              	.L255:
2455:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
2456:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2457:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
2458:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2459:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
 5477              		.loc 1 2459 0
 5478 00e4 0023     		movs	r3, #0
 5479 00e6 FB73     		strb	r3, [r7, #15]
 5480              	.L260:
2460:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2461:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2462:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
2463:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;
 5481              		.loc 1 2463 0
 5482 00e8 4FF42053 		mov	r3, #10240
 5483 00ec C4F20003 		movt	r3, 16384
 5484 00f0 FF22     		movs	r2, #255
 5485 00f2 5A62     		str	r2, [r3, #36]
2464:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2465:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (ErrorStatus)(status);
 5486              		.loc 1 2465 0
 5487 00f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2466:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 5488              		.loc 1 2466 0
 5489 00f6 1846     		mov	r0, r3
 5490 00f8 1037     		adds	r7, r7, #16
 5491 00fa BD46     		mov	sp, r7
 5492              		@ sp needed
 5493 00fc 80BD     		pop	{r7, pc}
 5494              		.cfi_endproc
 5495              	.LFE159:
 5497 00fe 00BF     		.section	.text.RTC_ITConfig,"ax",%progbits
 5498              		.align	2
 5499              		.global	RTC_ITConfig
 5500              		.thumb
 5501              		.thumb_func
 5503              	RTC_ITConfig:
 5504              	.LFB160:
2467:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2468:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2469:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
2470:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2471:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2472:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group13 Interrupts and flags management functions
2473:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Interrupts and flags management functions  
2474:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
2475:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
2476:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
2477:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                        Interrupts and flags management functions
2478:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
2479:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  All RTC interrupts are connected to the EXTI controller.
2480:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  
2481:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  - To enable the RTC Alarm interrupt, the following sequence is required:
2482:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    - Configure and enable the EXTI Line 17 in interrupt mode and select the rising 
2483:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      edge sensitivity using the EXTI_Init() function.
2484:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    - Configure and enable the RTC_Alarm IRQ channel in the NVIC using the NVIC_Init()
2485:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      function.
2486:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    - Configure the RTC to generate RTC alarms (Alarm A and/or Alarm B) using
2487:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      the RTC_SetAlarm() and RTC_AlarmCmd() functions.
2488:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2489:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  - To enable the RTC Wakeup interrupt, the following sequence is required:
2490:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    - Configure and enable the EXTI Line 22 in interrupt mode and select the rising 
2491:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      edge sensitivity using the EXTI_Init() function.
2492:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    - Configure and enable the RTC_WKUP IRQ channel in the NVIC using the NVIC_Init()
2493:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      function.
2494:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    - Configure the RTC to generate the RTC wakeup timer event using the 
2495:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      RTC_WakeUpClockConfig(), RTC_SetWakeUpCounter() and RTC_WakeUpCmd() functions.
2496:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2497:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  - To enable the RTC Tamper interrupt, the following sequence is required:
2498:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    - Configure and enable the EXTI Line 21 in interrupt mode and select the rising 
2499:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      edge sensitivity using the EXTI_Init() function.
2500:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    - Configure and enable the TAMP_STAMP IRQ channel in the NVIC using the NVIC_Init()
2501:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      function.
2502:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    - Configure the RTC to detect the RTC tamper event using the 
2503:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      RTC_TamperTriggerConfig() and RTC_TamperCmd() functions.
2504:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2505:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  - To enable the RTC TimeStamp interrupt, the following sequence is required:
2506:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    - Configure and enable the EXTI Line 21 in interrupt mode and select the rising 
2507:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      edge sensitivity using the EXTI_Init() function.
2508:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    - Configure and enable the TAMP_STAMP IRQ channel in the NVIC using the NVIC_Init()
2509:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      function.
2510:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    - Configure the RTC to detect the RTC time-stamp event using the 
2511:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      RTC_TimeStampCmd() functions.
2512:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2513:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
2514:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
2515:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2516:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2517:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2518:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or disables the specified RTC interrupts.
2519:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupt sources to be enabled or disabled. 
2520:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be any combination of the following values:
2521:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TS:  Time Stamp interrupt mask
2522:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_WUT:  WakeUp Timer interrupt mask
2523:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_ALRB:  Alarm B interrupt mask
2524:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_ALRA:  Alarm A interrupt mask
2525:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TAMP: Tamper event interrupt mask
2526:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the specified RTC interrupts.
2527:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
2528:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2529:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2530:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_ITConfig(uint32_t RTC_IT, FunctionalState NewState)
2531:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 5505              		.loc 1 2531 0
 5506              		.cfi_startproc
 5507              		@ args = 0, pretend = 0, frame = 8
 5508              		@ frame_needed = 1, uses_anonymous_args = 0
 5509 0000 80B5     		push	{r7, lr}
 5510              	.LCFI146:
 5511              		.cfi_def_cfa_offset 8
 5512              		.cfi_offset 7, -8
 5513              		.cfi_offset 14, -4
 5514 0002 82B0     		sub	sp, sp, #8
 5515              	.LCFI147:
 5516              		.cfi_def_cfa_offset 16
 5517 0004 00AF     		add	r7, sp, #0
 5518              	.LCFI148:
 5519              		.cfi_def_cfa_register 7
 5520 0006 7860     		str	r0, [r7, #4]
 5521 0008 0B46     		mov	r3, r1
 5522 000a FB70     		strb	r3, [r7, #3]
2532:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2533:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CONFIG_IT(RTC_IT));
 5523              		.loc 1 2533 0
 5524 000c 7B68     		ldr	r3, [r7, #4]
 5525 000e 002B     		cmp	r3, #0
 5526 0010 06D0     		beq	.L263
 5527              		.loc 1 2533 0 is_stmt 0 discriminator 2
 5528 0012 7B68     		ldr	r3, [r7, #4]
 5529 0014 23F47043 		bic	r3, r3, #61440
 5530 0018 23F00403 		bic	r3, r3, #4
 5531 001c 002B     		cmp	r3, #0
 5532 001e 07D0     		beq	.L264
 5533              	.L263:
 5534              		.loc 1 2533 0 discriminator 1
 5535 0020 40F20000 		movw	r0, #:lower16:.LC0
 5536 0024 C0F20000 		movt	r0, #:upper16:.LC0
 5537 0028 40F6E511 		movw	r1, #2533
 5538 002c FFF7FEFF 		bl	assert_failed
 5539              	.L264:
2534:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 5540              		.loc 1 2534 0 is_stmt 1
 5541 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5542 0032 002B     		cmp	r3, #0
 5543 0034 0AD0     		beq	.L265
 5544              		.loc 1 2534 0 is_stmt 0 discriminator 1
 5545 0036 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5546 0038 012B     		cmp	r3, #1
 5547 003a 07D0     		beq	.L265
 5548 003c 40F20000 		movw	r0, #:lower16:.LC0
 5549 0040 C0F20000 		movt	r0, #:upper16:.LC0
 5550 0044 40F6E611 		movw	r1, #2534
 5551 0048 FFF7FEFF 		bl	assert_failed
 5552              	.L265:
2535:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2536:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
2537:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 5553              		.loc 1 2537 0 is_stmt 1
 5554 004c 4FF42053 		mov	r3, #10240
 5555 0050 C4F20003 		movt	r3, 16384
 5556 0054 CA22     		movs	r2, #202
 5557 0056 5A62     		str	r2, [r3, #36]
2538:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 5558              		.loc 1 2538 0
 5559 0058 4FF42053 		mov	r3, #10240
 5560 005c C4F20003 		movt	r3, 16384
 5561 0060 5322     		movs	r2, #83
 5562 0062 5A62     		str	r2, [r3, #36]
2539:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2540:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
 5563              		.loc 1 2540 0
 5564 0064 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5565 0066 002B     		cmp	r3, #0
 5566 0068 1CD0     		beq	.L266
2541:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2542:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the Interrupts in the RTC_CR register */
2543:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR |= (uint32_t)(RTC_IT & ~RTC_TAFCR_TAMPIE);
 5567              		.loc 1 2543 0
 5568 006a 4FF42053 		mov	r3, #10240
 5569 006e C4F20003 		movt	r3, 16384
 5570 0072 4FF42052 		mov	r2, #10240
 5571 0076 C4F20002 		movt	r2, 16384
 5572 007a 9168     		ldr	r1, [r2, #8]
 5573 007c 7A68     		ldr	r2, [r7, #4]
 5574 007e 22F00402 		bic	r2, r2, #4
 5575 0082 0A43     		orrs	r2, r2, r1
 5576 0084 9A60     		str	r2, [r3, #8]
2544:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the Tamper Interrupt in the RTC_TAFCR */
2545:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR |= (uint32_t)(RTC_IT & RTC_TAFCR_TAMPIE);
 5577              		.loc 1 2545 0
 5578 0086 4FF42053 		mov	r3, #10240
 5579 008a C4F20003 		movt	r3, 16384
 5580 008e 4FF42052 		mov	r2, #10240
 5581 0092 C4F20002 		movt	r2, 16384
 5582 0096 116C     		ldr	r1, [r2, #64]
 5583 0098 7A68     		ldr	r2, [r7, #4]
 5584 009a 02F00402 		and	r2, r2, #4
 5585 009e 0A43     		orrs	r2, r2, r1
 5586 00a0 1A64     		str	r2, [r3, #64]
 5587 00a2 1DE0     		b	.L267
 5588              	.L266:
2546:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2547:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
2548:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2549:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the Interrupts in the RTC_CR register */
2550:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR &= (uint32_t)~(RTC_IT & (uint32_t)~RTC_TAFCR_TAMPIE);
 5589              		.loc 1 2550 0
 5590 00a4 4FF42053 		mov	r3, #10240
 5591 00a8 C4F20003 		movt	r3, 16384
 5592 00ac 4FF42052 		mov	r2, #10240
 5593 00b0 C4F20002 		movt	r2, 16384
 5594 00b4 9168     		ldr	r1, [r2, #8]
 5595 00b6 7A68     		ldr	r2, [r7, #4]
 5596 00b8 22F00402 		bic	r2, r2, #4
 5597 00bc D243     		mvns	r2, r2
 5598 00be 0A40     		ands	r2, r2, r1
 5599 00c0 9A60     		str	r2, [r3, #8]
2551:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the Tamper Interrupt in the RTC_TAFCR */
2552:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR &= (uint32_t)~(RTC_IT & RTC_TAFCR_TAMPIE);
 5600              		.loc 1 2552 0
 5601 00c2 4FF42053 		mov	r3, #10240
 5602 00c6 C4F20003 		movt	r3, 16384
 5603 00ca 4FF42052 		mov	r2, #10240
 5604 00ce C4F20002 		movt	r2, 16384
 5605 00d2 116C     		ldr	r1, [r2, #64]
 5606 00d4 7A68     		ldr	r2, [r7, #4]
 5607 00d6 02F00402 		and	r2, r2, #4
 5608 00da D243     		mvns	r2, r2
 5609 00dc 0A40     		ands	r2, r2, r1
 5610 00de 1A64     		str	r2, [r3, #64]
 5611              	.L267:
2553:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2554:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
2555:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 5612              		.loc 1 2555 0
 5613 00e0 4FF42053 		mov	r3, #10240
 5614 00e4 C4F20003 		movt	r3, 16384
 5615 00e8 FF22     		movs	r2, #255
 5616 00ea 5A62     		str	r2, [r3, #36]
2556:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 5617              		.loc 1 2556 0
 5618 00ec 0837     		adds	r7, r7, #8
 5619 00ee BD46     		mov	sp, r7
 5620              		@ sp needed
 5621 00f0 80BD     		pop	{r7, pc}
 5622              		.cfi_endproc
 5623              	.LFE160:
 5625 00f2 00BF     		.section	.text.RTC_GetFlagStatus,"ax",%progbits
 5626              		.align	2
 5627              		.global	RTC_GetFlagStatus
 5628              		.thumb
 5629              		.thumb_func
 5631              	RTC_GetFlagStatus:
 5632              	.LFB161:
2557:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2558:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2559:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Checks whether the specified RTC flag is set or not.
2560:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_FLAG: specifies the flag to check.
2561:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
2562:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TAMP1F: Tamper 1 event flag
2563:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TSOVF: Time Stamp OverFlow flag
2564:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TSF: Time Stamp event flag
2565:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_WUTF: WakeUp Timer flag
2566:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_ALRBF: Alarm B flag
2567:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_ALRAF: Alarm A flag
2568:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_INITF: Initialization mode flag
2569:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_RSF: Registers Synchronized flag
2570:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_INITS: Registers Configured flag
2571:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_WUTWF: WakeUp Timer Write flag
2572:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_ALRBWF: Alarm B Write flag
2573:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_ALRAWF: Alarm A write flag
2574:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval The new state of RTC_FLAG (SET or RESET).
2575:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2576:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** FlagStatus RTC_GetFlagStatus(uint32_t RTC_FLAG)
2577:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 5633              		.loc 1 2577 0
 5634              		.cfi_startproc
 5635              		@ args = 0, pretend = 0, frame = 16
 5636              		@ frame_needed = 1, uses_anonymous_args = 0
 5637 0000 80B5     		push	{r7, lr}
 5638              	.LCFI149:
 5639              		.cfi_def_cfa_offset 8
 5640              		.cfi_offset 7, -8
 5641              		.cfi_offset 14, -4
 5642 0002 84B0     		sub	sp, sp, #16
 5643              	.LCFI150:
 5644              		.cfi_def_cfa_offset 24
 5645 0004 00AF     		add	r7, sp, #0
 5646              	.LCFI151:
 5647              		.cfi_def_cfa_register 7
 5648 0006 7860     		str	r0, [r7, #4]
2578:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   FlagStatus bitstatus = RESET;
 5649              		.loc 1 2578 0
 5650 0008 0023     		movs	r3, #0
 5651 000a FB73     		strb	r3, [r7, #15]
2579:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 5652              		.loc 1 2579 0
 5653 000c 0023     		movs	r3, #0
 5654 000e BB60     		str	r3, [r7, #8]
2580:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2581:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2582:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_GET_FLAG(RTC_FLAG));
 5655              		.loc 1 2582 0
 5656 0010 7B68     		ldr	r3, [r7, #4]
 5657 0012 B3F5805F 		cmp	r3, #4096
 5658 0016 31D0     		beq	.L269
 5659              		.loc 1 2582 0 is_stmt 0 discriminator 1
 5660 0018 7B68     		ldr	r3, [r7, #4]
 5661 001a B3F5006F 		cmp	r3, #2048
 5662 001e 2DD0     		beq	.L269
 5663 0020 7B68     		ldr	r3, [r7, #4]
 5664 0022 B3F5806F 		cmp	r3, #1024
 5665 0026 29D0     		beq	.L269
 5666 0028 7B68     		ldr	r3, [r7, #4]
 5667 002a B3F5007F 		cmp	r3, #512
 5668 002e 25D0     		beq	.L269
 5669 0030 7B68     		ldr	r3, [r7, #4]
 5670 0032 B3F5807F 		cmp	r3, #256
 5671 0036 21D0     		beq	.L269
 5672 0038 7B68     		ldr	r3, [r7, #4]
 5673 003a 402B     		cmp	r3, #64
 5674 003c 1ED0     		beq	.L269
 5675 003e 7B68     		ldr	r3, [r7, #4]
 5676 0040 202B     		cmp	r3, #32
 5677 0042 1BD0     		beq	.L269
 5678 0044 7B68     		ldr	r3, [r7, #4]
 5679 0046 042B     		cmp	r3, #4
 5680 0048 18D0     		beq	.L269
 5681 004a 7B68     		ldr	r3, [r7, #4]
 5682 004c 022B     		cmp	r3, #2
 5683 004e 15D0     		beq	.L269
 5684 0050 7B68     		ldr	r3, [r7, #4]
 5685 0052 012B     		cmp	r3, #1
 5686 0054 12D0     		beq	.L269
 5687 0056 7B68     		ldr	r3, [r7, #4]
 5688 0058 B3F5005F 		cmp	r3, #8192
 5689 005c 0ED0     		beq	.L269
 5690 005e 7B68     		ldr	r3, [r7, #4]
 5691 0060 B3F5803F 		cmp	r3, #65536
 5692 0064 0AD0     		beq	.L269
 5693 0066 7B68     		ldr	r3, [r7, #4]
 5694 0068 082B     		cmp	r3, #8
 5695 006a 07D0     		beq	.L269
 5696 006c 40F20000 		movw	r0, #:lower16:.LC0
 5697 0070 C0F20000 		movt	r0, #:upper16:.LC0
 5698 0074 40F61621 		movw	r1, #2582
 5699 0078 FFF7FEFF 		bl	assert_failed
 5700              	.L269:
2583:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2584:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get all the flags */
2585:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC->ISR & RTC_FLAGS_MASK);
 5701              		.loc 1 2585 0 is_stmt 1
 5702 007c 4FF42053 		mov	r3, #10240
 5703 0080 C4F20003 		movt	r3, 16384
 5704 0084 DA68     		ldr	r2, [r3, #12]
 5705 0086 43F67773 		movw	r3, #16247
 5706 008a 1340     		ands	r3, r3, r2
 5707 008c BB60     		str	r3, [r7, #8]
2586:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2587:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Return the status of the flag */
2588:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((tmpreg & RTC_FLAG) != (uint32_t)RESET)
 5708              		.loc 1 2588 0
 5709 008e BA68     		ldr	r2, [r7, #8]
 5710 0090 7B68     		ldr	r3, [r7, #4]
 5711 0092 1340     		ands	r3, r3, r2
 5712 0094 002B     		cmp	r3, #0
 5713 0096 02D0     		beq	.L270
2589:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2590:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     bitstatus = SET;
 5714              		.loc 1 2590 0
 5715 0098 0123     		movs	r3, #1
 5716 009a FB73     		strb	r3, [r7, #15]
 5717 009c 01E0     		b	.L271
 5718              	.L270:
2591:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2592:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
2593:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2594:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     bitstatus = RESET;
 5719              		.loc 1 2594 0
 5720 009e 0023     		movs	r3, #0
 5721 00a0 FB73     		strb	r3, [r7, #15]
 5722              	.L271:
2595:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2596:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return bitstatus;
 5723              		.loc 1 2596 0
 5724 00a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2597:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 5725              		.loc 1 2597 0
 5726 00a4 1846     		mov	r0, r3
 5727 00a6 1037     		adds	r7, r7, #16
 5728 00a8 BD46     		mov	sp, r7
 5729              		@ sp needed
 5730 00aa 80BD     		pop	{r7, pc}
 5731              		.cfi_endproc
 5732              	.LFE161:
 5734              		.section	.text.RTC_ClearFlag,"ax",%progbits
 5735              		.align	2
 5736              		.global	RTC_ClearFlag
 5737              		.thumb
 5738              		.thumb_func
 5740              	RTC_ClearFlag:
 5741              	.LFB162:
2598:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2599:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2600:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Clears the RTC's pending flags.
2601:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_FLAG: specifies the RTC flag to clear.
2602:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be any combination of the following values:
2603:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TAMP1F: Tamper 1 event flag
2604:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TSOVF: Time Stamp Overflow flag 
2605:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TSF: Time Stamp event flag
2606:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_WUTF: WakeUp Timer flag
2607:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_ALRBF: Alarm B flag
2608:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_ALRAF: Alarm A flag
2609:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_RSF: Registers Synchronized flag
2610:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2611:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2612:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_ClearFlag(uint32_t RTC_FLAG)
2613:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 5742              		.loc 1 2613 0
 5743              		.cfi_startproc
 5744              		@ args = 0, pretend = 0, frame = 8
 5745              		@ frame_needed = 1, uses_anonymous_args = 0
 5746 0000 80B5     		push	{r7, lr}
 5747              	.LCFI152:
 5748              		.cfi_def_cfa_offset 8
 5749              		.cfi_offset 7, -8
 5750              		.cfi_offset 14, -4
 5751 0002 82B0     		sub	sp, sp, #8
 5752              	.LCFI153:
 5753              		.cfi_def_cfa_offset 16
 5754 0004 00AF     		add	r7, sp, #0
 5755              	.LCFI154:
 5756              		.cfi_def_cfa_register 7
 5757 0006 7860     		str	r0, [r7, #4]
2614:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2615:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CLEAR_FLAG(RTC_FLAG));
 5758              		.loc 1 2615 0
 5759 0008 7B68     		ldr	r3, [r7, #4]
 5760 000a 002B     		cmp	r3, #0
 5761 000c 06D0     		beq	.L274
 5762              		.loc 1 2615 0 is_stmt 0 discriminator 2
 5763 000e 7B68     		ldr	r3, [r7, #4]
 5764 0010 23F47F43 		bic	r3, r3, #65280
 5765 0014 23F02003 		bic	r3, r3, #32
 5766 0018 002B     		cmp	r3, #0
 5767 001a 07D0     		beq	.L275
 5768              	.L274:
 5769              		.loc 1 2615 0 discriminator 1
 5770 001c 40F20000 		movw	r0, #:lower16:.LC0
 5771 0020 C0F20000 		movt	r0, #:upper16:.LC0
 5772 0024 40F63721 		movw	r1, #2615
 5773 0028 FFF7FEFF 		bl	assert_failed
 5774              	.L275:
2616:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2617:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear the Flags in the RTC_ISR register */
2618:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->ISR = (uint32_t)((uint32_t)(~((RTC_FLAG | RTC_ISR_INIT)& 0x0000FFFF) | (uint32_t)(RTC->ISR &
 5775              		.loc 1 2618 0 is_stmt 1
 5776 002c 4FF42053 		mov	r3, #10240
 5777 0030 C4F20003 		movt	r3, 16384
 5778 0034 7A68     		ldr	r2, [r7, #4]
 5779 0036 92B2     		uxth	r2, r2
 5780 0038 42F08002 		orr	r2, r2, #128
 5781 003c D143     		mvns	r1, r2
 5782 003e 4FF42052 		mov	r2, #10240
 5783 0042 C4F20002 		movt	r2, 16384
 5784 0046 D268     		ldr	r2, [r2, #12]
 5785 0048 02F08002 		and	r2, r2, #128
 5786 004c 0A43     		orrs	r2, r2, r1
 5787 004e DA60     		str	r2, [r3, #12]
2619:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 5788              		.loc 1 2619 0
 5789 0050 0837     		adds	r7, r7, #8
 5790 0052 BD46     		mov	sp, r7
 5791              		@ sp needed
 5792 0054 80BD     		pop	{r7, pc}
 5793              		.cfi_endproc
 5794              	.LFE162:
 5796 0056 00BF     		.section	.text.RTC_GetITStatus,"ax",%progbits
 5797              		.align	2
 5798              		.global	RTC_GetITStatus
 5799              		.thumb
 5800              		.thumb_func
 5802              	RTC_GetITStatus:
 5803              	.LFB163:
2620:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2621:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2622:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Checks whether the specified RTC interrupt has occurred or not.
2623:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupt source to check.
2624:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
2625:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TS: Time Stamp interrupt 
2626:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_WUT: WakeUp Timer interrupt 
2627:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_ALRB: Alarm B interrupt 
2628:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_ALRA: Alarm A interrupt 
2629:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TAMP1: Tamper 1 event interrupt 
2630:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval The new state of RTC_IT (SET or RESET).
2631:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2632:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ITStatus RTC_GetITStatus(uint32_t RTC_IT)
2633:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 5804              		.loc 1 2633 0
 5805              		.cfi_startproc
 5806              		@ args = 0, pretend = 0, frame = 24
 5807              		@ frame_needed = 1, uses_anonymous_args = 0
 5808 0000 80B5     		push	{r7, lr}
 5809              	.LCFI155:
 5810              		.cfi_def_cfa_offset 8
 5811              		.cfi_offset 7, -8
 5812              		.cfi_offset 14, -4
 5813 0002 86B0     		sub	sp, sp, #24
 5814              	.LCFI156:
 5815              		.cfi_def_cfa_offset 32
 5816 0004 00AF     		add	r7, sp, #0
 5817              	.LCFI157:
 5818              		.cfi_def_cfa_register 7
 5819 0006 7860     		str	r0, [r7, #4]
2634:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ITStatus bitstatus = RESET;
 5820              		.loc 1 2634 0
 5821 0008 0023     		movs	r3, #0
 5822 000a FB75     		strb	r3, [r7, #23]
2635:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0, enablestatus = 0;
 5823              		.loc 1 2635 0
 5824 000c 0023     		movs	r3, #0
 5825 000e 3B61     		str	r3, [r7, #16]
 5826 0010 0023     		movs	r3, #0
 5827 0012 FB60     		str	r3, [r7, #12]
2636:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  
2637:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2638:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_GET_IT(RTC_IT));
 5828              		.loc 1 2638 0
 5829 0014 7B68     		ldr	r3, [r7, #4]
 5830 0016 B3F5004F 		cmp	r3, #32768
 5831 001a 17D0     		beq	.L277
 5832              		.loc 1 2638 0 is_stmt 0 discriminator 1
 5833 001c 7B68     		ldr	r3, [r7, #4]
 5834 001e B3F5804F 		cmp	r3, #16384
 5835 0022 13D0     		beq	.L277
 5836 0024 7B68     		ldr	r3, [r7, #4]
 5837 0026 B3F5005F 		cmp	r3, #8192
 5838 002a 0FD0     		beq	.L277
 5839 002c 7B68     		ldr	r3, [r7, #4]
 5840 002e B3F5805F 		cmp	r3, #4096
 5841 0032 0BD0     		beq	.L277
 5842 0034 7B68     		ldr	r3, [r7, #4]
 5843 0036 B3F5003F 		cmp	r3, #131072
 5844 003a 07D0     		beq	.L277
 5845 003c 40F20000 		movw	r0, #:lower16:.LC0
 5846 0040 C0F20000 		movt	r0, #:upper16:.LC0
 5847 0044 40F64E21 		movw	r1, #2638
 5848 0048 FFF7FEFF 		bl	assert_failed
 5849              	.L277:
2639:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2640:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the TAMPER Interrupt enable bit and pending bit */
2641:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC->TAFCR & (RTC_TAFCR_TAMPIE));
 5850              		.loc 1 2641 0 is_stmt 1
 5851 004c 4FF42053 		mov	r3, #10240
 5852 0050 C4F20003 		movt	r3, 16384
 5853 0054 1B6C     		ldr	r3, [r3, #64]
 5854 0056 03F00403 		and	r3, r3, #4
 5855 005a 3B61     		str	r3, [r7, #16]
2642:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  
2643:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the Interrupt enable Status */
2644:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   enablestatus = (uint32_t)((RTC->CR & RTC_IT) | (tmpreg & (RTC_IT >> 15)));
 5856              		.loc 1 2644 0
 5857 005c 4FF42053 		mov	r3, #10240
 5858 0060 C4F20003 		movt	r3, 16384
 5859 0064 9A68     		ldr	r2, [r3, #8]
 5860 0066 7B68     		ldr	r3, [r7, #4]
 5861 0068 1A40     		ands	r2, r2, r3
 5862 006a 7B68     		ldr	r3, [r7, #4]
 5863 006c D90B     		lsrs	r1, r3, #15
 5864 006e 3B69     		ldr	r3, [r7, #16]
 5865 0070 0B40     		ands	r3, r3, r1
 5866 0072 1343     		orrs	r3, r3, r2
 5867 0074 FB60     		str	r3, [r7, #12]
2645:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2646:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the Interrupt pending bit */
2647:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)((RTC->ISR & (uint32_t)(RTC_IT >> 4)));
 5868              		.loc 1 2647 0
 5869 0076 4FF42053 		mov	r3, #10240
 5870 007a C4F20003 		movt	r3, 16384
 5871 007e DA68     		ldr	r2, [r3, #12]
 5872 0080 7B68     		ldr	r3, [r7, #4]
 5873 0082 1B09     		lsrs	r3, r3, #4
 5874 0084 1340     		ands	r3, r3, r2
 5875 0086 3B61     		str	r3, [r7, #16]
2648:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2649:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the status of the Interrupt */
2650:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((enablestatus != (uint32_t)RESET) && ((tmpreg & 0x0000FFFF) != (uint32_t)RESET))
 5876              		.loc 1 2650 0
 5877 0088 FB68     		ldr	r3, [r7, #12]
 5878 008a 002B     		cmp	r3, #0
 5879 008c 06D0     		beq	.L278
 5880              		.loc 1 2650 0 is_stmt 0 discriminator 1
 5881 008e 3B69     		ldr	r3, [r7, #16]
 5882 0090 9BB2     		uxth	r3, r3
 5883 0092 002B     		cmp	r3, #0
 5884 0094 02D0     		beq	.L278
2651:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2652:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     bitstatus = SET;
 5885              		.loc 1 2652 0 is_stmt 1
 5886 0096 0123     		movs	r3, #1
 5887 0098 FB75     		strb	r3, [r7, #23]
 5888 009a 01E0     		b	.L279
 5889              	.L278:
2653:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2654:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
2655:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2656:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     bitstatus = RESET;
 5890              		.loc 1 2656 0
 5891 009c 0023     		movs	r3, #0
 5892 009e FB75     		strb	r3, [r7, #23]
 5893              	.L279:
2657:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2658:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return bitstatus;
 5894              		.loc 1 2658 0
 5895 00a0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
2659:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 5896              		.loc 1 2659 0
 5897 00a2 1846     		mov	r0, r3
 5898 00a4 1837     		adds	r7, r7, #24
 5899 00a6 BD46     		mov	sp, r7
 5900              		@ sp needed
 5901 00a8 80BD     		pop	{r7, pc}
 5902              		.cfi_endproc
 5903              	.LFE163:
 5905 00aa 00BF     		.section	.text.RTC_ClearITPendingBit,"ax",%progbits
 5906              		.align	2
 5907              		.global	RTC_ClearITPendingBit
 5908              		.thumb
 5909              		.thumb_func
 5911              	RTC_ClearITPendingBit:
 5912              	.LFB164:
2660:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2661:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2662:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Clears the RTC's interrupt pending bits.
2663:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupt pending bit to clear.
2664:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be any combination of the following values:
2665:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TS: Time Stamp interrupt 
2666:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_WUT: WakeUp Timer interrupt 
2667:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_ALRB: Alarm B interrupt 
2668:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_ALRA: Alarm A interrupt 
2669:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TAMP1: Tamper 1 event interrupt 
2670:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2671:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2672:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_ClearITPendingBit(uint32_t RTC_IT)
2673:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 5913              		.loc 1 2673 0
 5914              		.cfi_startproc
 5915              		@ args = 0, pretend = 0, frame = 16
 5916              		@ frame_needed = 1, uses_anonymous_args = 0
 5917 0000 80B5     		push	{r7, lr}
 5918              	.LCFI158:
 5919              		.cfi_def_cfa_offset 8
 5920              		.cfi_offset 7, -8
 5921              		.cfi_offset 14, -4
 5922 0002 84B0     		sub	sp, sp, #16
 5923              	.LCFI159:
 5924              		.cfi_def_cfa_offset 24
 5925 0004 00AF     		add	r7, sp, #0
 5926              	.LCFI160:
 5927              		.cfi_def_cfa_register 7
 5928 0006 7860     		str	r0, [r7, #4]
2674:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 5929              		.loc 1 2674 0
 5930 0008 0023     		movs	r3, #0
 5931 000a FB60     		str	r3, [r7, #12]
2675:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2676:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2677:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CLEAR_IT(RTC_IT));
 5932              		.loc 1 2677 0
 5933 000c 7B68     		ldr	r3, [r7, #4]
 5934 000e 002B     		cmp	r3, #0
 5935 0010 04D0     		beq	.L282
 5936              		.loc 1 2677 0 is_stmt 0 discriminator 2
 5937 0012 7B68     		ldr	r3, [r7, #4]
 5938 0014 23F43C33 		bic	r3, r3, #192512
 5939 0018 002B     		cmp	r3, #0
 5940 001a 07D0     		beq	.L283
 5941              	.L282:
 5942              		.loc 1 2677 0 discriminator 1
 5943 001c 40F20000 		movw	r0, #:lower16:.LC0
 5944 0020 C0F20000 		movt	r0, #:upper16:.LC0
 5945 0024 40F67521 		movw	r1, #2677
 5946 0028 FFF7FEFF 		bl	assert_failed
 5947              	.L283:
2678:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2679:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the RTC_ISR Interrupt pending bits mask */
2680:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC_IT >> 4);
 5948              		.loc 1 2680 0 is_stmt 1
 5949 002c 7B68     		ldr	r3, [r7, #4]
 5950 002e 1B09     		lsrs	r3, r3, #4
 5951 0030 FB60     		str	r3, [r7, #12]
2681:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2682:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear the interrupt pending bits in the RTC_ISR register */
2683:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->ISR = (uint32_t)((uint32_t)(~((tmpreg | RTC_ISR_INIT)& 0x0000FFFF) | (uint32_t)(RTC->ISR & R
 5952              		.loc 1 2683 0
 5953 0032 4FF42053 		mov	r3, #10240
 5954 0036 C4F20003 		movt	r3, 16384
 5955 003a FA68     		ldr	r2, [r7, #12]
 5956 003c 92B2     		uxth	r2, r2
 5957 003e 42F08002 		orr	r2, r2, #128
 5958 0042 D143     		mvns	r1, r2
 5959 0044 4FF42052 		mov	r2, #10240
 5960 0048 C4F20002 		movt	r2, 16384
 5961 004c D268     		ldr	r2, [r2, #12]
 5962 004e 02F08002 		and	r2, r2, #128
 5963 0052 0A43     		orrs	r2, r2, r1
 5964 0054 DA60     		str	r2, [r3, #12]
2684:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 5965              		.loc 1 2684 0
 5966 0056 1037     		adds	r7, r7, #16
 5967 0058 BD46     		mov	sp, r7
 5968              		@ sp needed
 5969 005a 80BD     		pop	{r7, pc}
 5970              		.cfi_endproc
 5971              	.LFE164:
 5973              		.section	.text.RTC_ByteToBcd2,"ax",%progbits
 5974              		.align	2
 5975              		.thumb
 5976              		.thumb_func
 5978              	RTC_ByteToBcd2:
 5979              	.LFB165:
2685:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2686:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2687:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
2688:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2689:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2690:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2691:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Converts a 2 digit decimal to BCD format.
2692:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  Value: Byte to be converted.
2693:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval Converted byte
2694:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2695:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** static uint8_t RTC_ByteToBcd2(uint8_t Value)
2696:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 5980              		.loc 1 2696 0
 5981              		.cfi_startproc
 5982              		@ args = 0, pretend = 0, frame = 16
 5983              		@ frame_needed = 1, uses_anonymous_args = 0
 5984              		@ link register save eliminated.
 5985 0000 80B4     		push	{r7}
 5986              	.LCFI161:
 5987              		.cfi_def_cfa_offset 4
 5988              		.cfi_offset 7, -4
 5989 0002 85B0     		sub	sp, sp, #20
 5990              	.LCFI162:
 5991              		.cfi_def_cfa_offset 24
 5992 0004 00AF     		add	r7, sp, #0
 5993              	.LCFI163:
 5994              		.cfi_def_cfa_register 7
 5995 0006 0346     		mov	r3, r0
 5996 0008 FB71     		strb	r3, [r7, #7]
2697:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint8_t bcdhigh = 0;
 5997              		.loc 1 2697 0
 5998 000a 0023     		movs	r3, #0
 5999 000c FB73     		strb	r3, [r7, #15]
2698:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2699:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   while (Value >= 10)
 6000              		.loc 1 2699 0
 6001 000e 05E0     		b	.L285
 6002              	.L286:
2700:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2701:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     bcdhigh++;
 6003              		.loc 1 2701 0
 6004 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6005 0012 0133     		adds	r3, r3, #1
 6006 0014 FB73     		strb	r3, [r7, #15]
2702:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     Value -= 10;
 6007              		.loc 1 2702 0
 6008 0016 FB79     		ldrb	r3, [r7, #7]
 6009 0018 0A3B     		subs	r3, r3, #10
 6010 001a FB71     		strb	r3, [r7, #7]
 6011              	.L285:
2699:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 6012              		.loc 1 2699 0 discriminator 1
 6013 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6014 001e 092B     		cmp	r3, #9
 6015 0020 F6D8     		bhi	.L286
2703:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2704:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2705:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return  ((uint8_t)(bcdhigh << 4) | Value);
 6016              		.loc 1 2705 0
 6017 0022 FB7B     		ldrb	r3, [r7, #15]
 6018 0024 1B01     		lsls	r3, r3, #4
 6019 0026 DAB2     		uxtb	r2, r3
 6020 0028 FB79     		ldrb	r3, [r7, #7]
 6021 002a 1343     		orrs	r3, r3, r2
 6022 002c DBB2     		uxtb	r3, r3
2706:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 6023              		.loc 1 2706 0
 6024 002e 1846     		mov	r0, r3
 6025 0030 1437     		adds	r7, r7, #20
 6026 0032 BD46     		mov	sp, r7
 6027              		@ sp needed
 6028 0034 5DF8047B 		ldr	r7, [sp], #4
 6029 0038 7047     		bx	lr
 6030              		.cfi_endproc
 6031              	.LFE165:
 6033 003a 00BF     		.section	.text.RTC_Bcd2ToByte,"ax",%progbits
 6034              		.align	2
 6035              		.thumb
 6036              		.thumb_func
 6038              	RTC_Bcd2ToByte:
 6039              	.LFB166:
2707:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2708:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2709:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Convert from 2 digit BCD to Binary.
2710:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  Value: BCD value to be converted.
2711:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval Converted word
2712:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2713:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** static uint8_t RTC_Bcd2ToByte(uint8_t Value)
2714:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 6040              		.loc 1 2714 0
 6041              		.cfi_startproc
 6042              		@ args = 0, pretend = 0, frame = 16
 6043              		@ frame_needed = 1, uses_anonymous_args = 0
 6044              		@ link register save eliminated.
 6045 0000 80B4     		push	{r7}
 6046              	.LCFI164:
 6047              		.cfi_def_cfa_offset 4
 6048              		.cfi_offset 7, -4
 6049 0002 85B0     		sub	sp, sp, #20
 6050              	.LCFI165:
 6051              		.cfi_def_cfa_offset 24
 6052 0004 00AF     		add	r7, sp, #0
 6053              	.LCFI166:
 6054              		.cfi_def_cfa_register 7
 6055 0006 0346     		mov	r3, r0
 6056 0008 FB71     		strb	r3, [r7, #7]
2715:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint8_t tmp = 0;
 6057              		.loc 1 2715 0
 6058 000a 0023     		movs	r3, #0
 6059 000c FB73     		strb	r3, [r7, #15]
2716:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmp = ((uint8_t)(Value & (uint8_t)0xF0) >> (uint8_t)0x4) * 10;
 6060              		.loc 1 2716 0
 6061 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6062 0010 1B09     		lsrs	r3, r3, #4
 6063 0012 DBB2     		uxtb	r3, r3
 6064 0014 1A46     		mov	r2, r3
 6065 0016 9200     		lsls	r2, r2, #2
 6066 0018 1344     		add	r3, r3, r2
 6067 001a 5B00     		lsls	r3, r3, #1
 6068 001c FB73     		strb	r3, [r7, #15]
2717:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 6069              		.loc 1 2717 0
 6070 001e FB79     		ldrb	r3, [r7, #7]
 6071 0020 03F00F03 		and	r3, r3, #15
 6072 0024 DAB2     		uxtb	r2, r3
 6073 0026 FB7B     		ldrb	r3, [r7, #15]
 6074 0028 1344     		add	r3, r3, r2
 6075 002a DBB2     		uxtb	r3, r3
2718:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 6076              		.loc 1 2718 0
 6077 002c 1846     		mov	r0, r3
 6078 002e 1437     		adds	r7, r7, #20
 6079 0030 BD46     		mov	sp, r7
 6080              		@ sp needed
 6081 0032 5DF8047B 		ldr	r7, [sp], #4
 6082 0036 7047     		bx	lr
 6083              		.cfi_endproc
 6084              	.LFE166:
 6086              		.text
 6087              	.Letext0:
 6088              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 6089              		.file 3 "/usr/include/newlib/stdint.h"
 6090              		.file 4 "lib/chip/CMSIS/ST/STM32F4xx/Include/stm32f4xx.h"
 6091              		.file 5 "lib/chip/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
 6092              		.file 6 "lib/chip/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_rtc.c
     /tmp/ccVSUhlq.s:20     .text.RTC_DeInit:00000000 $t
     /tmp/ccVSUhlq.s:25     .text.RTC_DeInit:00000000 RTC_DeInit
     /tmp/ccVSUhlq.s:460    .text.RTC_EnterInitMode:00000000 RTC_EnterInitMode
     /tmp/ccVSUhlq.s:592    .text.RTC_WaitForSynchro:00000000 RTC_WaitForSynchro
     /tmp/ccVSUhlq.s:196    .rodata:00000000 $d
     /tmp/ccVSUhlq.s:197    .rodata:00000000 .LC0
     /tmp/ccVSUhlq.s:201    .text.RTC_Init:00000000 $t
     /tmp/ccVSUhlq.s:206    .text.RTC_Init:00000000 RTC_Init
     /tmp/ccVSUhlq.s:556    .text.RTC_ExitInitMode:00000000 RTC_ExitInitMode
     /tmp/ccVSUhlq.s:342    .text.RTC_StructInit:00000000 $t
     /tmp/ccVSUhlq.s:347    .text.RTC_StructInit:00000000 RTC_StructInit
     /tmp/ccVSUhlq.s:387    .text.RTC_WriteProtectionCmd:00000000 $t
     /tmp/ccVSUhlq.s:392    .text.RTC_WriteProtectionCmd:00000000 RTC_WriteProtectionCmd
     /tmp/ccVSUhlq.s:455    .text.RTC_EnterInitMode:00000000 $t
     /tmp/ccVSUhlq.s:551    .text.RTC_ExitInitMode:00000000 $t
     /tmp/ccVSUhlq.s:587    .text.RTC_WaitForSynchro:00000000 $t
     /tmp/ccVSUhlq.s:689    .text.RTC_RefClockCmd:00000000 $t
     /tmp/ccVSUhlq.s:694    .text.RTC_RefClockCmd:00000000 RTC_RefClockCmd
     /tmp/ccVSUhlq.s:795    .text.RTC_BypassShadowCmd:00000000 $t
     /tmp/ccVSUhlq.s:800    .text.RTC_BypassShadowCmd:00000000 RTC_BypassShadowCmd
     /tmp/ccVSUhlq.s:879    .text.RTC_SetTime:00000000 $t
     /tmp/ccVSUhlq.s:884    .text.RTC_SetTime:00000000 RTC_SetTime
     /tmp/ccVSUhlq.s:6038   .text.RTC_Bcd2ToByte:00000000 RTC_Bcd2ToByte
     /tmp/ccVSUhlq.s:5978   .text.RTC_ByteToBcd2:00000000 RTC_ByteToBcd2
     /tmp/ccVSUhlq.s:1216   .text.RTC_TimeStructInit:00000000 $t
     /tmp/ccVSUhlq.s:1221   .text.RTC_TimeStructInit:00000000 RTC_TimeStructInit
     /tmp/ccVSUhlq.s:1265   .text.RTC_GetTime:00000000 $t
     /tmp/ccVSUhlq.s:1270   .text.RTC_GetTime:00000000 RTC_GetTime
     /tmp/ccVSUhlq.s:1381   .text.RTC_GetSubSecond:00000000 $t
     /tmp/ccVSUhlq.s:1386   .text.RTC_GetSubSecond:00000000 RTC_GetSubSecond
     /tmp/ccVSUhlq.s:1428   .text.RTC_SetDate:00000000 $t
     /tmp/ccVSUhlq.s:1433   .text.RTC_SetDate:00000000 RTC_SetDate
     /tmp/ccVSUhlq.s:1755   .text.RTC_DateStructInit:00000000 $t
     /tmp/ccVSUhlq.s:1760   .text.RTC_DateStructInit:00000000 RTC_DateStructInit
     /tmp/ccVSUhlq.s:1804   .text.RTC_GetDate:00000000 $t
     /tmp/ccVSUhlq.s:1809   .text.RTC_GetDate:00000000 RTC_GetDate
     /tmp/ccVSUhlq.s:1920   .text.RTC_SetAlarm:00000000 $t
     /tmp/ccVSUhlq.s:1925   .text.RTC_SetAlarm:00000000 RTC_SetAlarm
     /tmp/ccVSUhlq.s:2432   .text.RTC_AlarmStructInit:00000000 $t
     /tmp/ccVSUhlq.s:2437   .text.RTC_AlarmStructInit:00000000 RTC_AlarmStructInit
     /tmp/ccVSUhlq.s:2493   .text.RTC_GetAlarm:00000000 $t
     /tmp/ccVSUhlq.s:2498   .text.RTC_GetAlarm:00000000 RTC_GetAlarm
     /tmp/ccVSUhlq.s:2659   .text.RTC_AlarmCmd:00000000 $t
     /tmp/ccVSUhlq.s:2664   .text.RTC_AlarmCmd:00000000 RTC_AlarmCmd
     /tmp/ccVSUhlq.s:2811   .text.RTC_AlarmSubSecondConfig:00000000 $t
     /tmp/ccVSUhlq.s:2816   .text.RTC_AlarmSubSecondConfig:00000000 RTC_AlarmSubSecondConfig
     /tmp/ccVSUhlq.s:2963   .text.RTC_GetAlarmSubSecond:00000000 $t
     /tmp/ccVSUhlq.s:2968   .text.RTC_GetAlarmSubSecond:00000000 RTC_GetAlarmSubSecond
     /tmp/ccVSUhlq.s:3021   .text.RTC_WakeUpClockConfig:00000000 $t
     /tmp/ccVSUhlq.s:3026   .text.RTC_WakeUpClockConfig:00000000 RTC_WakeUpClockConfig
     /tmp/ccVSUhlq.s:3110   .text.RTC_SetWakeUpCounter:00000000 $t
     /tmp/ccVSUhlq.s:3115   .text.RTC_SetWakeUpCounter:00000000 RTC_SetWakeUpCounter
     /tmp/ccVSUhlq.s:3172   .text.RTC_GetWakeUpCounter:00000000 $t
     /tmp/ccVSUhlq.s:3177   .text.RTC_GetWakeUpCounter:00000000 RTC_GetWakeUpCounter
     /tmp/ccVSUhlq.s:3206   .text.RTC_WakeUpCmd:00000000 $t
     /tmp/ccVSUhlq.s:3211   .text.RTC_WakeUpCmd:00000000 RTC_WakeUpCmd
     /tmp/ccVSUhlq.s:3339   .text.RTC_DayLightSavingConfig:00000000 $t
     /tmp/ccVSUhlq.s:3344   .text.RTC_DayLightSavingConfig:00000000 RTC_DayLightSavingConfig
     /tmp/ccVSUhlq.s:3432   .text.RTC_GetStoreOperation:00000000 $t
     /tmp/ccVSUhlq.s:3437   .text.RTC_GetStoreOperation:00000000 RTC_GetStoreOperation
     /tmp/ccVSUhlq.s:3466   .text.RTC_OutputConfig:00000000 $t
     /tmp/ccVSUhlq.s:3471   .text.RTC_OutputConfig:00000000 RTC_OutputConfig
     /tmp/ccVSUhlq.s:3565   .text.RTC_CoarseCalibConfig:00000000 $t
     /tmp/ccVSUhlq.s:3570   .text.RTC_CoarseCalibConfig:00000000 RTC_CoarseCalibConfig
     /tmp/ccVSUhlq.s:3665   .text.RTC_CoarseCalibCmd:00000000 $t
     /tmp/ccVSUhlq.s:3670   .text.RTC_CoarseCalibCmd:00000000 RTC_CoarseCalibCmd
     /tmp/ccVSUhlq.s:3771   .text.RTC_CalibOutputCmd:00000000 $t
     /tmp/ccVSUhlq.s:3776   .text.RTC_CalibOutputCmd:00000000 RTC_CalibOutputCmd
     /tmp/ccVSUhlq.s:3855   .text.RTC_CalibOutputConfig:00000000 $t
     /tmp/ccVSUhlq.s:3860   .text.RTC_CalibOutputConfig:00000000 RTC_CalibOutputConfig
     /tmp/ccVSUhlq.s:3932   .text.RTC_SmoothCalibConfig:00000000 $t
     /tmp/ccVSUhlq.s:3937   .text.RTC_SmoothCalibConfig:00000000 RTC_SmoothCalibConfig
     /tmp/ccVSUhlq.s:4081   .text.RTC_TimeStampCmd:00000000 $t
     /tmp/ccVSUhlq.s:4086   .text.RTC_TimeStampCmd:00000000 RTC_TimeStampCmd
     /tmp/ccVSUhlq.s:4189   .text.RTC_GetTimeStamp:00000000 $t
     /tmp/ccVSUhlq.s:4194   .text.RTC_GetTimeStamp:00000000 RTC_GetTimeStamp
     /tmp/ccVSUhlq.s:4367   .text.RTC_GetTimeStampSubSecond:00000000 $t
     /tmp/ccVSUhlq.s:4372   .text.RTC_GetTimeStampSubSecond:00000000 RTC_GetTimeStampSubSecond
     /tmp/ccVSUhlq.s:4400   .text.RTC_TamperTriggerConfig:00000000 $t
     /tmp/ccVSUhlq.s:4405   .text.RTC_TamperTriggerConfig:00000000 RTC_TamperTriggerConfig
     /tmp/ccVSUhlq.s:4490   .text.RTC_TamperCmd:00000000 $t
     /tmp/ccVSUhlq.s:4495   .text.RTC_TamperCmd:00000000 RTC_TamperCmd
     /tmp/ccVSUhlq.s:4573   .text.RTC_TamperFilterConfig:00000000 $t
     /tmp/ccVSUhlq.s:4578   .text.RTC_TamperFilterConfig:00000000 RTC_TamperFilterConfig
     /tmp/ccVSUhlq.s:4641   .text.RTC_TamperSamplingFreqConfig:00000000 $t
     /tmp/ccVSUhlq.s:4646   .text.RTC_TamperSamplingFreqConfig:00000000 RTC_TamperSamplingFreqConfig
     /tmp/ccVSUhlq.s:4721   .text.RTC_TamperPinsPrechargeDuration:00000000 $t
     /tmp/ccVSUhlq.s:4726   .text.RTC_TamperPinsPrechargeDuration:00000000 RTC_TamperPinsPrechargeDuration
     /tmp/ccVSUhlq.s:4789   .text.RTC_TimeStampOnTamperDetectionCmd:00000000 $t
     /tmp/ccVSUhlq.s:4794   .text.RTC_TimeStampOnTamperDetectionCmd:00000000 RTC_TimeStampOnTamperDetectionCmd
     /tmp/ccVSUhlq.s:4858   .text.RTC_TamperPullUpCmd:00000000 $t
     /tmp/ccVSUhlq.s:4863   .text.RTC_TamperPullUpCmd:00000000 RTC_TamperPullUpCmd
     /tmp/ccVSUhlq.s:4927   .text.RTC_WriteBackupRegister:00000000 $t
     /tmp/ccVSUhlq.s:4932   .text.RTC_WriteBackupRegister:00000000 RTC_WriteBackupRegister
     /tmp/ccVSUhlq.s:5044   .text.RTC_ReadBackupRegister:00000000 $t
     /tmp/ccVSUhlq.s:5049   .text.RTC_ReadBackupRegister:00000000 RTC_ReadBackupRegister
     /tmp/ccVSUhlq.s:5160   .text.RTC_TamperPinSelection:00000000 $t
     /tmp/ccVSUhlq.s:5165   .text.RTC_TamperPinSelection:00000000 RTC_TamperPinSelection
     /tmp/ccVSUhlq.s:5222   .text.RTC_TimeStampPinSelection:00000000 $t
     /tmp/ccVSUhlq.s:5227   .text.RTC_TimeStampPinSelection:00000000 RTC_TimeStampPinSelection
     /tmp/ccVSUhlq.s:5284   .text.RTC_OutputTypeConfig:00000000 $t
     /tmp/ccVSUhlq.s:5289   .text.RTC_OutputTypeConfig:00000000 RTC_OutputTypeConfig
     /tmp/ccVSUhlq.s:5346   .text.RTC_SynchroShiftConfig:00000000 $t
     /tmp/ccVSUhlq.s:5351   .text.RTC_SynchroShiftConfig:00000000 RTC_SynchroShiftConfig
     /tmp/ccVSUhlq.s:5498   .text.RTC_ITConfig:00000000 $t
     /tmp/ccVSUhlq.s:5503   .text.RTC_ITConfig:00000000 RTC_ITConfig
     /tmp/ccVSUhlq.s:5626   .text.RTC_GetFlagStatus:00000000 $t
     /tmp/ccVSUhlq.s:5631   .text.RTC_GetFlagStatus:00000000 RTC_GetFlagStatus
     /tmp/ccVSUhlq.s:5735   .text.RTC_ClearFlag:00000000 $t
     /tmp/ccVSUhlq.s:5740   .text.RTC_ClearFlag:00000000 RTC_ClearFlag
     /tmp/ccVSUhlq.s:5797   .text.RTC_GetITStatus:00000000 $t
     /tmp/ccVSUhlq.s:5802   .text.RTC_GetITStatus:00000000 RTC_GetITStatus
     /tmp/ccVSUhlq.s:5906   .text.RTC_ClearITPendingBit:00000000 $t
     /tmp/ccVSUhlq.s:5911   .text.RTC_ClearITPendingBit:00000000 RTC_ClearITPendingBit
     /tmp/ccVSUhlq.s:5974   .text.RTC_ByteToBcd2:00000000 $t
     /tmp/ccVSUhlq.s:6034   .text.RTC_Bcd2ToByte:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
assert_failed
