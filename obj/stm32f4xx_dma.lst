   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_dma.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  21              	.LC0:
  22 0000 6C69622F 		.ascii	"lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_d"
  22      63686970 
  22      2F53544D 
  22      33324634 
  22      78785F53 
  23 0033 6D612E63 		.ascii	"ma.c\000"
  23      00
  24              		.section	.text.DMA_DeInit,"ax",%progbits
  25              		.align	2
  26              		.global	DMA_DeInit
  27              		.thumb
  28              		.thumb_func
  30              	DMA_DeInit:
  31              	.LFB110:
  32              		.file 1 "lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c"
   1:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /**
   2:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   ******************************************************************************
   3:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @file    stm32f4xx_dma.c
   4:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @author  MCD Application Team
   5:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @version V1.0.0
   6:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @date    30-September-2011
   7:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @brief   This file provides firmware functions to manage the following 
   8:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          functionalities of the Direct Memory Access controller (DMA):           
   9:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *           - Initialization and Configuration
  10:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *           - Data Counter
  11:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *           - Double Buffer mode configuration and command  
  12:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *           - Interrupts and flags management
  13:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *           
  14:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *  @verbatim
  15:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *      
  16:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          ===================================================================      
  17:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *                                 How to use this driver
  18:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          =================================================================== 
  19:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          1. Enable The DMA controller clock using RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_DMA1, E
  20:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             function for DMA1 or using RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_DMA2, ENABLE)
  21:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             function for DMA2.
  22:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *
  23:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          2. Enable and configure the peripheral to be connected to the DMA Stream
  24:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             (except for internal SRAM / FLASH memories: no initialization is 
  25:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             necessary). 
  26:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *        
  27:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          3. For a given Stream, program the required configuration through following parameters
  28:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             Source and Destination addresses, Transfer Direction, Transfer size, Source and Des
  29:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             data formats, Circular or Normal mode, Stream Priority level, Source and Destinatio
  30:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             Incrementation mode, FIFO mode and its Threshold (if needed), Burst mode for Source
  31:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             Destination (if needed) using the DMA_Init() function.
  32:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             To avoid filling un-nesecessary fields, you can call DMA_StructInit() function
  33:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             to initialize a given structure with default values (reset values), the modify
  34:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             only necessary fields (ie. Source and Destination addresses, Transfer size and Data
  35:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *
  36:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          4. Enable the NVIC and the corresponding interrupt(s) using the function 
  37:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             DMA_ITConfig() if you need to use DMA interrupts. 
  38:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *
  39:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          5. Optionally, if the Circular mode is enabled, you can use the Double buffer mode by 
  40:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             the second Memory address and the first Memory to be used through the function 
  41:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             DMA_DoubleBufferModeConfig(). Then enable the Double buffer mode through the functi
  42:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             DMA_DoubleBufferModeCmd(). These operations must be done before step 6.
  43:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *    
  44:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          6. Enable the DMA stream using the DMA_Cmd() function. 
  45:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *                
  46:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          7. Activate the needed Stream Request using PPP_DMACmd() function for
  47:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             any PPP peripheral except internal SRAM and FLASH (ie. SPI, USART ...)
  48:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             The function allowing this operation is provided in each PPP peripheral
  49:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             driver (ie. SPI_DMACmd for SPI peripheral).
  50:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             Once the Stream is enabled, it is not possible to modify its configuration
  51:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             unless the stream is stopped and disabled.
  52:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             After enabling the Stream, it is advised to monitor the EN bit status using
  53:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             the function DMA_GetCmdStatus(). In case of configuration errors or bus errors
  54:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             this bit will remain reset and all transfers on this Stream will remain on hold.   
  55:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *
  56:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          8. Optionally, you can configure the number of data to be transferred
  57:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             when the Stream is disabled (ie. after each Transfer Complete event
  58:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             or when a Transfer Error occurs) using the function DMA_SetCurrDataCounter().
  59:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             And you can get the number of remaining data to be transferred using 
  60:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             the function DMA_GetCurrDataCounter() at run time (when the DMA Stream is
  61:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *             enabled and running).  
  62:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *                   
  63:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          9. To control DMA events you can use one of the following 
  64:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *              two methods:
  65:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *               a- Check on DMA Stream flags using the function DMA_GetFlagStatus().  
  66:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *               b- Use DMA interrupts through the function DMA_ITConfig() at initialization
  67:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *                  phase and DMA_GetITStatus() function into interrupt routines in
  68:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *                  communication phase.  
  69:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *              After checking on a flag you should clear it using DMA_ClearFlag()
  70:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *              function. And after checking on an interrupt event you should 
  71:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *              clear it using DMA_ClearITPendingBit() function.    
  72:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *              
  73:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          10. Optionally, if Circular mode and Double Buffer mode are enabled, you can modify
  74:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *              the Memory Addresses using the function DMA_MemoryTargetConfig(). Make sure that
  75:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *              the Memory Address to be modified is not the one currently in use by DMA Stream.
  76:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *              This condition can be monitored using the function DMA_GetCurrentMemoryTarget().
  77:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *              
  78:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          11. Optionally, Pause-Resume operations may be performed:
  79:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *              The DMA_Cmd() function may be used to perform Pause-Resume operation. When a 
  80:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *              transfer is ongoing, calling this function to disable the Stream will cause the 
  81:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *              transfer to be paused. All configuration registers and the number of remaining 
  82:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *              data will be preserved. When calling again this function to re-enable the Stream, 
  83:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *              the transfer will be resumed from the point where it was paused.          
  84:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *                 
  85:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @note   Memory-to-Memory transfer is possible by setting the address of the memory into
  86:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         the Peripheral registers. In this mode, Circular mode and Double Buffer mode
  87:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         are not allowed.
  88:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *  
  89:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @note   The FIFO is used mainly to reduce bus usage and to allow data packing/unpacking: it is
  90:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         possible to set different Data Sizes for the Peripheral and the Memory (ie. you can set
  91:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         Half-Word data size for the peripheral to access its data register and set Word data si
  92:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         for the Memory to gain in access time. Each two Half-words will be packed and written i
  93:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         a single access to a Word in the Memory).
  94:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *    
  95:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @note  When FIFO is disabled, it is not allowed to configure different Data Sizes for Source
  96:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *        and Destination. In this case the Peripheral Data Size will be applied to both Source
  97:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *        and Destination.               
  98:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *
  99:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *  @endverbatim
 100:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *                                  
 101:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   ******************************************************************************
 102:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @attention
 103:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *
 104:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 105:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 106:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 107:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 108:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 109:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 110:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *
 111:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 112:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   ******************************************************************************  
 113:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */ 
 114:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 115:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /* Includes ------------------------------------------------------------------*/
 116:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** #include "stm32f4xx_dma.h"
 117:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** #include "stm32f4xx_rcc.h"
 118:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 119:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 120:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @{
 121:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
 122:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 123:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /** @defgroup DMA 
 124:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @brief DMA driver modules
 125:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @{
 126:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */ 
 127:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 128:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /* Private typedef -----------------------------------------------------------*/
 129:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /* Private define ------------------------------------------------------------*/
 130:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 131:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /* Masks Definition */
 132:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** #define TRANSFER_IT_ENABLE_MASK (uint32_t)(DMA_SxCR_TCIE | DMA_SxCR_HTIE | \
 133:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****                                            DMA_SxCR_TEIE | DMA_SxCR_DMEIE)
 134:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 135:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** #define DMA_Stream0_IT_MASK     (uint32_t)(DMA_LISR_FEIF0 | DMA_LISR_DMEIF0 | \
 136:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****                                            DMA_LISR_TEIF0 | DMA_LISR_HTIF0 | \
 137:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****                                            DMA_LISR_TCIF0)
 138:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 139:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** #define DMA_Stream1_IT_MASK     (uint32_t)(DMA_Stream0_IT_MASK << 6)
 140:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** #define DMA_Stream2_IT_MASK     (uint32_t)(DMA_Stream0_IT_MASK << 16)
 141:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** #define DMA_Stream3_IT_MASK     (uint32_t)(DMA_Stream0_IT_MASK << 22)
 142:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** #define DMA_Stream4_IT_MASK     (uint32_t)(DMA_Stream0_IT_MASK | (uint32_t)0x20000000)
 143:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** #define DMA_Stream5_IT_MASK     (uint32_t)(DMA_Stream1_IT_MASK | (uint32_t)0x20000000)
 144:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** #define DMA_Stream6_IT_MASK     (uint32_t)(DMA_Stream2_IT_MASK | (uint32_t)0x20000000)
 145:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** #define DMA_Stream7_IT_MASK     (uint32_t)(DMA_Stream3_IT_MASK | (uint32_t)0x20000000)
 146:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** #define TRANSFER_IT_MASK        (uint32_t)0x0F3C0F3C
 147:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** #define HIGH_ISR_MASK           (uint32_t)0x20000000
 148:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** #define RESERVED_MASK           (uint32_t)0x0F7D0F7D  
 149:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 150:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /* Private macro -------------------------------------------------------------*/
 151:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /* Private variables ---------------------------------------------------------*/
 152:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /* Private function prototypes -----------------------------------------------*/
 153:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /* Private functions ---------------------------------------------------------*/
 154:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 155:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 156:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /** @defgroup DMA_Private_Functions
 157:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @{
 158:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
 159:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 160:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /** @defgroup DMA_Group1 Initialization and Configuration functions
 161:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  *  @brief   Initialization and Configuration functions
 162:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  *
 163:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** @verbatim   
 164:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  ===============================================================================
 165:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****                  Initialization and Configuration functions
 166:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  ===============================================================================  
 167:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 168:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   This subsection provides functions allowing to initialize the DMA Stream source
 169:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   and destination addresses, incrementation and data sizes, transfer direction, 
 170:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   buffer size, circular/normal mode selection, memory-to-memory mode selection 
 171:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   and Stream priority value.
 172:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   
 173:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   The DMA_Init() function follows the DMA configuration procedures as described in
 174:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   reference manual (RM0090) except the first point: waiting on EN bit to be reset.
 175:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   This condition should be checked by user application using the function DMA_GetCmdStatus()
 176:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   before calling the DMA_Init() function.
 177:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 178:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** @endverbatim
 179:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @{
 180:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
 181:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 182:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /**
 183:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @brief  Deinitialize the DMAy Streamx registers to their default reset values.
 184:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 185:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         to 7 to select the DMA Stream.
 186:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @retval None
 187:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
 188:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** void DMA_DeInit(DMA_Stream_TypeDef* DMAy_Streamx)
 189:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** {
  33              		.loc 1 189 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 8
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 82B0     		sub	sp, sp, #8
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 16
  45 0004 00AF     		add	r7, sp, #0
  46              	.LCFI2:
  47              		.cfi_def_cfa_register 7
  48 0006 7860     		str	r0, [r7, #4]
 190:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check the parameters */
 191:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
  49              		.loc 1 191 0
  50 0008 7A68     		ldr	r2, [r7, #4]
  51 000a 46F21003 		movw	r3, #24592
  52 000e C4F20203 		movt	r3, 16386
  53 0012 9A42     		cmp	r2, r3
  54 0014 6FD0     		beq	.L2
  55              		.loc 1 191 0 is_stmt 0 discriminator 1
  56 0016 7A68     		ldr	r2, [r7, #4]
  57 0018 46F22803 		movw	r3, #24616
  58 001c C4F20203 		movt	r3, 16386
  59 0020 9A42     		cmp	r2, r3
  60 0022 68D0     		beq	.L2
  61 0024 7A68     		ldr	r2, [r7, #4]
  62 0026 46F24003 		movw	r3, #24640
  63 002a C4F20203 		movt	r3, 16386
  64 002e 9A42     		cmp	r2, r3
  65 0030 61D0     		beq	.L2
  66 0032 7A68     		ldr	r2, [r7, #4]
  67 0034 46F25803 		movw	r3, #24664
  68 0038 C4F20203 		movt	r3, 16386
  69 003c 9A42     		cmp	r2, r3
  70 003e 5AD0     		beq	.L2
  71 0040 7A68     		ldr	r2, [r7, #4]
  72 0042 46F27003 		movw	r3, #24688
  73 0046 C4F20203 		movt	r3, 16386
  74 004a 9A42     		cmp	r2, r3
  75 004c 53D0     		beq	.L2
  76 004e 7A68     		ldr	r2, [r7, #4]
  77 0050 46F28803 		movw	r3, #24712
  78 0054 C4F20203 		movt	r3, 16386
  79 0058 9A42     		cmp	r2, r3
  80 005a 4CD0     		beq	.L2
  81 005c 7A68     		ldr	r2, [r7, #4]
  82 005e 46F2A003 		movw	r3, #24736
  83 0062 C4F20203 		movt	r3, 16386
  84 0066 9A42     		cmp	r2, r3
  85 0068 45D0     		beq	.L2
  86 006a 7A68     		ldr	r2, [r7, #4]
  87 006c 46F2B803 		movw	r3, #24760
  88 0070 C4F20203 		movt	r3, 16386
  89 0074 9A42     		cmp	r2, r3
  90 0076 3ED0     		beq	.L2
  91 0078 7A68     		ldr	r2, [r7, #4]
  92 007a 46F21043 		movw	r3, #25616
  93 007e C4F20203 		movt	r3, 16386
  94 0082 9A42     		cmp	r2, r3
  95 0084 37D0     		beq	.L2
  96 0086 7A68     		ldr	r2, [r7, #4]
  97 0088 46F22843 		movw	r3, #25640
  98 008c C4F20203 		movt	r3, 16386
  99 0090 9A42     		cmp	r2, r3
 100 0092 30D0     		beq	.L2
 101 0094 7A68     		ldr	r2, [r7, #4]
 102 0096 46F24043 		movw	r3, #25664
 103 009a C4F20203 		movt	r3, 16386
 104 009e 9A42     		cmp	r2, r3
 105 00a0 29D0     		beq	.L2
 106 00a2 7A68     		ldr	r2, [r7, #4]
 107 00a4 46F25843 		movw	r3, #25688
 108 00a8 C4F20203 		movt	r3, 16386
 109 00ac 9A42     		cmp	r2, r3
 110 00ae 22D0     		beq	.L2
 111 00b0 7A68     		ldr	r2, [r7, #4]
 112 00b2 46F27043 		movw	r3, #25712
 113 00b6 C4F20203 		movt	r3, 16386
 114 00ba 9A42     		cmp	r2, r3
 115 00bc 1BD0     		beq	.L2
 116 00be 7A68     		ldr	r2, [r7, #4]
 117 00c0 46F28843 		movw	r3, #25736
 118 00c4 C4F20203 		movt	r3, 16386
 119 00c8 9A42     		cmp	r2, r3
 120 00ca 14D0     		beq	.L2
 121 00cc 7A68     		ldr	r2, [r7, #4]
 122 00ce 46F2A043 		movw	r3, #25760
 123 00d2 C4F20203 		movt	r3, 16386
 124 00d6 9A42     		cmp	r2, r3
 125 00d8 0DD0     		beq	.L2
 126 00da 7A68     		ldr	r2, [r7, #4]
 127 00dc 46F2B843 		movw	r3, #25784
 128 00e0 C4F20203 		movt	r3, 16386
 129 00e4 9A42     		cmp	r2, r3
 130 00e6 06D0     		beq	.L2
 131 00e8 40F20000 		movw	r0, #:lower16:.LC0
 132 00ec C0F20000 		movt	r0, #:upper16:.LC0
 133 00f0 BF21     		movs	r1, #191
 134 00f2 FFF7FEFF 		bl	assert_failed
 135              	.L2:
 192:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 193:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Disable the selected DMAy Streamx */
 194:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMAy_Streamx->CR &= ~((uint32_t)DMA_SxCR_EN);
 136              		.loc 1 194 0 is_stmt 1
 137 00f6 7B68     		ldr	r3, [r7, #4]
 138 00f8 1B68     		ldr	r3, [r3]
 139 00fa 23F00102 		bic	r2, r3, #1
 140 00fe 7B68     		ldr	r3, [r7, #4]
 141 0100 1A60     		str	r2, [r3]
 195:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 196:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Reset DMAy Streamx control register */
 197:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMAy_Streamx->CR  = 0;
 142              		.loc 1 197 0
 143 0102 7B68     		ldr	r3, [r7, #4]
 144 0104 0022     		movs	r2, #0
 145 0106 1A60     		str	r2, [r3]
 198:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   
 199:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Reset DMAy Streamx Number of Data to Transfer register */
 200:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMAy_Streamx->NDTR = 0;
 146              		.loc 1 200 0
 147 0108 7B68     		ldr	r3, [r7, #4]
 148 010a 0022     		movs	r2, #0
 149 010c 5A60     		str	r2, [r3, #4]
 201:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   
 202:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Reset DMAy Streamx peripheral address register */
 203:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMAy_Streamx->PAR  = 0;
 150              		.loc 1 203 0
 151 010e 7B68     		ldr	r3, [r7, #4]
 152 0110 0022     		movs	r2, #0
 153 0112 9A60     		str	r2, [r3, #8]
 204:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   
 205:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Reset DMAy Streamx memory 0 address register */
 206:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMAy_Streamx->M0AR = 0;
 154              		.loc 1 206 0
 155 0114 7B68     		ldr	r3, [r7, #4]
 156 0116 0022     		movs	r2, #0
 157 0118 DA60     		str	r2, [r3, #12]
 207:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 208:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Reset DMAy Streamx memory 1 address register */
 209:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMAy_Streamx->M1AR = 0;
 158              		.loc 1 209 0
 159 011a 7B68     		ldr	r3, [r7, #4]
 160 011c 0022     		movs	r2, #0
 161 011e 1A61     		str	r2, [r3, #16]
 210:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 211:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Reset DMAy Streamx FIFO control register */
 212:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMAy_Streamx->FCR = (uint32_t)0x00000021; 
 162              		.loc 1 212 0
 163 0120 7B68     		ldr	r3, [r7, #4]
 164 0122 2122     		movs	r2, #33
 165 0124 5A61     		str	r2, [r3, #20]
 213:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 214:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Reset interrupt pending bits for the selected stream */
 215:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   if (DMAy_Streamx == DMA1_Stream0)
 166              		.loc 1 215 0
 167 0126 7A68     		ldr	r2, [r7, #4]
 168 0128 46F21003 		movw	r3, #24592
 169 012c C4F20203 		movt	r3, 16386
 170 0130 9A42     		cmp	r2, r3
 171 0132 06D1     		bne	.L3
 216:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 217:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Stream0 */
 218:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMA1->LIFCR = DMA_Stream0_IT_MASK;
 172              		.loc 1 218 0
 173 0134 4FF4C043 		mov	r3, #24576
 174 0138 C4F20203 		movt	r3, 16386
 175 013c 3D22     		movs	r2, #61
 176 013e 9A60     		str	r2, [r3, #8]
 177 0140 E6E0     		b	.L1
 178              	.L3:
 219:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 220:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA1_Stream1)
 179              		.loc 1 220 0
 180 0142 7A68     		ldr	r2, [r7, #4]
 181 0144 46F22803 		movw	r3, #24616
 182 0148 C4F20203 		movt	r3, 16386
 183 014c 9A42     		cmp	r2, r3
 184 014e 07D1     		bne	.L5
 221:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 222:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Stream1 */
 223:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMA1->LIFCR = DMA_Stream1_IT_MASK;
 185              		.loc 1 223 0
 186 0150 4FF4C043 		mov	r3, #24576
 187 0154 C4F20203 		movt	r3, 16386
 188 0158 4FF47462 		mov	r2, #3904
 189 015c 9A60     		str	r2, [r3, #8]
 190 015e D7E0     		b	.L1
 191              	.L5:
 224:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 225:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA1_Stream2)
 192              		.loc 1 225 0
 193 0160 7A68     		ldr	r2, [r7, #4]
 194 0162 46F24003 		movw	r3, #24640
 195 0166 C4F20203 		movt	r3, 16386
 196 016a 9A42     		cmp	r2, r3
 197 016c 07D1     		bne	.L6
 226:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 227:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Stream2 */
 228:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMA1->LIFCR = DMA_Stream2_IT_MASK;
 198              		.loc 1 228 0
 199 016e 4FF4C043 		mov	r3, #24576
 200 0172 C4F20203 		movt	r3, 16386
 201 0176 4FF47412 		mov	r2, #3997696
 202 017a 9A60     		str	r2, [r3, #8]
 203 017c C8E0     		b	.L1
 204              	.L6:
 229:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 230:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA1_Stream3)
 205              		.loc 1 230 0
 206 017e 7A68     		ldr	r2, [r7, #4]
 207 0180 46F25803 		movw	r3, #24664
 208 0184 C4F20203 		movt	r3, 16386
 209 0188 9A42     		cmp	r2, r3
 210 018a 07D1     		bne	.L7
 231:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 232:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Stream3 */
 233:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMA1->LIFCR = DMA_Stream3_IT_MASK;
 211              		.loc 1 233 0
 212 018c 4FF4C043 		mov	r3, #24576
 213 0190 C4F20203 		movt	r3, 16386
 214 0194 4FF07462 		mov	r2, #255852544
 215 0198 9A60     		str	r2, [r3, #8]
 216 019a B9E0     		b	.L1
 217              	.L7:
 234:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 235:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA1_Stream4)
 218              		.loc 1 235 0
 219 019c 7A68     		ldr	r2, [r7, #4]
 220 019e 46F27003 		movw	r3, #24688
 221 01a2 C4F20203 		movt	r3, 16386
 222 01a6 9A42     		cmp	r2, r3
 223 01a8 08D1     		bne	.L8
 236:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 237:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Stream4 */
 238:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMA1->HIFCR = DMA_Stream4_IT_MASK;
 224              		.loc 1 238 0
 225 01aa 4FF4C043 		mov	r3, #24576
 226 01ae C4F20203 		movt	r3, 16386
 227 01b2 3D22     		movs	r2, #61
 228 01b4 C2F20002 		movt	r2, 8192
 229 01b8 DA60     		str	r2, [r3, #12]
 230 01ba A9E0     		b	.L1
 231              	.L8:
 239:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 240:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA1_Stream5)
 232              		.loc 1 240 0
 233 01bc 7A68     		ldr	r2, [r7, #4]
 234 01be 46F28803 		movw	r3, #24712
 235 01c2 C4F20203 		movt	r3, 16386
 236 01c6 9A42     		cmp	r2, r3
 237 01c8 09D1     		bne	.L9
 241:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 242:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Stream5 */
 243:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMA1->HIFCR = DMA_Stream5_IT_MASK;
 238              		.loc 1 243 0
 239 01ca 4FF4C043 		mov	r3, #24576
 240 01ce C4F20203 		movt	r3, 16386
 241 01d2 4FF47462 		mov	r2, #3904
 242 01d6 C2F20002 		movt	r2, 8192
 243 01da DA60     		str	r2, [r3, #12]
 244 01dc 98E0     		b	.L1
 245              	.L9:
 244:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 245:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA1_Stream6)
 246              		.loc 1 245 0
 247 01de 7A68     		ldr	r2, [r7, #4]
 248 01e0 46F2A003 		movw	r3, #24736
 249 01e4 C4F20203 		movt	r3, 16386
 250 01e8 9A42     		cmp	r2, r3
 251 01ea 08D1     		bne	.L10
 246:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 247:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Stream6 */
 248:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMA1->HIFCR = (uint32_t)DMA_Stream6_IT_MASK;
 252              		.loc 1 248 0
 253 01ec 4FF4C043 		mov	r3, #24576
 254 01f0 C4F20203 		movt	r3, 16386
 255 01f4 0022     		movs	r2, #0
 256 01f6 C2F23D02 		movt	r2, 8253
 257 01fa DA60     		str	r2, [r3, #12]
 258 01fc 88E0     		b	.L1
 259              	.L10:
 249:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 250:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA1_Stream7)
 260              		.loc 1 250 0
 261 01fe 7A68     		ldr	r2, [r7, #4]
 262 0200 46F2B803 		movw	r3, #24760
 263 0204 C4F20203 		movt	r3, 16386
 264 0208 9A42     		cmp	r2, r3
 265 020a 07D1     		bne	.L11
 251:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 252:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Stream7 */
 253:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMA1->HIFCR = DMA_Stream7_IT_MASK;
 266              		.loc 1 253 0
 267 020c 4FF4C043 		mov	r3, #24576
 268 0210 C4F20203 		movt	r3, 16386
 269 0214 4FF03D52 		mov	r2, #792723456
 270 0218 DA60     		str	r2, [r3, #12]
 271 021a 79E0     		b	.L1
 272              	.L11:
 254:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 255:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA2_Stream0)
 273              		.loc 1 255 0
 274 021c 7A68     		ldr	r2, [r7, #4]
 275 021e 46F21043 		movw	r3, #25616
 276 0222 C4F20203 		movt	r3, 16386
 277 0226 9A42     		cmp	r2, r3
 278 0228 06D1     		bne	.L12
 256:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 257:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA2 Stream0 */
 258:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMA2->LIFCR = DMA_Stream0_IT_MASK;
 279              		.loc 1 258 0
 280 022a 4FF4C843 		mov	r3, #25600
 281 022e C4F20203 		movt	r3, 16386
 282 0232 3D22     		movs	r2, #61
 283 0234 9A60     		str	r2, [r3, #8]
 284 0236 6BE0     		b	.L1
 285              	.L12:
 259:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 260:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA2_Stream1)
 286              		.loc 1 260 0
 287 0238 7A68     		ldr	r2, [r7, #4]
 288 023a 46F22843 		movw	r3, #25640
 289 023e C4F20203 		movt	r3, 16386
 290 0242 9A42     		cmp	r2, r3
 291 0244 07D1     		bne	.L13
 261:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 262:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA2 Stream1 */
 263:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMA2->LIFCR = DMA_Stream1_IT_MASK;
 292              		.loc 1 263 0
 293 0246 4FF4C843 		mov	r3, #25600
 294 024a C4F20203 		movt	r3, 16386
 295 024e 4FF47462 		mov	r2, #3904
 296 0252 9A60     		str	r2, [r3, #8]
 297 0254 5CE0     		b	.L1
 298              	.L13:
 264:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 265:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA2_Stream2)
 299              		.loc 1 265 0
 300 0256 7A68     		ldr	r2, [r7, #4]
 301 0258 46F24043 		movw	r3, #25664
 302 025c C4F20203 		movt	r3, 16386
 303 0260 9A42     		cmp	r2, r3
 304 0262 07D1     		bne	.L14
 266:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 267:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA2 Stream2 */
 268:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMA2->LIFCR = DMA_Stream2_IT_MASK;
 305              		.loc 1 268 0
 306 0264 4FF4C843 		mov	r3, #25600
 307 0268 C4F20203 		movt	r3, 16386
 308 026c 4FF47412 		mov	r2, #3997696
 309 0270 9A60     		str	r2, [r3, #8]
 310 0272 4DE0     		b	.L1
 311              	.L14:
 269:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 270:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA2_Stream3)
 312              		.loc 1 270 0
 313 0274 7A68     		ldr	r2, [r7, #4]
 314 0276 46F25843 		movw	r3, #25688
 315 027a C4F20203 		movt	r3, 16386
 316 027e 9A42     		cmp	r2, r3
 317 0280 07D1     		bne	.L15
 271:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 272:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA2 Stream3 */
 273:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMA2->LIFCR = DMA_Stream3_IT_MASK;
 318              		.loc 1 273 0
 319 0282 4FF4C843 		mov	r3, #25600
 320 0286 C4F20203 		movt	r3, 16386
 321 028a 4FF07462 		mov	r2, #255852544
 322 028e 9A60     		str	r2, [r3, #8]
 323 0290 3EE0     		b	.L1
 324              	.L15:
 274:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 275:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA2_Stream4)
 325              		.loc 1 275 0
 326 0292 7A68     		ldr	r2, [r7, #4]
 327 0294 46F27043 		movw	r3, #25712
 328 0298 C4F20203 		movt	r3, 16386
 329 029c 9A42     		cmp	r2, r3
 330 029e 08D1     		bne	.L16
 276:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 277:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA2 Stream4 */
 278:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMA2->HIFCR = DMA_Stream4_IT_MASK;
 331              		.loc 1 278 0
 332 02a0 4FF4C843 		mov	r3, #25600
 333 02a4 C4F20203 		movt	r3, 16386
 334 02a8 3D22     		movs	r2, #61
 335 02aa C2F20002 		movt	r2, 8192
 336 02ae DA60     		str	r2, [r3, #12]
 337 02b0 2EE0     		b	.L1
 338              	.L16:
 279:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 280:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA2_Stream5)
 339              		.loc 1 280 0
 340 02b2 7A68     		ldr	r2, [r7, #4]
 341 02b4 46F28843 		movw	r3, #25736
 342 02b8 C4F20203 		movt	r3, 16386
 343 02bc 9A42     		cmp	r2, r3
 344 02be 09D1     		bne	.L17
 281:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 282:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA2 Stream5 */
 283:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMA2->HIFCR = DMA_Stream5_IT_MASK;
 345              		.loc 1 283 0
 346 02c0 4FF4C843 		mov	r3, #25600
 347 02c4 C4F20203 		movt	r3, 16386
 348 02c8 4FF47462 		mov	r2, #3904
 349 02cc C2F20002 		movt	r2, 8192
 350 02d0 DA60     		str	r2, [r3, #12]
 351 02d2 1DE0     		b	.L1
 352              	.L17:
 284:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 285:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else if (DMAy_Streamx == DMA2_Stream6)
 353              		.loc 1 285 0
 354 02d4 7A68     		ldr	r2, [r7, #4]
 355 02d6 46F2A043 		movw	r3, #25760
 356 02da C4F20203 		movt	r3, 16386
 357 02de 9A42     		cmp	r2, r3
 358 02e0 08D1     		bne	.L18
 286:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 287:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Reset interrupt pending bits for DMA2 Stream6 */
 288:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMA2->HIFCR = DMA_Stream6_IT_MASK;
 359              		.loc 1 288 0
 360 02e2 4FF4C843 		mov	r3, #25600
 361 02e6 C4F20203 		movt	r3, 16386
 362 02ea 0022     		movs	r2, #0
 363 02ec C2F23D02 		movt	r2, 8253
 364 02f0 DA60     		str	r2, [r3, #12]
 365 02f2 0DE0     		b	.L1
 366              	.L18:
 289:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 290:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else 
 291:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 292:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     if (DMAy_Streamx == DMA2_Stream7)
 367              		.loc 1 292 0
 368 02f4 7A68     		ldr	r2, [r7, #4]
 369 02f6 46F2B843 		movw	r3, #25784
 370 02fa C4F20203 		movt	r3, 16386
 371 02fe 9A42     		cmp	r2, r3
 372 0300 06D1     		bne	.L1
 293:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     {
 294:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****       /* Reset interrupt pending bits for DMA2 Stream7 */
 295:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****       DMA2->HIFCR = DMA_Stream7_IT_MASK;
 373              		.loc 1 295 0
 374 0302 4FF4C843 		mov	r3, #25600
 375 0306 C4F20203 		movt	r3, 16386
 376 030a 4FF03D52 		mov	r2, #792723456
 377 030e DA60     		str	r2, [r3, #12]
 378              	.L1:
 296:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     }
 297:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 298:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** }
 379              		.loc 1 298 0
 380 0310 0837     		adds	r7, r7, #8
 381 0312 BD46     		mov	sp, r7
 382              		@ sp needed
 383 0314 80BD     		pop	{r7, pc}
 384              		.cfi_endproc
 385              	.LFE110:
 387 0316 00BF     		.section	.text.DMA_Init,"ax",%progbits
 388              		.align	2
 389              		.global	DMA_Init
 390              		.thumb
 391              		.thumb_func
 393              	DMA_Init:
 394              	.LFB111:
 299:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 300:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /**
 301:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @brief  Initializes the DMAy Streamx according to the specified parameters in 
 302:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         the DMA_InitStruct structure.
 303:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @note   Before calling this function, it is recommended to check that the Stream 
 304:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         is actually disabled using the function DMA_GetCmdStatus().  
 305:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 306:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         to 7 to select the DMA Stream.
 307:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMA_InitStruct: pointer to a DMA_InitTypeDef structure that contains
 308:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         the configuration information for the specified DMA Stream.  
 309:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @retval None
 310:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
 311:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** void DMA_Init(DMA_Stream_TypeDef* DMAy_Streamx, DMA_InitTypeDef* DMA_InitStruct)
 312:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** {
 395              		.loc 1 312 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 16
 398              		@ frame_needed = 1, uses_anonymous_args = 0
 399 0000 80B5     		push	{r7, lr}
 400              	.LCFI3:
 401              		.cfi_def_cfa_offset 8
 402              		.cfi_offset 7, -8
 403              		.cfi_offset 14, -4
 404 0002 84B0     		sub	sp, sp, #16
 405              	.LCFI4:
 406              		.cfi_def_cfa_offset 24
 407 0004 00AF     		add	r7, sp, #0
 408              	.LCFI5:
 409              		.cfi_def_cfa_register 7
 410 0006 7860     		str	r0, [r7, #4]
 411 0008 3960     		str	r1, [r7]
 313:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   uint32_t tmpreg = 0;
 412              		.loc 1 313 0
 413 000a 0023     		movs	r3, #0
 414 000c FB60     		str	r3, [r7, #12]
 314:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 315:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check the parameters */
 316:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 415              		.loc 1 316 0
 416 000e 7A68     		ldr	r2, [r7, #4]
 417 0010 46F21003 		movw	r3, #24592
 418 0014 C4F20203 		movt	r3, 16386
 419 0018 9A42     		cmp	r2, r3
 420 001a 70D0     		beq	.L20
 421              		.loc 1 316 0 is_stmt 0 discriminator 1
 422 001c 7A68     		ldr	r2, [r7, #4]
 423 001e 46F22803 		movw	r3, #24616
 424 0022 C4F20203 		movt	r3, 16386
 425 0026 9A42     		cmp	r2, r3
 426 0028 69D0     		beq	.L20
 427 002a 7A68     		ldr	r2, [r7, #4]
 428 002c 46F24003 		movw	r3, #24640
 429 0030 C4F20203 		movt	r3, 16386
 430 0034 9A42     		cmp	r2, r3
 431 0036 62D0     		beq	.L20
 432 0038 7A68     		ldr	r2, [r7, #4]
 433 003a 46F25803 		movw	r3, #24664
 434 003e C4F20203 		movt	r3, 16386
 435 0042 9A42     		cmp	r2, r3
 436 0044 5BD0     		beq	.L20
 437 0046 7A68     		ldr	r2, [r7, #4]
 438 0048 46F27003 		movw	r3, #24688
 439 004c C4F20203 		movt	r3, 16386
 440 0050 9A42     		cmp	r2, r3
 441 0052 54D0     		beq	.L20
 442 0054 7A68     		ldr	r2, [r7, #4]
 443 0056 46F28803 		movw	r3, #24712
 444 005a C4F20203 		movt	r3, 16386
 445 005e 9A42     		cmp	r2, r3
 446 0060 4DD0     		beq	.L20
 447 0062 7A68     		ldr	r2, [r7, #4]
 448 0064 46F2A003 		movw	r3, #24736
 449 0068 C4F20203 		movt	r3, 16386
 450 006c 9A42     		cmp	r2, r3
 451 006e 46D0     		beq	.L20
 452 0070 7A68     		ldr	r2, [r7, #4]
 453 0072 46F2B803 		movw	r3, #24760
 454 0076 C4F20203 		movt	r3, 16386
 455 007a 9A42     		cmp	r2, r3
 456 007c 3FD0     		beq	.L20
 457 007e 7A68     		ldr	r2, [r7, #4]
 458 0080 46F21043 		movw	r3, #25616
 459 0084 C4F20203 		movt	r3, 16386
 460 0088 9A42     		cmp	r2, r3
 461 008a 38D0     		beq	.L20
 462 008c 7A68     		ldr	r2, [r7, #4]
 463 008e 46F22843 		movw	r3, #25640
 464 0092 C4F20203 		movt	r3, 16386
 465 0096 9A42     		cmp	r2, r3
 466 0098 31D0     		beq	.L20
 467 009a 7A68     		ldr	r2, [r7, #4]
 468 009c 46F24043 		movw	r3, #25664
 469 00a0 C4F20203 		movt	r3, 16386
 470 00a4 9A42     		cmp	r2, r3
 471 00a6 2AD0     		beq	.L20
 472 00a8 7A68     		ldr	r2, [r7, #4]
 473 00aa 46F25843 		movw	r3, #25688
 474 00ae C4F20203 		movt	r3, 16386
 475 00b2 9A42     		cmp	r2, r3
 476 00b4 23D0     		beq	.L20
 477 00b6 7A68     		ldr	r2, [r7, #4]
 478 00b8 46F27043 		movw	r3, #25712
 479 00bc C4F20203 		movt	r3, 16386
 480 00c0 9A42     		cmp	r2, r3
 481 00c2 1CD0     		beq	.L20
 482 00c4 7A68     		ldr	r2, [r7, #4]
 483 00c6 46F28843 		movw	r3, #25736
 484 00ca C4F20203 		movt	r3, 16386
 485 00ce 9A42     		cmp	r2, r3
 486 00d0 15D0     		beq	.L20
 487 00d2 7A68     		ldr	r2, [r7, #4]
 488 00d4 46F2A043 		movw	r3, #25760
 489 00d8 C4F20203 		movt	r3, 16386
 490 00dc 9A42     		cmp	r2, r3
 491 00de 0ED0     		beq	.L20
 492 00e0 7A68     		ldr	r2, [r7, #4]
 493 00e2 46F2B843 		movw	r3, #25784
 494 00e6 C4F20203 		movt	r3, 16386
 495 00ea 9A42     		cmp	r2, r3
 496 00ec 07D0     		beq	.L20
 497 00ee 40F20000 		movw	r0, #:lower16:.LC0
 498 00f2 C0F20000 		movt	r0, #:upper16:.LC0
 499 00f6 4FF49E71 		mov	r1, #316
 500 00fa FFF7FEFF 		bl	assert_failed
 501              	.L20:
 317:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_CHANNEL(DMA_InitStruct->DMA_Channel));
 502              		.loc 1 317 0 is_stmt 1
 503 00fe 3B68     		ldr	r3, [r7]
 504 0100 1B68     		ldr	r3, [r3]
 505 0102 002B     		cmp	r3, #0
 506 0104 2AD0     		beq	.L21
 507              		.loc 1 317 0 is_stmt 0 discriminator 1
 508 0106 3B68     		ldr	r3, [r7]
 509 0108 1B68     		ldr	r3, [r3]
 510 010a B3F1007F 		cmp	r3, #33554432
 511 010e 25D0     		beq	.L21
 512 0110 3B68     		ldr	r3, [r7]
 513 0112 1B68     		ldr	r3, [r3]
 514 0114 B3F1806F 		cmp	r3, #67108864
 515 0118 20D0     		beq	.L21
 516 011a 3B68     		ldr	r3, [r7]
 517 011c 1B68     		ldr	r3, [r3]
 518 011e B3F1C06F 		cmp	r3, #100663296
 519 0122 1BD0     		beq	.L21
 520 0124 3B68     		ldr	r3, [r7]
 521 0126 1B68     		ldr	r3, [r3]
 522 0128 B3F1006F 		cmp	r3, #134217728
 523 012c 16D0     		beq	.L21
 524 012e 3B68     		ldr	r3, [r7]
 525 0130 1B68     		ldr	r3, [r3]
 526 0132 B3F1206F 		cmp	r3, #167772160
 527 0136 11D0     		beq	.L21
 528 0138 3B68     		ldr	r3, [r7]
 529 013a 1B68     		ldr	r3, [r3]
 530 013c B3F1406F 		cmp	r3, #201326592
 531 0140 0CD0     		beq	.L21
 532 0142 3B68     		ldr	r3, [r7]
 533 0144 1B68     		ldr	r3, [r3]
 534 0146 B3F1606F 		cmp	r3, #234881024
 535 014a 07D0     		beq	.L21
 536 014c 40F20000 		movw	r0, #:lower16:.LC0
 537 0150 C0F20000 		movt	r0, #:upper16:.LC0
 538 0154 40F23D11 		movw	r1, #317
 539 0158 FFF7FEFF 		bl	assert_failed
 540              	.L21:
 318:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_DIRECTION(DMA_InitStruct->DMA_DIR));
 541              		.loc 1 318 0 is_stmt 1
 542 015c 3B68     		ldr	r3, [r7]
 543 015e DB68     		ldr	r3, [r3, #12]
 544 0160 002B     		cmp	r3, #0
 545 0162 0FD0     		beq	.L22
 546              		.loc 1 318 0 is_stmt 0 discriminator 1
 547 0164 3B68     		ldr	r3, [r7]
 548 0166 DB68     		ldr	r3, [r3, #12]
 549 0168 402B     		cmp	r3, #64
 550 016a 0BD0     		beq	.L22
 551 016c 3B68     		ldr	r3, [r7]
 552 016e DB68     		ldr	r3, [r3, #12]
 553 0170 802B     		cmp	r3, #128
 554 0172 07D0     		beq	.L22
 555 0174 40F20000 		movw	r0, #:lower16:.LC0
 556 0178 C0F20000 		movt	r0, #:upper16:.LC0
 557 017c 4FF49F71 		mov	r1, #318
 558 0180 FFF7FEFF 		bl	assert_failed
 559              	.L22:
 319:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DMA_InitStruct->DMA_BufferSize));
 560              		.loc 1 319 0 is_stmt 1
 561 0184 3B68     		ldr	r3, [r7]
 562 0186 1B69     		ldr	r3, [r3, #16]
 563 0188 002B     		cmp	r3, #0
 564 018a 04D0     		beq	.L23
 565              		.loc 1 319 0 is_stmt 0 discriminator 2
 566 018c 3B68     		ldr	r3, [r7]
 567 018e 1B69     		ldr	r3, [r3, #16]
 568 0190 B3F5803F 		cmp	r3, #65536
 569 0194 07D3     		bcc	.L24
 570              	.L23:
 571              		.loc 1 319 0 discriminator 1
 572 0196 40F20000 		movw	r0, #:lower16:.LC0
 573 019a C0F20000 		movt	r0, #:upper16:.LC0
 574 019e 40F23F11 		movw	r1, #319
 575 01a2 FFF7FEFF 		bl	assert_failed
 576              	.L24:
 320:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_PERIPHERAL_INC_STATE(DMA_InitStruct->DMA_PeripheralInc));
 577              		.loc 1 320 0 is_stmt 1
 578 01a6 3B68     		ldr	r3, [r7]
 579 01a8 5B69     		ldr	r3, [r3, #20]
 580 01aa B3F5007F 		cmp	r3, #512
 581 01ae 0BD0     		beq	.L25
 582              		.loc 1 320 0 is_stmt 0 discriminator 1
 583 01b0 3B68     		ldr	r3, [r7]
 584 01b2 5B69     		ldr	r3, [r3, #20]
 585 01b4 002B     		cmp	r3, #0
 586 01b6 07D0     		beq	.L25
 587 01b8 40F20000 		movw	r0, #:lower16:.LC0
 588 01bc C0F20000 		movt	r0, #:upper16:.LC0
 589 01c0 4FF4A071 		mov	r1, #320
 590 01c4 FFF7FEFF 		bl	assert_failed
 591              	.L25:
 321:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_MEMORY_INC_STATE(DMA_InitStruct->DMA_MemoryInc));
 592              		.loc 1 321 0 is_stmt 1
 593 01c8 3B68     		ldr	r3, [r7]
 594 01ca 9B69     		ldr	r3, [r3, #24]
 595 01cc B3F5806F 		cmp	r3, #1024
 596 01d0 0BD0     		beq	.L26
 597              		.loc 1 321 0 is_stmt 0 discriminator 1
 598 01d2 3B68     		ldr	r3, [r7]
 599 01d4 9B69     		ldr	r3, [r3, #24]
 600 01d6 002B     		cmp	r3, #0
 601 01d8 07D0     		beq	.L26
 602 01da 40F20000 		movw	r0, #:lower16:.LC0
 603 01de C0F20000 		movt	r0, #:upper16:.LC0
 604 01e2 40F24111 		movw	r1, #321
 605 01e6 FFF7FEFF 		bl	assert_failed
 606              	.L26:
 322:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(DMA_InitStruct->DMA_PeripheralDataSize));
 607              		.loc 1 322 0 is_stmt 1
 608 01ea 3B68     		ldr	r3, [r7]
 609 01ec DB69     		ldr	r3, [r3, #28]
 610 01ee 002B     		cmp	r3, #0
 611 01f0 11D0     		beq	.L27
 612              		.loc 1 322 0 is_stmt 0 discriminator 1
 613 01f2 3B68     		ldr	r3, [r7]
 614 01f4 DB69     		ldr	r3, [r3, #28]
 615 01f6 B3F5006F 		cmp	r3, #2048
 616 01fa 0CD0     		beq	.L27
 617 01fc 3B68     		ldr	r3, [r7]
 618 01fe DB69     		ldr	r3, [r3, #28]
 619 0200 B3F5805F 		cmp	r3, #4096
 620 0204 07D0     		beq	.L27
 621 0206 40F20000 		movw	r0, #:lower16:.LC0
 622 020a C0F20000 		movt	r0, #:upper16:.LC0
 623 020e 4FF4A171 		mov	r1, #322
 624 0212 FFF7FEFF 		bl	assert_failed
 625              	.L27:
 323:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_MEMORY_DATA_SIZE(DMA_InitStruct->DMA_MemoryDataSize));
 626              		.loc 1 323 0 is_stmt 1
 627 0216 3B68     		ldr	r3, [r7]
 628 0218 1B6A     		ldr	r3, [r3, #32]
 629 021a 002B     		cmp	r3, #0
 630 021c 11D0     		beq	.L28
 631              		.loc 1 323 0 is_stmt 0 discriminator 1
 632 021e 3B68     		ldr	r3, [r7]
 633 0220 1B6A     		ldr	r3, [r3, #32]
 634 0222 B3F5005F 		cmp	r3, #8192
 635 0226 0CD0     		beq	.L28
 636 0228 3B68     		ldr	r3, [r7]
 637 022a 1B6A     		ldr	r3, [r3, #32]
 638 022c B3F5804F 		cmp	r3, #16384
 639 0230 07D0     		beq	.L28
 640 0232 40F20000 		movw	r0, #:lower16:.LC0
 641 0236 C0F20000 		movt	r0, #:upper16:.LC0
 642 023a 40F24311 		movw	r1, #323
 643 023e FFF7FEFF 		bl	assert_failed
 644              	.L28:
 324:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_MODE(DMA_InitStruct->DMA_Mode));
 645              		.loc 1 324 0 is_stmt 1
 646 0242 3B68     		ldr	r3, [r7]
 647 0244 5B6A     		ldr	r3, [r3, #36]
 648 0246 002B     		cmp	r3, #0
 649 0248 0CD0     		beq	.L29
 650              		.loc 1 324 0 is_stmt 0 discriminator 1
 651 024a 3B68     		ldr	r3, [r7]
 652 024c 5B6A     		ldr	r3, [r3, #36]
 653 024e B3F5807F 		cmp	r3, #256
 654 0252 07D0     		beq	.L29
 655 0254 40F20000 		movw	r0, #:lower16:.LC0
 656 0258 C0F20000 		movt	r0, #:upper16:.LC0
 657 025c 4FF4A271 		mov	r1, #324
 658 0260 FFF7FEFF 		bl	assert_failed
 659              	.L29:
 325:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_PRIORITY(DMA_InitStruct->DMA_Priority));
 660              		.loc 1 325 0 is_stmt 1
 661 0264 3B68     		ldr	r3, [r7]
 662 0266 9B6A     		ldr	r3, [r3, #40]
 663 0268 002B     		cmp	r3, #0
 664 026a 16D0     		beq	.L30
 665              		.loc 1 325 0 is_stmt 0 discriminator 1
 666 026c 3B68     		ldr	r3, [r7]
 667 026e 9B6A     		ldr	r3, [r3, #40]
 668 0270 B3F5803F 		cmp	r3, #65536
 669 0274 11D0     		beq	.L30
 670 0276 3B68     		ldr	r3, [r7]
 671 0278 9B6A     		ldr	r3, [r3, #40]
 672 027a B3F5003F 		cmp	r3, #131072
 673 027e 0CD0     		beq	.L30
 674 0280 3B68     		ldr	r3, [r7]
 675 0282 9B6A     		ldr	r3, [r3, #40]
 676 0284 B3F5403F 		cmp	r3, #196608
 677 0288 07D0     		beq	.L30
 678 028a 40F20000 		movw	r0, #:lower16:.LC0
 679 028e C0F20000 		movt	r0, #:upper16:.LC0
 680 0292 40F24511 		movw	r1, #325
 681 0296 FFF7FEFF 		bl	assert_failed
 682              	.L30:
 326:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_FIFO_MODE_STATE(DMA_InitStruct->DMA_FIFOMode));
 683              		.loc 1 326 0 is_stmt 1
 684 029a 3B68     		ldr	r3, [r7]
 685 029c DB6A     		ldr	r3, [r3, #44]
 686 029e 002B     		cmp	r3, #0
 687 02a0 0BD0     		beq	.L31
 688              		.loc 1 326 0 is_stmt 0 discriminator 1
 689 02a2 3B68     		ldr	r3, [r7]
 690 02a4 DB6A     		ldr	r3, [r3, #44]
 691 02a6 042B     		cmp	r3, #4
 692 02a8 07D0     		beq	.L31
 693 02aa 40F20000 		movw	r0, #:lower16:.LC0
 694 02ae C0F20000 		movt	r0, #:upper16:.LC0
 695 02b2 4FF4A371 		mov	r1, #326
 696 02b6 FFF7FEFF 		bl	assert_failed
 697              	.L31:
 327:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_FIFO_THRESHOLD(DMA_InitStruct->DMA_FIFOThreshold));
 698              		.loc 1 327 0 is_stmt 1
 699 02ba 3B68     		ldr	r3, [r7]
 700 02bc 1B6B     		ldr	r3, [r3, #48]
 701 02be 002B     		cmp	r3, #0
 702 02c0 13D0     		beq	.L32
 703              		.loc 1 327 0 is_stmt 0 discriminator 1
 704 02c2 3B68     		ldr	r3, [r7]
 705 02c4 1B6B     		ldr	r3, [r3, #48]
 706 02c6 012B     		cmp	r3, #1
 707 02c8 0FD0     		beq	.L32
 708 02ca 3B68     		ldr	r3, [r7]
 709 02cc 1B6B     		ldr	r3, [r3, #48]
 710 02ce 022B     		cmp	r3, #2
 711 02d0 0BD0     		beq	.L32
 712 02d2 3B68     		ldr	r3, [r7]
 713 02d4 1B6B     		ldr	r3, [r3, #48]
 714 02d6 032B     		cmp	r3, #3
 715 02d8 07D0     		beq	.L32
 716 02da 40F20000 		movw	r0, #:lower16:.LC0
 717 02de C0F20000 		movt	r0, #:upper16:.LC0
 718 02e2 40F24711 		movw	r1, #327
 719 02e6 FFF7FEFF 		bl	assert_failed
 720              	.L32:
 328:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_MEMORY_BURST(DMA_InitStruct->DMA_MemoryBurst));
 721              		.loc 1 328 0 is_stmt 1
 722 02ea 3B68     		ldr	r3, [r7]
 723 02ec 5B6B     		ldr	r3, [r3, #52]
 724 02ee 002B     		cmp	r3, #0
 725 02f0 16D0     		beq	.L33
 726              		.loc 1 328 0 is_stmt 0 discriminator 1
 727 02f2 3B68     		ldr	r3, [r7]
 728 02f4 5B6B     		ldr	r3, [r3, #52]
 729 02f6 B3F5000F 		cmp	r3, #8388608
 730 02fa 11D0     		beq	.L33
 731 02fc 3B68     		ldr	r3, [r7]
 732 02fe 5B6B     		ldr	r3, [r3, #52]
 733 0300 B3F1807F 		cmp	r3, #16777216
 734 0304 0CD0     		beq	.L33
 735 0306 3B68     		ldr	r3, [r7]
 736 0308 5B6B     		ldr	r3, [r3, #52]
 737 030a B3F1C07F 		cmp	r3, #25165824
 738 030e 07D0     		beq	.L33
 739 0310 40F20000 		movw	r0, #:lower16:.LC0
 740 0314 C0F20000 		movt	r0, #:upper16:.LC0
 741 0318 4FF4A471 		mov	r1, #328
 742 031c FFF7FEFF 		bl	assert_failed
 743              	.L33:
 329:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_PERIPHERAL_BURST(DMA_InitStruct->DMA_PeripheralBurst));
 744              		.loc 1 329 0 is_stmt 1
 745 0320 3B68     		ldr	r3, [r7]
 746 0322 9B6B     		ldr	r3, [r3, #56]
 747 0324 002B     		cmp	r3, #0
 748 0326 16D0     		beq	.L34
 749              		.loc 1 329 0 is_stmt 0 discriminator 1
 750 0328 3B68     		ldr	r3, [r7]
 751 032a 9B6B     		ldr	r3, [r3, #56]
 752 032c B3F5001F 		cmp	r3, #2097152
 753 0330 11D0     		beq	.L34
 754 0332 3B68     		ldr	r3, [r7]
 755 0334 9B6B     		ldr	r3, [r3, #56]
 756 0336 B3F5800F 		cmp	r3, #4194304
 757 033a 0CD0     		beq	.L34
 758 033c 3B68     		ldr	r3, [r7]
 759 033e 9B6B     		ldr	r3, [r3, #56]
 760 0340 B3F5C00F 		cmp	r3, #6291456
 761 0344 07D0     		beq	.L34
 762 0346 40F20000 		movw	r0, #:lower16:.LC0
 763 034a C0F20000 		movt	r0, #:upper16:.LC0
 764 034e 40F24911 		movw	r1, #329
 765 0352 FFF7FEFF 		bl	assert_failed
 766              	.L34:
 330:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 331:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /*------------------------- DMAy Streamx CR Configuration ------------------*/
 332:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Get the DMAy_Streamx CR value */
 333:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   tmpreg = DMAy_Streamx->CR;
 767              		.loc 1 333 0 is_stmt 1
 768 0356 7B68     		ldr	r3, [r7, #4]
 769 0358 1B68     		ldr	r3, [r3]
 770 035a FB60     		str	r3, [r7, #12]
 334:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 335:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC and DIR bits */
 336:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   tmpreg &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 771              		.loc 1 336 0
 772 035c FA68     		ldr	r2, [r7, #12]
 773 035e 48F23F03 		movw	r3, #32831
 774 0362 CFF21C03 		movt	r3, 61468
 775 0366 1340     		ands	r3, r3, r2
 776 0368 FB60     		str	r3, [r7, #12]
 337:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****                          DMA_SxCR_PL | DMA_SxCR_MSIZE | DMA_SxCR_PSIZE | \
 338:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****                          DMA_SxCR_MINC | DMA_SxCR_PINC | DMA_SxCR_CIRC | \
 339:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****                          DMA_SxCR_DIR));
 340:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 341:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Configure DMAy Streamx: */
 342:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Set CHSEL bits according to DMA_CHSEL value */
 343:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Set DIR bits according to DMA_DIR value */
 344:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Set PINC bit according to DMA_PeripheralInc value */
 345:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Set MINC bit according to DMA_MemoryInc value */
 346:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Set PSIZE bits according to DMA_PeripheralDataSize value */
 347:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Set MSIZE bits according to DMA_MemoryDataSize value */
 348:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Set CIRC bit according to DMA_Mode value */
 349:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Set PL bits according to DMA_Priority value */
 350:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Set MBURST bits according to DMA_MemoryBurst value */
 351:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Set PBURST bits according to DMA_PeripheralBurst value */
 352:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   tmpreg |= DMA_InitStruct->DMA_Channel | DMA_InitStruct->DMA_DIR |
 777              		.loc 1 352 0
 778 036a 3B68     		ldr	r3, [r7]
 779 036c 1A68     		ldr	r2, [r3]
 780 036e 3B68     		ldr	r3, [r7]
 781 0370 DB68     		ldr	r3, [r3, #12]
 782 0372 1A43     		orrs	r2, r2, r3
 353:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****             DMA_InitStruct->DMA_PeripheralInc | DMA_InitStruct->DMA_MemoryInc |
 783              		.loc 1 353 0
 784 0374 3B68     		ldr	r3, [r7]
 785 0376 5B69     		ldr	r3, [r3, #20]
 352:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****             DMA_InitStruct->DMA_PeripheralInc | DMA_InitStruct->DMA_MemoryInc |
 786              		.loc 1 352 0
 787 0378 1A43     		orrs	r2, r2, r3
 788              		.loc 1 353 0
 789 037a 3B68     		ldr	r3, [r7]
 790 037c 9B69     		ldr	r3, [r3, #24]
 791 037e 1A43     		orrs	r2, r2, r3
 354:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****             DMA_InitStruct->DMA_PeripheralDataSize | DMA_InitStruct->DMA_MemoryDataSize |
 792              		.loc 1 354 0
 793 0380 3B68     		ldr	r3, [r7]
 794 0382 DB69     		ldr	r3, [r3, #28]
 353:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****             DMA_InitStruct->DMA_PeripheralInc | DMA_InitStruct->DMA_MemoryInc |
 795              		.loc 1 353 0
 796 0384 1A43     		orrs	r2, r2, r3
 797              		.loc 1 354 0
 798 0386 3B68     		ldr	r3, [r7]
 799 0388 1B6A     		ldr	r3, [r3, #32]
 800 038a 1A43     		orrs	r2, r2, r3
 355:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****             DMA_InitStruct->DMA_Mode | DMA_InitStruct->DMA_Priority |
 801              		.loc 1 355 0
 802 038c 3B68     		ldr	r3, [r7]
 803 038e 5B6A     		ldr	r3, [r3, #36]
 354:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****             DMA_InitStruct->DMA_PeripheralDataSize | DMA_InitStruct->DMA_MemoryDataSize |
 804              		.loc 1 354 0
 805 0390 1A43     		orrs	r2, r2, r3
 806              		.loc 1 355 0
 807 0392 3B68     		ldr	r3, [r7]
 808 0394 9B6A     		ldr	r3, [r3, #40]
 809 0396 1A43     		orrs	r2, r2, r3
 356:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****             DMA_InitStruct->DMA_MemoryBurst | DMA_InitStruct->DMA_PeripheralBurst;
 810              		.loc 1 356 0
 811 0398 3B68     		ldr	r3, [r7]
 812 039a 5B6B     		ldr	r3, [r3, #52]
 355:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****             DMA_InitStruct->DMA_Mode | DMA_InitStruct->DMA_Priority |
 813              		.loc 1 355 0
 814 039c 1A43     		orrs	r2, r2, r3
 815              		.loc 1 356 0
 816 039e 3B68     		ldr	r3, [r7]
 817 03a0 9B6B     		ldr	r3, [r3, #56]
 818 03a2 1343     		orrs	r3, r3, r2
 352:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****             DMA_InitStruct->DMA_PeripheralInc | DMA_InitStruct->DMA_MemoryInc |
 819              		.loc 1 352 0
 820 03a4 FA68     		ldr	r2, [r7, #12]
 821 03a6 1343     		orrs	r3, r3, r2
 822 03a8 FB60     		str	r3, [r7, #12]
 357:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 358:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Write to DMAy Streamx CR register */
 359:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMAy_Streamx->CR = tmpreg;
 823              		.loc 1 359 0
 824 03aa 7B68     		ldr	r3, [r7, #4]
 825 03ac FA68     		ldr	r2, [r7, #12]
 826 03ae 1A60     		str	r2, [r3]
 360:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 361:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /*------------------------- DMAy Streamx FCR Configuration -----------------*/
 362:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Get the DMAy_Streamx FCR value */
 363:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   tmpreg = DMAy_Streamx->FCR;
 827              		.loc 1 363 0
 828 03b0 7B68     		ldr	r3, [r7, #4]
 829 03b2 5B69     		ldr	r3, [r3, #20]
 830 03b4 FB60     		str	r3, [r7, #12]
 364:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 365:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Clear DMDIS and FTH bits */
 366:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   tmpreg &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 831              		.loc 1 366 0
 832 03b6 FB68     		ldr	r3, [r7, #12]
 833 03b8 23F00703 		bic	r3, r3, #7
 834 03bc FB60     		str	r3, [r7, #12]
 367:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 368:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Configure DMAy Streamx FIFO: 
 369:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     Set DMDIS bits according to DMA_FIFOMode value 
 370:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     Set FTH bits according to DMA_FIFOThreshold value */
 371:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   tmpreg |= DMA_InitStruct->DMA_FIFOMode | DMA_InitStruct->DMA_FIFOThreshold;
 835              		.loc 1 371 0
 836 03be 3B68     		ldr	r3, [r7]
 837 03c0 DA6A     		ldr	r2, [r3, #44]
 838 03c2 3B68     		ldr	r3, [r7]
 839 03c4 1B6B     		ldr	r3, [r3, #48]
 840 03c6 1343     		orrs	r3, r3, r2
 841 03c8 FA68     		ldr	r2, [r7, #12]
 842 03ca 1343     		orrs	r3, r3, r2
 843 03cc FB60     		str	r3, [r7, #12]
 372:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 373:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Write to DMAy Streamx CR */
 374:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMAy_Streamx->FCR = tmpreg;
 844              		.loc 1 374 0
 845 03ce 7B68     		ldr	r3, [r7, #4]
 846 03d0 FA68     		ldr	r2, [r7, #12]
 847 03d2 5A61     		str	r2, [r3, #20]
 375:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 376:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /*------------------------- DMAy Streamx NDTR Configuration ----------------*/
 377:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Write to DMAy Streamx NDTR register */
 378:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMAy_Streamx->NDTR = DMA_InitStruct->DMA_BufferSize;
 848              		.loc 1 378 0
 849 03d4 3B68     		ldr	r3, [r7]
 850 03d6 1A69     		ldr	r2, [r3, #16]
 851 03d8 7B68     		ldr	r3, [r7, #4]
 852 03da 5A60     		str	r2, [r3, #4]
 379:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 380:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /*------------------------- DMAy Streamx PAR Configuration -----------------*/
 381:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Write to DMAy Streamx PAR */
 382:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMAy_Streamx->PAR = DMA_InitStruct->DMA_PeripheralBaseAddr;
 853              		.loc 1 382 0
 854 03dc 3B68     		ldr	r3, [r7]
 855 03de 5A68     		ldr	r2, [r3, #4]
 856 03e0 7B68     		ldr	r3, [r7, #4]
 857 03e2 9A60     		str	r2, [r3, #8]
 383:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 384:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /*------------------------- DMAy Streamx M0AR Configuration ----------------*/
 385:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Write to DMAy Streamx M0AR */
 386:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMAy_Streamx->M0AR = DMA_InitStruct->DMA_Memory0BaseAddr;
 858              		.loc 1 386 0
 859 03e4 3B68     		ldr	r3, [r7]
 860 03e6 9A68     		ldr	r2, [r3, #8]
 861 03e8 7B68     		ldr	r3, [r7, #4]
 862 03ea DA60     		str	r2, [r3, #12]
 387:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** }
 863              		.loc 1 387 0
 864 03ec 1037     		adds	r7, r7, #16
 865 03ee BD46     		mov	sp, r7
 866              		@ sp needed
 867 03f0 80BD     		pop	{r7, pc}
 868              		.cfi_endproc
 869              	.LFE111:
 871 03f2 00BF     		.section	.text.DMA_StructInit,"ax",%progbits
 872              		.align	2
 873              		.global	DMA_StructInit
 874              		.thumb
 875              		.thumb_func
 877              	DMA_StructInit:
 878              	.LFB112:
 388:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 389:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /**
 390:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @brief  Fills each DMA_InitStruct member with its default value.
 391:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMA_InitStruct : pointer to a DMA_InitTypeDef structure which will 
 392:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         be initialized.
 393:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @retval None
 394:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
 395:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** void DMA_StructInit(DMA_InitTypeDef* DMA_InitStruct)
 396:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** {
 879              		.loc 1 396 0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 8
 882              		@ frame_needed = 1, uses_anonymous_args = 0
 883              		@ link register save eliminated.
 884 0000 80B4     		push	{r7}
 885              	.LCFI6:
 886              		.cfi_def_cfa_offset 4
 887              		.cfi_offset 7, -4
 888 0002 83B0     		sub	sp, sp, #12
 889              	.LCFI7:
 890              		.cfi_def_cfa_offset 16
 891 0004 00AF     		add	r7, sp, #0
 892              	.LCFI8:
 893              		.cfi_def_cfa_register 7
 894 0006 7860     		str	r0, [r7, #4]
 397:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /*-------------- Reset DMA init structure parameters values ----------------*/
 398:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Initialize the DMA_Channel member */
 399:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_Channel = 0;
 895              		.loc 1 399 0
 896 0008 7B68     		ldr	r3, [r7, #4]
 897 000a 0022     		movs	r2, #0
 898 000c 1A60     		str	r2, [r3]
 400:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 401:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Initialize the DMA_PeripheralBaseAddr member */
 402:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_PeripheralBaseAddr = 0;
 899              		.loc 1 402 0
 900 000e 7B68     		ldr	r3, [r7, #4]
 901 0010 0022     		movs	r2, #0
 902 0012 5A60     		str	r2, [r3, #4]
 403:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 404:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Initialize the DMA_Memory0BaseAddr member */
 405:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_Memory0BaseAddr = 0;
 903              		.loc 1 405 0
 904 0014 7B68     		ldr	r3, [r7, #4]
 905 0016 0022     		movs	r2, #0
 906 0018 9A60     		str	r2, [r3, #8]
 406:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 407:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Initialize the DMA_DIR member */
 408:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_DIR = DMA_DIR_PeripheralToMemory;
 907              		.loc 1 408 0
 908 001a 7B68     		ldr	r3, [r7, #4]
 909 001c 0022     		movs	r2, #0
 910 001e DA60     		str	r2, [r3, #12]
 409:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 410:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Initialize the DMA_BufferSize member */
 411:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_BufferSize = 0;
 911              		.loc 1 411 0
 912 0020 7B68     		ldr	r3, [r7, #4]
 913 0022 0022     		movs	r2, #0
 914 0024 1A61     		str	r2, [r3, #16]
 412:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 413:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Initialize the DMA_PeripheralInc member */
 414:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_PeripheralInc = DMA_PeripheralInc_Disable;
 915              		.loc 1 414 0
 916 0026 7B68     		ldr	r3, [r7, #4]
 917 0028 0022     		movs	r2, #0
 918 002a 5A61     		str	r2, [r3, #20]
 415:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 416:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Initialize the DMA_MemoryInc member */
 417:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_MemoryInc = DMA_MemoryInc_Disable;
 919              		.loc 1 417 0
 920 002c 7B68     		ldr	r3, [r7, #4]
 921 002e 0022     		movs	r2, #0
 922 0030 9A61     		str	r2, [r3, #24]
 418:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 419:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Initialize the DMA_PeripheralDataSize member */
 420:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;
 923              		.loc 1 420 0
 924 0032 7B68     		ldr	r3, [r7, #4]
 925 0034 0022     		movs	r2, #0
 926 0036 DA61     		str	r2, [r3, #28]
 421:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 422:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Initialize the DMA_MemoryDataSize member */
 423:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;
 927              		.loc 1 423 0
 928 0038 7B68     		ldr	r3, [r7, #4]
 929 003a 0022     		movs	r2, #0
 930 003c 1A62     		str	r2, [r3, #32]
 424:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 425:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Initialize the DMA_Mode member */
 426:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_Mode = DMA_Mode_Normal;
 931              		.loc 1 426 0
 932 003e 7B68     		ldr	r3, [r7, #4]
 933 0040 0022     		movs	r2, #0
 934 0042 5A62     		str	r2, [r3, #36]
 427:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 428:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Initialize the DMA_Priority member */
 429:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_Priority = DMA_Priority_Low;
 935              		.loc 1 429 0
 936 0044 7B68     		ldr	r3, [r7, #4]
 937 0046 0022     		movs	r2, #0
 938 0048 9A62     		str	r2, [r3, #40]
 430:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 431:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Initialize the DMA_FIFOMode member */
 432:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_FIFOMode = DMA_FIFOMode_Disable;
 939              		.loc 1 432 0
 940 004a 7B68     		ldr	r3, [r7, #4]
 941 004c 0022     		movs	r2, #0
 942 004e DA62     		str	r2, [r3, #44]
 433:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 434:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Initialize the DMA_FIFOThreshold member */
 435:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_FIFOThreshold = DMA_FIFOThreshold_1QuarterFull;
 943              		.loc 1 435 0
 944 0050 7B68     		ldr	r3, [r7, #4]
 945 0052 0022     		movs	r2, #0
 946 0054 1A63     		str	r2, [r3, #48]
 436:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 437:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Initialize the DMA_MemoryBurst member */
 438:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_MemoryBurst = DMA_MemoryBurst_Single;
 947              		.loc 1 438 0
 948 0056 7B68     		ldr	r3, [r7, #4]
 949 0058 0022     		movs	r2, #0
 950 005a 5A63     		str	r2, [r3, #52]
 439:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 440:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Initialize the DMA_PeripheralBurst member */
 441:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMA_InitStruct->DMA_PeripheralBurst = DMA_PeripheralBurst_Single;
 951              		.loc 1 441 0
 952 005c 7B68     		ldr	r3, [r7, #4]
 953 005e 0022     		movs	r2, #0
 954 0060 9A63     		str	r2, [r3, #56]
 442:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** }
 955              		.loc 1 442 0
 956 0062 0C37     		adds	r7, r7, #12
 957 0064 BD46     		mov	sp, r7
 958              		@ sp needed
 959 0066 5DF8047B 		ldr	r7, [sp], #4
 960 006a 7047     		bx	lr
 961              		.cfi_endproc
 962              	.LFE112:
 964              		.section	.text.DMA_Cmd,"ax",%progbits
 965              		.align	2
 966              		.global	DMA_Cmd
 967              		.thumb
 968              		.thumb_func
 970              	DMA_Cmd:
 971              	.LFB113:
 443:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 444:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /**
 445:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @brief  Enables or disables the specified DMAy Streamx.
 446:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 447:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         to 7 to select the DMA Stream.
 448:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  NewState: new state of the DMAy Streamx. 
 449:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          This parameter can be: ENABLE or DISABLE.
 450:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *
 451:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @note  This function may be used to perform Pause-Resume operation. When a
 452:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *        transfer is ongoing, calling this function to disable the Stream will
 453:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *        cause the transfer to be paused. All configuration registers and the
 454:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *        number of remaining data will be preserved. When calling again this
 455:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *        function to re-enable the Stream, the transfer will be resumed from
 456:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *        the point where it was paused.          
 457:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *    
 458:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @note  After configuring the DMA Stream (DMA_Init() function) and enabling the
 459:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *        stream, it is recommended to check (or wait until) the DMA Stream is
 460:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *        effectively enabled. A Stream may remain disabled if a configuration 
 461:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *        parameter is wrong.
 462:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *        After disabling a DMA Stream, it is also recommended to check (or wait
 463:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *        until) the DMA Stream is effectively disabled. If a Stream is disabled 
 464:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *        while a data transfer is ongoing, the current data will be transferred
 465:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *        and the Stream will be effectively disabled only after the transfer of
 466:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *        this single data is finished.            
 467:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *    
 468:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @retval None
 469:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
 470:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** void DMA_Cmd(DMA_Stream_TypeDef* DMAy_Streamx, FunctionalState NewState)
 471:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** {
 972              		.loc 1 471 0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 8
 975              		@ frame_needed = 1, uses_anonymous_args = 0
 976 0000 80B5     		push	{r7, lr}
 977              	.LCFI9:
 978              		.cfi_def_cfa_offset 8
 979              		.cfi_offset 7, -8
 980              		.cfi_offset 14, -4
 981 0002 82B0     		sub	sp, sp, #8
 982              	.LCFI10:
 983              		.cfi_def_cfa_offset 16
 984 0004 00AF     		add	r7, sp, #0
 985              	.LCFI11:
 986              		.cfi_def_cfa_register 7
 987 0006 7860     		str	r0, [r7, #4]
 988 0008 0B46     		mov	r3, r1
 989 000a FB70     		strb	r3, [r7, #3]
 472:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check the parameters */
 473:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 990              		.loc 1 473 0
 991 000c 7A68     		ldr	r2, [r7, #4]
 992 000e 46F21003 		movw	r3, #24592
 993 0012 C4F20203 		movt	r3, 16386
 994 0016 9A42     		cmp	r2, r3
 995 0018 70D0     		beq	.L37
 996              		.loc 1 473 0 is_stmt 0 discriminator 1
 997 001a 7A68     		ldr	r2, [r7, #4]
 998 001c 46F22803 		movw	r3, #24616
 999 0020 C4F20203 		movt	r3, 16386
 1000 0024 9A42     		cmp	r2, r3
 1001 0026 69D0     		beq	.L37
 1002 0028 7A68     		ldr	r2, [r7, #4]
 1003 002a 46F24003 		movw	r3, #24640
 1004 002e C4F20203 		movt	r3, 16386
 1005 0032 9A42     		cmp	r2, r3
 1006 0034 62D0     		beq	.L37
 1007 0036 7A68     		ldr	r2, [r7, #4]
 1008 0038 46F25803 		movw	r3, #24664
 1009 003c C4F20203 		movt	r3, 16386
 1010 0040 9A42     		cmp	r2, r3
 1011 0042 5BD0     		beq	.L37
 1012 0044 7A68     		ldr	r2, [r7, #4]
 1013 0046 46F27003 		movw	r3, #24688
 1014 004a C4F20203 		movt	r3, 16386
 1015 004e 9A42     		cmp	r2, r3
 1016 0050 54D0     		beq	.L37
 1017 0052 7A68     		ldr	r2, [r7, #4]
 1018 0054 46F28803 		movw	r3, #24712
 1019 0058 C4F20203 		movt	r3, 16386
 1020 005c 9A42     		cmp	r2, r3
 1021 005e 4DD0     		beq	.L37
 1022 0060 7A68     		ldr	r2, [r7, #4]
 1023 0062 46F2A003 		movw	r3, #24736
 1024 0066 C4F20203 		movt	r3, 16386
 1025 006a 9A42     		cmp	r2, r3
 1026 006c 46D0     		beq	.L37
 1027 006e 7A68     		ldr	r2, [r7, #4]
 1028 0070 46F2B803 		movw	r3, #24760
 1029 0074 C4F20203 		movt	r3, 16386
 1030 0078 9A42     		cmp	r2, r3
 1031 007a 3FD0     		beq	.L37
 1032 007c 7A68     		ldr	r2, [r7, #4]
 1033 007e 46F21043 		movw	r3, #25616
 1034 0082 C4F20203 		movt	r3, 16386
 1035 0086 9A42     		cmp	r2, r3
 1036 0088 38D0     		beq	.L37
 1037 008a 7A68     		ldr	r2, [r7, #4]
 1038 008c 46F22843 		movw	r3, #25640
 1039 0090 C4F20203 		movt	r3, 16386
 1040 0094 9A42     		cmp	r2, r3
 1041 0096 31D0     		beq	.L37
 1042 0098 7A68     		ldr	r2, [r7, #4]
 1043 009a 46F24043 		movw	r3, #25664
 1044 009e C4F20203 		movt	r3, 16386
 1045 00a2 9A42     		cmp	r2, r3
 1046 00a4 2AD0     		beq	.L37
 1047 00a6 7A68     		ldr	r2, [r7, #4]
 1048 00a8 46F25843 		movw	r3, #25688
 1049 00ac C4F20203 		movt	r3, 16386
 1050 00b0 9A42     		cmp	r2, r3
 1051 00b2 23D0     		beq	.L37
 1052 00b4 7A68     		ldr	r2, [r7, #4]
 1053 00b6 46F27043 		movw	r3, #25712
 1054 00ba C4F20203 		movt	r3, 16386
 1055 00be 9A42     		cmp	r2, r3
 1056 00c0 1CD0     		beq	.L37
 1057 00c2 7A68     		ldr	r2, [r7, #4]
 1058 00c4 46F28843 		movw	r3, #25736
 1059 00c8 C4F20203 		movt	r3, 16386
 1060 00cc 9A42     		cmp	r2, r3
 1061 00ce 15D0     		beq	.L37
 1062 00d0 7A68     		ldr	r2, [r7, #4]
 1063 00d2 46F2A043 		movw	r3, #25760
 1064 00d6 C4F20203 		movt	r3, 16386
 1065 00da 9A42     		cmp	r2, r3
 1066 00dc 0ED0     		beq	.L37
 1067 00de 7A68     		ldr	r2, [r7, #4]
 1068 00e0 46F2B843 		movw	r3, #25784
 1069 00e4 C4F20203 		movt	r3, 16386
 1070 00e8 9A42     		cmp	r2, r3
 1071 00ea 07D0     		beq	.L37
 1072 00ec 40F20000 		movw	r0, #:lower16:.LC0
 1073 00f0 C0F20000 		movt	r0, #:upper16:.LC0
 1074 00f4 40F2D911 		movw	r1, #473
 1075 00f8 FFF7FEFF 		bl	assert_failed
 1076              	.L37:
 474:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1077              		.loc 1 474 0 is_stmt 1
 1078 00fc FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1079 00fe 002B     		cmp	r3, #0
 1080 0100 0AD0     		beq	.L38
 1081              		.loc 1 474 0 is_stmt 0 discriminator 1
 1082 0102 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1083 0104 012B     		cmp	r3, #1
 1084 0106 07D0     		beq	.L38
 1085 0108 40F20000 		movw	r0, #:lower16:.LC0
 1086 010c C0F20000 		movt	r0, #:upper16:.LC0
 1087 0110 4FF4ED71 		mov	r1, #474
 1088 0114 FFF7FEFF 		bl	assert_failed
 1089              	.L38:
 475:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 476:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   if (NewState != DISABLE)
 1090              		.loc 1 476 0 is_stmt 1
 1091 0118 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1092 011a 002B     		cmp	r3, #0
 1093 011c 06D0     		beq	.L39
 477:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 478:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Enable the selected DMAy Streamx by setting EN bit */
 479:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMAy_Streamx->CR |= (uint32_t)DMA_SxCR_EN;
 1094              		.loc 1 479 0
 1095 011e 7B68     		ldr	r3, [r7, #4]
 1096 0120 1B68     		ldr	r3, [r3]
 1097 0122 43F00102 		orr	r2, r3, #1
 1098 0126 7B68     		ldr	r3, [r7, #4]
 1099 0128 1A60     		str	r2, [r3]
 1100 012a 05E0     		b	.L36
 1101              	.L39:
 480:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 481:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else
 482:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 483:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Disable the selected DMAy Streamx by clearing EN bit */
 484:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMAy_Streamx->CR &= ~(uint32_t)DMA_SxCR_EN;
 1102              		.loc 1 484 0
 1103 012c 7B68     		ldr	r3, [r7, #4]
 1104 012e 1B68     		ldr	r3, [r3]
 1105 0130 23F00102 		bic	r2, r3, #1
 1106 0134 7B68     		ldr	r3, [r7, #4]
 1107 0136 1A60     		str	r2, [r3]
 1108              	.L36:
 485:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 486:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** }
 1109              		.loc 1 486 0
 1110 0138 0837     		adds	r7, r7, #8
 1111 013a BD46     		mov	sp, r7
 1112              		@ sp needed
 1113 013c 80BD     		pop	{r7, pc}
 1114              		.cfi_endproc
 1115              	.LFE113:
 1117 013e 00BF     		.section	.text.DMA_PeriphIncOffsetSizeConfig,"ax",%progbits
 1118              		.align	2
 1119              		.global	DMA_PeriphIncOffsetSizeConfig
 1120              		.thumb
 1121              		.thumb_func
 1123              	DMA_PeriphIncOffsetSizeConfig:
 1124              	.LFB114:
 487:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 488:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /**
 489:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @brief  Configures, when the PINC (Peripheral Increment address mode) bit is
 490:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         set, if the peripheral address should be incremented with the data 
 491:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         size (configured with PSIZE bits) or by a fixed offset equal to 4
 492:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         (32-bit aligned addresses).
 493:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *   
 494:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @note   This function has no effect if the Peripheral Increment mode is disabled.
 495:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *     
 496:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 497:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 498:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMA_Pincos: specifies the Peripheral increment offset size.
 499:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          This parameter can be one of the following values:
 500:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_PINCOS_Psize: Peripheral address increment is done  
 501:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *                                   accordingly to PSIZE parameter.
 502:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_PINCOS_WordAligned: Peripheral address increment offset is 
 503:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *                                         fixed to 4 (32-bit aligned addresses). 
 504:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @retval None
 505:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
 506:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** void DMA_PeriphIncOffsetSizeConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_Pincos)
 507:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** {
 1125              		.loc 1 507 0
 1126              		.cfi_startproc
 1127              		@ args = 0, pretend = 0, frame = 8
 1128              		@ frame_needed = 1, uses_anonymous_args = 0
 1129 0000 80B5     		push	{r7, lr}
 1130              	.LCFI12:
 1131              		.cfi_def_cfa_offset 8
 1132              		.cfi_offset 7, -8
 1133              		.cfi_offset 14, -4
 1134 0002 82B0     		sub	sp, sp, #8
 1135              	.LCFI13:
 1136              		.cfi_def_cfa_offset 16
 1137 0004 00AF     		add	r7, sp, #0
 1138              	.LCFI14:
 1139              		.cfi_def_cfa_register 7
 1140 0006 7860     		str	r0, [r7, #4]
 1141 0008 3960     		str	r1, [r7]
 508:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check the parameters */
 509:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 1142              		.loc 1 509 0
 1143 000a 7A68     		ldr	r2, [r7, #4]
 1144 000c 46F21003 		movw	r3, #24592
 1145 0010 C4F20203 		movt	r3, 16386
 1146 0014 9A42     		cmp	r2, r3
 1147 0016 70D0     		beq	.L42
 1148              		.loc 1 509 0 is_stmt 0 discriminator 1
 1149 0018 7A68     		ldr	r2, [r7, #4]
 1150 001a 46F22803 		movw	r3, #24616
 1151 001e C4F20203 		movt	r3, 16386
 1152 0022 9A42     		cmp	r2, r3
 1153 0024 69D0     		beq	.L42
 1154 0026 7A68     		ldr	r2, [r7, #4]
 1155 0028 46F24003 		movw	r3, #24640
 1156 002c C4F20203 		movt	r3, 16386
 1157 0030 9A42     		cmp	r2, r3
 1158 0032 62D0     		beq	.L42
 1159 0034 7A68     		ldr	r2, [r7, #4]
 1160 0036 46F25803 		movw	r3, #24664
 1161 003a C4F20203 		movt	r3, 16386
 1162 003e 9A42     		cmp	r2, r3
 1163 0040 5BD0     		beq	.L42
 1164 0042 7A68     		ldr	r2, [r7, #4]
 1165 0044 46F27003 		movw	r3, #24688
 1166 0048 C4F20203 		movt	r3, 16386
 1167 004c 9A42     		cmp	r2, r3
 1168 004e 54D0     		beq	.L42
 1169 0050 7A68     		ldr	r2, [r7, #4]
 1170 0052 46F28803 		movw	r3, #24712
 1171 0056 C4F20203 		movt	r3, 16386
 1172 005a 9A42     		cmp	r2, r3
 1173 005c 4DD0     		beq	.L42
 1174 005e 7A68     		ldr	r2, [r7, #4]
 1175 0060 46F2A003 		movw	r3, #24736
 1176 0064 C4F20203 		movt	r3, 16386
 1177 0068 9A42     		cmp	r2, r3
 1178 006a 46D0     		beq	.L42
 1179 006c 7A68     		ldr	r2, [r7, #4]
 1180 006e 46F2B803 		movw	r3, #24760
 1181 0072 C4F20203 		movt	r3, 16386
 1182 0076 9A42     		cmp	r2, r3
 1183 0078 3FD0     		beq	.L42
 1184 007a 7A68     		ldr	r2, [r7, #4]
 1185 007c 46F21043 		movw	r3, #25616
 1186 0080 C4F20203 		movt	r3, 16386
 1187 0084 9A42     		cmp	r2, r3
 1188 0086 38D0     		beq	.L42
 1189 0088 7A68     		ldr	r2, [r7, #4]
 1190 008a 46F22843 		movw	r3, #25640
 1191 008e C4F20203 		movt	r3, 16386
 1192 0092 9A42     		cmp	r2, r3
 1193 0094 31D0     		beq	.L42
 1194 0096 7A68     		ldr	r2, [r7, #4]
 1195 0098 46F24043 		movw	r3, #25664
 1196 009c C4F20203 		movt	r3, 16386
 1197 00a0 9A42     		cmp	r2, r3
 1198 00a2 2AD0     		beq	.L42
 1199 00a4 7A68     		ldr	r2, [r7, #4]
 1200 00a6 46F25843 		movw	r3, #25688
 1201 00aa C4F20203 		movt	r3, 16386
 1202 00ae 9A42     		cmp	r2, r3
 1203 00b0 23D0     		beq	.L42
 1204 00b2 7A68     		ldr	r2, [r7, #4]
 1205 00b4 46F27043 		movw	r3, #25712
 1206 00b8 C4F20203 		movt	r3, 16386
 1207 00bc 9A42     		cmp	r2, r3
 1208 00be 1CD0     		beq	.L42
 1209 00c0 7A68     		ldr	r2, [r7, #4]
 1210 00c2 46F28843 		movw	r3, #25736
 1211 00c6 C4F20203 		movt	r3, 16386
 1212 00ca 9A42     		cmp	r2, r3
 1213 00cc 15D0     		beq	.L42
 1214 00ce 7A68     		ldr	r2, [r7, #4]
 1215 00d0 46F2A043 		movw	r3, #25760
 1216 00d4 C4F20203 		movt	r3, 16386
 1217 00d8 9A42     		cmp	r2, r3
 1218 00da 0ED0     		beq	.L42
 1219 00dc 7A68     		ldr	r2, [r7, #4]
 1220 00de 46F2B843 		movw	r3, #25784
 1221 00e2 C4F20203 		movt	r3, 16386
 1222 00e6 9A42     		cmp	r2, r3
 1223 00e8 07D0     		beq	.L42
 1224 00ea 40F20000 		movw	r0, #:lower16:.LC0
 1225 00ee C0F20000 		movt	r0, #:upper16:.LC0
 1226 00f2 40F2FD11 		movw	r1, #509
 1227 00f6 FFF7FEFF 		bl	assert_failed
 1228              	.L42:
 510:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_PINCOS_SIZE(DMA_Pincos));
 1229              		.loc 1 510 0 is_stmt 1
 1230 00fa 3B68     		ldr	r3, [r7]
 1231 00fc 002B     		cmp	r3, #0
 1232 00fe 0BD0     		beq	.L43
 1233              		.loc 1 510 0 is_stmt 0 discriminator 1
 1234 0100 3B68     		ldr	r3, [r7]
 1235 0102 B3F5004F 		cmp	r3, #32768
 1236 0106 07D0     		beq	.L43
 1237 0108 40F20000 		movw	r0, #:lower16:.LC0
 1238 010c C0F20000 		movt	r0, #:upper16:.LC0
 1239 0110 4FF4FF71 		mov	r1, #510
 1240 0114 FFF7FEFF 		bl	assert_failed
 1241              	.L43:
 511:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 512:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check the needed Peripheral increment offset */
 513:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   if(DMA_Pincos != DMA_PINCOS_Psize)
 1242              		.loc 1 513 0 is_stmt 1
 1243 0118 3B68     		ldr	r3, [r7]
 1244 011a 002B     		cmp	r3, #0
 1245 011c 06D0     		beq	.L44
 514:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 515:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Configure DMA_SxCR_PINCOS bit with the input parameter */
 516:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMAy_Streamx->CR |= (uint32_t)DMA_SxCR_PINCOS;     
 1246              		.loc 1 516 0
 1247 011e 7B68     		ldr	r3, [r7, #4]
 1248 0120 1B68     		ldr	r3, [r3]
 1249 0122 43F40042 		orr	r2, r3, #32768
 1250 0126 7B68     		ldr	r3, [r7, #4]
 1251 0128 1A60     		str	r2, [r3]
 1252 012a 05E0     		b	.L41
 1253              	.L44:
 517:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 518:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else
 519:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 520:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Clear the PINCOS bit: Peripheral address incremented according to PSIZE */
 521:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMAy_Streamx->CR &= ~(uint32_t)DMA_SxCR_PINCOS;    
 1254              		.loc 1 521 0
 1255 012c 7B68     		ldr	r3, [r7, #4]
 1256 012e 1B68     		ldr	r3, [r3]
 1257 0130 23F40042 		bic	r2, r3, #32768
 1258 0134 7B68     		ldr	r3, [r7, #4]
 1259 0136 1A60     		str	r2, [r3]
 1260              	.L41:
 522:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 523:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** }
 1261              		.loc 1 523 0
 1262 0138 0837     		adds	r7, r7, #8
 1263 013a BD46     		mov	sp, r7
 1264              		@ sp needed
 1265 013c 80BD     		pop	{r7, pc}
 1266              		.cfi_endproc
 1267              	.LFE114:
 1269 013e 00BF     		.section	.text.DMA_FlowControllerConfig,"ax",%progbits
 1270              		.align	2
 1271              		.global	DMA_FlowControllerConfig
 1272              		.thumb
 1273              		.thumb_func
 1275              	DMA_FlowControllerConfig:
 1276              	.LFB115:
 524:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 525:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /**
 526:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @brief  Configures, when the DMAy Streamx is disabled, the flow controller for
 527:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         the next transactions (Peripheral or Memory).
 528:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *       
 529:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @note   Before enabling this feature, check if the used peripheral supports 
 530:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         the Flow Controller mode or not.    
 531:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *  
 532:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 533:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 534:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMA_FlowCtrl: specifies the DMA flow controller.
 535:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          This parameter can be one of the following values:
 536:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_FlowCtrl_Memory: DMAy_Streamx transactions flow controller is 
 537:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *                                      the DMA controller.
 538:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_FlowCtrl_Peripheral: DMAy_Streamx transactions flow controller 
 539:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *                                          is the peripheral.    
 540:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @retval None
 541:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
 542:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** void DMA_FlowControllerConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_FlowCtrl)
 543:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** {
 1277              		.loc 1 543 0
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 8
 1280              		@ frame_needed = 1, uses_anonymous_args = 0
 1281 0000 80B5     		push	{r7, lr}
 1282              	.LCFI15:
 1283              		.cfi_def_cfa_offset 8
 1284              		.cfi_offset 7, -8
 1285              		.cfi_offset 14, -4
 1286 0002 82B0     		sub	sp, sp, #8
 1287              	.LCFI16:
 1288              		.cfi_def_cfa_offset 16
 1289 0004 00AF     		add	r7, sp, #0
 1290              	.LCFI17:
 1291              		.cfi_def_cfa_register 7
 1292 0006 7860     		str	r0, [r7, #4]
 1293 0008 3960     		str	r1, [r7]
 544:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check the parameters */
 545:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 1294              		.loc 1 545 0
 1295 000a 7A68     		ldr	r2, [r7, #4]
 1296 000c 46F21003 		movw	r3, #24592
 1297 0010 C4F20203 		movt	r3, 16386
 1298 0014 9A42     		cmp	r2, r3
 1299 0016 70D0     		beq	.L47
 1300              		.loc 1 545 0 is_stmt 0 discriminator 1
 1301 0018 7A68     		ldr	r2, [r7, #4]
 1302 001a 46F22803 		movw	r3, #24616
 1303 001e C4F20203 		movt	r3, 16386
 1304 0022 9A42     		cmp	r2, r3
 1305 0024 69D0     		beq	.L47
 1306 0026 7A68     		ldr	r2, [r7, #4]
 1307 0028 46F24003 		movw	r3, #24640
 1308 002c C4F20203 		movt	r3, 16386
 1309 0030 9A42     		cmp	r2, r3
 1310 0032 62D0     		beq	.L47
 1311 0034 7A68     		ldr	r2, [r7, #4]
 1312 0036 46F25803 		movw	r3, #24664
 1313 003a C4F20203 		movt	r3, 16386
 1314 003e 9A42     		cmp	r2, r3
 1315 0040 5BD0     		beq	.L47
 1316 0042 7A68     		ldr	r2, [r7, #4]
 1317 0044 46F27003 		movw	r3, #24688
 1318 0048 C4F20203 		movt	r3, 16386
 1319 004c 9A42     		cmp	r2, r3
 1320 004e 54D0     		beq	.L47
 1321 0050 7A68     		ldr	r2, [r7, #4]
 1322 0052 46F28803 		movw	r3, #24712
 1323 0056 C4F20203 		movt	r3, 16386
 1324 005a 9A42     		cmp	r2, r3
 1325 005c 4DD0     		beq	.L47
 1326 005e 7A68     		ldr	r2, [r7, #4]
 1327 0060 46F2A003 		movw	r3, #24736
 1328 0064 C4F20203 		movt	r3, 16386
 1329 0068 9A42     		cmp	r2, r3
 1330 006a 46D0     		beq	.L47
 1331 006c 7A68     		ldr	r2, [r7, #4]
 1332 006e 46F2B803 		movw	r3, #24760
 1333 0072 C4F20203 		movt	r3, 16386
 1334 0076 9A42     		cmp	r2, r3
 1335 0078 3FD0     		beq	.L47
 1336 007a 7A68     		ldr	r2, [r7, #4]
 1337 007c 46F21043 		movw	r3, #25616
 1338 0080 C4F20203 		movt	r3, 16386
 1339 0084 9A42     		cmp	r2, r3
 1340 0086 38D0     		beq	.L47
 1341 0088 7A68     		ldr	r2, [r7, #4]
 1342 008a 46F22843 		movw	r3, #25640
 1343 008e C4F20203 		movt	r3, 16386
 1344 0092 9A42     		cmp	r2, r3
 1345 0094 31D0     		beq	.L47
 1346 0096 7A68     		ldr	r2, [r7, #4]
 1347 0098 46F24043 		movw	r3, #25664
 1348 009c C4F20203 		movt	r3, 16386
 1349 00a0 9A42     		cmp	r2, r3
 1350 00a2 2AD0     		beq	.L47
 1351 00a4 7A68     		ldr	r2, [r7, #4]
 1352 00a6 46F25843 		movw	r3, #25688
 1353 00aa C4F20203 		movt	r3, 16386
 1354 00ae 9A42     		cmp	r2, r3
 1355 00b0 23D0     		beq	.L47
 1356 00b2 7A68     		ldr	r2, [r7, #4]
 1357 00b4 46F27043 		movw	r3, #25712
 1358 00b8 C4F20203 		movt	r3, 16386
 1359 00bc 9A42     		cmp	r2, r3
 1360 00be 1CD0     		beq	.L47
 1361 00c0 7A68     		ldr	r2, [r7, #4]
 1362 00c2 46F28843 		movw	r3, #25736
 1363 00c6 C4F20203 		movt	r3, 16386
 1364 00ca 9A42     		cmp	r2, r3
 1365 00cc 15D0     		beq	.L47
 1366 00ce 7A68     		ldr	r2, [r7, #4]
 1367 00d0 46F2A043 		movw	r3, #25760
 1368 00d4 C4F20203 		movt	r3, 16386
 1369 00d8 9A42     		cmp	r2, r3
 1370 00da 0ED0     		beq	.L47
 1371 00dc 7A68     		ldr	r2, [r7, #4]
 1372 00de 46F2B843 		movw	r3, #25784
 1373 00e2 C4F20203 		movt	r3, 16386
 1374 00e6 9A42     		cmp	r2, r3
 1375 00e8 07D0     		beq	.L47
 1376 00ea 40F20000 		movw	r0, #:lower16:.LC0
 1377 00ee C0F20000 		movt	r0, #:upper16:.LC0
 1378 00f2 40F22121 		movw	r1, #545
 1379 00f6 FFF7FEFF 		bl	assert_failed
 1380              	.L47:
 546:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_FLOW_CTRL(DMA_FlowCtrl));
 1381              		.loc 1 546 0 is_stmt 1
 1382 00fa 3B68     		ldr	r3, [r7]
 1383 00fc 002B     		cmp	r3, #0
 1384 00fe 0AD0     		beq	.L48
 1385              		.loc 1 546 0 is_stmt 0 discriminator 1
 1386 0100 3B68     		ldr	r3, [r7]
 1387 0102 202B     		cmp	r3, #32
 1388 0104 07D0     		beq	.L48
 1389 0106 40F20000 		movw	r0, #:lower16:.LC0
 1390 010a C0F20000 		movt	r0, #:upper16:.LC0
 1391 010e 40F22221 		movw	r1, #546
 1392 0112 FFF7FEFF 		bl	assert_failed
 1393              	.L48:
 547:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 548:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check the needed flow controller  */
 549:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   if(DMA_FlowCtrl != DMA_FlowCtrl_Memory)
 1394              		.loc 1 549 0 is_stmt 1
 1395 0116 3B68     		ldr	r3, [r7]
 1396 0118 002B     		cmp	r3, #0
 1397 011a 06D0     		beq	.L49
 550:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 551:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Configure DMA_SxCR_PFCTRL bit with the input parameter */
 552:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMAy_Streamx->CR |= (uint32_t)DMA_SxCR_PFCTRL;   
 1398              		.loc 1 552 0
 1399 011c 7B68     		ldr	r3, [r7, #4]
 1400 011e 1B68     		ldr	r3, [r3]
 1401 0120 43F02002 		orr	r2, r3, #32
 1402 0124 7B68     		ldr	r3, [r7, #4]
 1403 0126 1A60     		str	r2, [r3]
 1404 0128 05E0     		b	.L46
 1405              	.L49:
 553:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 554:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else
 555:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 556:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Clear the PFCTRL bit: Memory is the flow controller */
 557:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMAy_Streamx->CR &= ~(uint32_t)DMA_SxCR_PFCTRL;    
 1406              		.loc 1 557 0
 1407 012a 7B68     		ldr	r3, [r7, #4]
 1408 012c 1B68     		ldr	r3, [r3]
 1409 012e 23F02002 		bic	r2, r3, #32
 1410 0132 7B68     		ldr	r3, [r7, #4]
 1411 0134 1A60     		str	r2, [r3]
 1412              	.L46:
 558:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 559:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** }
 1413              		.loc 1 559 0
 1414 0136 0837     		adds	r7, r7, #8
 1415 0138 BD46     		mov	sp, r7
 1416              		@ sp needed
 1417 013a 80BD     		pop	{r7, pc}
 1418              		.cfi_endproc
 1419              	.LFE115:
 1421              		.section	.text.DMA_SetCurrDataCounter,"ax",%progbits
 1422              		.align	2
 1423              		.global	DMA_SetCurrDataCounter
 1424              		.thumb
 1425              		.thumb_func
 1427              	DMA_SetCurrDataCounter:
 1428              	.LFB116:
 560:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /**
 561:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @}
 562:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
 563:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 564:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /** @defgroup DMA_Group2 Data Counter functions
 565:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  *  @brief   Data Counter functions 
 566:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  *
 567:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** @verbatim   
 568:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  ===============================================================================
 569:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****                            Data Counter functions
 570:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  ===============================================================================  
 571:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 572:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   This subsection provides function allowing to configure and read the buffer size
 573:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   (number of data to be transferred). 
 574:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 575:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   The DMA data counter can be written only when the DMA Stream is disabled 
 576:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   (ie. after transfer complete event).
 577:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 578:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   The following function can be used to write the Stream data counter value:
 579:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     - void DMA_SetCurrDataCounter(DMA_Stream_TypeDef* DMAy_Streamx, uint16_t Counter);
 580:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 581:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** @note It is advised to use this function rather than DMA_Init() in situations where
 582:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****       only the Data buffer needs to be reloaded.
 583:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 584:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** @note If the Source and Destination Data Sizes are different, then the value written in
 585:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****       data counter, expressing the number of transfers, is relative to the number of 
 586:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****       transfers from the Peripheral point of view.
 587:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****       ie. If Memory data size is Word, Peripheral data size is Half-Words, then the value
 588:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****       to be configured in the data counter is the number of Half-Words to be transferred
 589:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****       from/to the peripheral.
 590:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 591:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   The DMA data counter can be read to indicate the number of remaining transfers for
 592:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   the relative DMA Stream. This counter is decremented at the end of each data 
 593:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   transfer and when the transfer is complete: 
 594:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****    - If Normal mode is selected: the counter is set to 0.
 595:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****    - If Circular mode is selected: the counter is reloaded with the initial value
 596:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****      (configured before enabling the DMA Stream)
 597:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****    
 598:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   The following function can be used to read the Stream data counter value:
 599:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****      - uint16_t DMA_GetCurrDataCounter(DMA_Stream_TypeDef* DMAy_Streamx);
 600:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 601:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** @endverbatim
 602:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @{
 603:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
 604:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 605:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /**
 606:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @brief  Writes the number of data units to be transferred on the DMAy Streamx.
 607:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 608:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 609:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  Counter: Number of data units to be transferred (from 0 to 65535) 
 610:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          Number of data items depends only on the Peripheral data format.
 611:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            
 612:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @note   If Peripheral data format is Bytes: number of data units is equal 
 613:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         to total number of bytes to be transferred.
 614:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *           
 615:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @note   If Peripheral data format is Half-Word: number of data units is  
 616:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         equal to total number of bytes to be transferred / 2.
 617:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *           
 618:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @note   If Peripheral data format is Word: number of data units is equal 
 619:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         to total  number of bytes to be transferred / 4.
 620:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *      
 621:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @note   In Memory-to-Memory transfer mode, the memory buffer pointed by 
 622:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         DMAy_SxPAR register is considered as Peripheral.
 623:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *      
 624:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @retval The number of remaining data units in the current DMAy Streamx transfer.
 625:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
 626:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** void DMA_SetCurrDataCounter(DMA_Stream_TypeDef* DMAy_Streamx, uint16_t Counter)
 627:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** {
 1429              		.loc 1 627 0
 1430              		.cfi_startproc
 1431              		@ args = 0, pretend = 0, frame = 8
 1432              		@ frame_needed = 1, uses_anonymous_args = 0
 1433 0000 80B5     		push	{r7, lr}
 1434              	.LCFI18:
 1435              		.cfi_def_cfa_offset 8
 1436              		.cfi_offset 7, -8
 1437              		.cfi_offset 14, -4
 1438 0002 82B0     		sub	sp, sp, #8
 1439              	.LCFI19:
 1440              		.cfi_def_cfa_offset 16
 1441 0004 00AF     		add	r7, sp, #0
 1442              	.LCFI20:
 1443              		.cfi_def_cfa_register 7
 1444 0006 7860     		str	r0, [r7, #4]
 1445 0008 0B46     		mov	r3, r1
 1446 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 628:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check the parameters */
 629:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 1447              		.loc 1 629 0
 1448 000c 7A68     		ldr	r2, [r7, #4]
 1449 000e 46F21003 		movw	r3, #24592
 1450 0012 C4F20203 		movt	r3, 16386
 1451 0016 9A42     		cmp	r2, r3
 1452 0018 70D0     		beq	.L52
 1453              		.loc 1 629 0 is_stmt 0 discriminator 1
 1454 001a 7A68     		ldr	r2, [r7, #4]
 1455 001c 46F22803 		movw	r3, #24616
 1456 0020 C4F20203 		movt	r3, 16386
 1457 0024 9A42     		cmp	r2, r3
 1458 0026 69D0     		beq	.L52
 1459 0028 7A68     		ldr	r2, [r7, #4]
 1460 002a 46F24003 		movw	r3, #24640
 1461 002e C4F20203 		movt	r3, 16386
 1462 0032 9A42     		cmp	r2, r3
 1463 0034 62D0     		beq	.L52
 1464 0036 7A68     		ldr	r2, [r7, #4]
 1465 0038 46F25803 		movw	r3, #24664
 1466 003c C4F20203 		movt	r3, 16386
 1467 0040 9A42     		cmp	r2, r3
 1468 0042 5BD0     		beq	.L52
 1469 0044 7A68     		ldr	r2, [r7, #4]
 1470 0046 46F27003 		movw	r3, #24688
 1471 004a C4F20203 		movt	r3, 16386
 1472 004e 9A42     		cmp	r2, r3
 1473 0050 54D0     		beq	.L52
 1474 0052 7A68     		ldr	r2, [r7, #4]
 1475 0054 46F28803 		movw	r3, #24712
 1476 0058 C4F20203 		movt	r3, 16386
 1477 005c 9A42     		cmp	r2, r3
 1478 005e 4DD0     		beq	.L52
 1479 0060 7A68     		ldr	r2, [r7, #4]
 1480 0062 46F2A003 		movw	r3, #24736
 1481 0066 C4F20203 		movt	r3, 16386
 1482 006a 9A42     		cmp	r2, r3
 1483 006c 46D0     		beq	.L52
 1484 006e 7A68     		ldr	r2, [r7, #4]
 1485 0070 46F2B803 		movw	r3, #24760
 1486 0074 C4F20203 		movt	r3, 16386
 1487 0078 9A42     		cmp	r2, r3
 1488 007a 3FD0     		beq	.L52
 1489 007c 7A68     		ldr	r2, [r7, #4]
 1490 007e 46F21043 		movw	r3, #25616
 1491 0082 C4F20203 		movt	r3, 16386
 1492 0086 9A42     		cmp	r2, r3
 1493 0088 38D0     		beq	.L52
 1494 008a 7A68     		ldr	r2, [r7, #4]
 1495 008c 46F22843 		movw	r3, #25640
 1496 0090 C4F20203 		movt	r3, 16386
 1497 0094 9A42     		cmp	r2, r3
 1498 0096 31D0     		beq	.L52
 1499 0098 7A68     		ldr	r2, [r7, #4]
 1500 009a 46F24043 		movw	r3, #25664
 1501 009e C4F20203 		movt	r3, 16386
 1502 00a2 9A42     		cmp	r2, r3
 1503 00a4 2AD0     		beq	.L52
 1504 00a6 7A68     		ldr	r2, [r7, #4]
 1505 00a8 46F25843 		movw	r3, #25688
 1506 00ac C4F20203 		movt	r3, 16386
 1507 00b0 9A42     		cmp	r2, r3
 1508 00b2 23D0     		beq	.L52
 1509 00b4 7A68     		ldr	r2, [r7, #4]
 1510 00b6 46F27043 		movw	r3, #25712
 1511 00ba C4F20203 		movt	r3, 16386
 1512 00be 9A42     		cmp	r2, r3
 1513 00c0 1CD0     		beq	.L52
 1514 00c2 7A68     		ldr	r2, [r7, #4]
 1515 00c4 46F28843 		movw	r3, #25736
 1516 00c8 C4F20203 		movt	r3, 16386
 1517 00cc 9A42     		cmp	r2, r3
 1518 00ce 15D0     		beq	.L52
 1519 00d0 7A68     		ldr	r2, [r7, #4]
 1520 00d2 46F2A043 		movw	r3, #25760
 1521 00d6 C4F20203 		movt	r3, 16386
 1522 00da 9A42     		cmp	r2, r3
 1523 00dc 0ED0     		beq	.L52
 1524 00de 7A68     		ldr	r2, [r7, #4]
 1525 00e0 46F2B843 		movw	r3, #25784
 1526 00e4 C4F20203 		movt	r3, 16386
 1527 00e8 9A42     		cmp	r2, r3
 1528 00ea 07D0     		beq	.L52
 1529 00ec 40F20000 		movw	r0, #:lower16:.LC0
 1530 00f0 C0F20000 		movt	r0, #:upper16:.LC0
 1531 00f4 40F27521 		movw	r1, #629
 1532 00f8 FFF7FEFF 		bl	assert_failed
 1533              	.L52:
 630:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 631:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Write the number of data units to be transferred */
 632:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMAy_Streamx->NDTR = (uint16_t)Counter;
 1534              		.loc 1 632 0 is_stmt 1
 1535 00fc 7A88     		ldrh	r2, [r7, #2]
 1536 00fe 7B68     		ldr	r3, [r7, #4]
 1537 0100 5A60     		str	r2, [r3, #4]
 633:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** }
 1538              		.loc 1 633 0
 1539 0102 0837     		adds	r7, r7, #8
 1540 0104 BD46     		mov	sp, r7
 1541              		@ sp needed
 1542 0106 80BD     		pop	{r7, pc}
 1543              		.cfi_endproc
 1544              	.LFE116:
 1546              		.section	.text.DMA_GetCurrDataCounter,"ax",%progbits
 1547              		.align	2
 1548              		.global	DMA_GetCurrDataCounter
 1549              		.thumb
 1550              		.thumb_func
 1552              	DMA_GetCurrDataCounter:
 1553              	.LFB117:
 634:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 635:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /**
 636:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @brief  Returns the number of remaining data units in the current DMAy Streamx transfer.
 637:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 638:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 639:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @retval The number of remaining data units in the current DMAy Streamx transfer.
 640:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
 641:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** uint16_t DMA_GetCurrDataCounter(DMA_Stream_TypeDef* DMAy_Streamx)
 642:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** {
 1554              		.loc 1 642 0
 1555              		.cfi_startproc
 1556              		@ args = 0, pretend = 0, frame = 8
 1557              		@ frame_needed = 1, uses_anonymous_args = 0
 1558 0000 80B5     		push	{r7, lr}
 1559              	.LCFI21:
 1560              		.cfi_def_cfa_offset 8
 1561              		.cfi_offset 7, -8
 1562              		.cfi_offset 14, -4
 1563 0002 82B0     		sub	sp, sp, #8
 1564              	.LCFI22:
 1565              		.cfi_def_cfa_offset 16
 1566 0004 00AF     		add	r7, sp, #0
 1567              	.LCFI23:
 1568              		.cfi_def_cfa_register 7
 1569 0006 7860     		str	r0, [r7, #4]
 643:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check the parameters */
 644:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 1570              		.loc 1 644 0
 1571 0008 7A68     		ldr	r2, [r7, #4]
 1572 000a 46F21003 		movw	r3, #24592
 1573 000e C4F20203 		movt	r3, 16386
 1574 0012 9A42     		cmp	r2, r3
 1575 0014 70D0     		beq	.L54
 1576              		.loc 1 644 0 is_stmt 0 discriminator 1
 1577 0016 7A68     		ldr	r2, [r7, #4]
 1578 0018 46F22803 		movw	r3, #24616
 1579 001c C4F20203 		movt	r3, 16386
 1580 0020 9A42     		cmp	r2, r3
 1581 0022 69D0     		beq	.L54
 1582 0024 7A68     		ldr	r2, [r7, #4]
 1583 0026 46F24003 		movw	r3, #24640
 1584 002a C4F20203 		movt	r3, 16386
 1585 002e 9A42     		cmp	r2, r3
 1586 0030 62D0     		beq	.L54
 1587 0032 7A68     		ldr	r2, [r7, #4]
 1588 0034 46F25803 		movw	r3, #24664
 1589 0038 C4F20203 		movt	r3, 16386
 1590 003c 9A42     		cmp	r2, r3
 1591 003e 5BD0     		beq	.L54
 1592 0040 7A68     		ldr	r2, [r7, #4]
 1593 0042 46F27003 		movw	r3, #24688
 1594 0046 C4F20203 		movt	r3, 16386
 1595 004a 9A42     		cmp	r2, r3
 1596 004c 54D0     		beq	.L54
 1597 004e 7A68     		ldr	r2, [r7, #4]
 1598 0050 46F28803 		movw	r3, #24712
 1599 0054 C4F20203 		movt	r3, 16386
 1600 0058 9A42     		cmp	r2, r3
 1601 005a 4DD0     		beq	.L54
 1602 005c 7A68     		ldr	r2, [r7, #4]
 1603 005e 46F2A003 		movw	r3, #24736
 1604 0062 C4F20203 		movt	r3, 16386
 1605 0066 9A42     		cmp	r2, r3
 1606 0068 46D0     		beq	.L54
 1607 006a 7A68     		ldr	r2, [r7, #4]
 1608 006c 46F2B803 		movw	r3, #24760
 1609 0070 C4F20203 		movt	r3, 16386
 1610 0074 9A42     		cmp	r2, r3
 1611 0076 3FD0     		beq	.L54
 1612 0078 7A68     		ldr	r2, [r7, #4]
 1613 007a 46F21043 		movw	r3, #25616
 1614 007e C4F20203 		movt	r3, 16386
 1615 0082 9A42     		cmp	r2, r3
 1616 0084 38D0     		beq	.L54
 1617 0086 7A68     		ldr	r2, [r7, #4]
 1618 0088 46F22843 		movw	r3, #25640
 1619 008c C4F20203 		movt	r3, 16386
 1620 0090 9A42     		cmp	r2, r3
 1621 0092 31D0     		beq	.L54
 1622 0094 7A68     		ldr	r2, [r7, #4]
 1623 0096 46F24043 		movw	r3, #25664
 1624 009a C4F20203 		movt	r3, 16386
 1625 009e 9A42     		cmp	r2, r3
 1626 00a0 2AD0     		beq	.L54
 1627 00a2 7A68     		ldr	r2, [r7, #4]
 1628 00a4 46F25843 		movw	r3, #25688
 1629 00a8 C4F20203 		movt	r3, 16386
 1630 00ac 9A42     		cmp	r2, r3
 1631 00ae 23D0     		beq	.L54
 1632 00b0 7A68     		ldr	r2, [r7, #4]
 1633 00b2 46F27043 		movw	r3, #25712
 1634 00b6 C4F20203 		movt	r3, 16386
 1635 00ba 9A42     		cmp	r2, r3
 1636 00bc 1CD0     		beq	.L54
 1637 00be 7A68     		ldr	r2, [r7, #4]
 1638 00c0 46F28843 		movw	r3, #25736
 1639 00c4 C4F20203 		movt	r3, 16386
 1640 00c8 9A42     		cmp	r2, r3
 1641 00ca 15D0     		beq	.L54
 1642 00cc 7A68     		ldr	r2, [r7, #4]
 1643 00ce 46F2A043 		movw	r3, #25760
 1644 00d2 C4F20203 		movt	r3, 16386
 1645 00d6 9A42     		cmp	r2, r3
 1646 00d8 0ED0     		beq	.L54
 1647 00da 7A68     		ldr	r2, [r7, #4]
 1648 00dc 46F2B843 		movw	r3, #25784
 1649 00e0 C4F20203 		movt	r3, 16386
 1650 00e4 9A42     		cmp	r2, r3
 1651 00e6 07D0     		beq	.L54
 1652 00e8 40F20000 		movw	r0, #:lower16:.LC0
 1653 00ec C0F20000 		movt	r0, #:upper16:.LC0
 1654 00f0 4FF42171 		mov	r1, #644
 1655 00f4 FFF7FEFF 		bl	assert_failed
 1656              	.L54:
 645:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 646:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Return the number of remaining data units for DMAy Streamx */
 647:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   return ((uint16_t)(DMAy_Streamx->NDTR));
 1657              		.loc 1 647 0 is_stmt 1
 1658 00f8 7B68     		ldr	r3, [r7, #4]
 1659 00fa 5B68     		ldr	r3, [r3, #4]
 1660 00fc 9BB2     		uxth	r3, r3
 648:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** }
 1661              		.loc 1 648 0
 1662 00fe 1846     		mov	r0, r3
 1663 0100 0837     		adds	r7, r7, #8
 1664 0102 BD46     		mov	sp, r7
 1665              		@ sp needed
 1666 0104 80BD     		pop	{r7, pc}
 1667              		.cfi_endproc
 1668              	.LFE117:
 1670 0106 00BF     		.section	.text.DMA_DoubleBufferModeConfig,"ax",%progbits
 1671              		.align	2
 1672              		.global	DMA_DoubleBufferModeConfig
 1673              		.thumb
 1674              		.thumb_func
 1676              	DMA_DoubleBufferModeConfig:
 1677              	.LFB118:
 649:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /**
 650:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @}
 651:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
 652:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 653:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /** @defgroup DMA_Group3 Double Buffer mode functions
 654:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  *  @brief   Double Buffer mode functions 
 655:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  *
 656:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** @verbatim   
 657:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  ===============================================================================
 658:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****                          Double Buffer mode functions
 659:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  ===============================================================================  
 660:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 661:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   This subsection provides function allowing to configure and control the double 
 662:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   buffer mode parameters.
 663:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   
 664:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   The Double Buffer mode can be used only when Circular mode is enabled.
 665:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   The Double Buffer mode cannot be used when transferring data from Memory to Memory.
 666:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   
 667:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   The Double Buffer mode allows to set two different Memory addresses from/to which
 668:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   the DMA controller will access alternatively (after completing transfer to/from target
 669:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   memory 0, it will start transfer to/from target memory 1).
 670:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   This allows to reduce software overhead for double buffering and reduce the CPU
 671:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   access time.
 672:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 673:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   Two functions must be called before calling the DMA_Init() function:
 674:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****    - void DMA_DoubleBufferModeConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t Memory1BaseAddr,
 675:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****                                 uint32_t DMA_CurrentMemory);
 676:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****    - void DMA_DoubleBufferModeCmd(DMA_Stream_TypeDef* DMAy_Streamx, FunctionalState NewState);
 677:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****    
 678:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMA_DoubleBufferModeConfig() is called to configure the Memory 1 base address and the first
 679:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   Memory target from/to which the transfer will start after enabling the DMA Stream.
 680:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   Then DMA_DoubleBufferModeCmd() must be called to enable the Double Buffer mode (or disable 
 681:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   it when it should not be used).
 682:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   
 683:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****    
 684:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   Two functions can be called dynamically when the transfer is ongoing (or when the DMA Stream is 
 685:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   stopped) to modify on of the target Memories addresses or to check wich Memory target is currentl
 686:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****    used:
 687:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     - void DMA_MemoryTargetConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t MemoryBaseAddr,
 688:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****                             uint32_t DMA_MemoryTarget);
 689:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     - uint32_t DMA_GetCurrentMemoryTarget(DMA_Stream_TypeDef* DMAy_Streamx);
 690:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 691:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMA_MemoryTargetConfig() can be called to modify the base address of one of the two target Memori
 692:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   The Memory of which the base address will be modified must not be currently be used by the DMA St
 693:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   (ie. if the DMA Stream is currently transferring from Memory 1 then you can only modify base addr
 694:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   of target Memory 0 and vice versa).
 695:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   To check this condition, it is recommended to use the function DMA_GetCurrentMemoryTarget() which
 696:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   returns the index of the Memory target currently in use by the DMA Stream.
 697:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 698:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** @endverbatim
 699:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @{
 700:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
 701:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   
 702:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /**
 703:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @brief  Configures, when the DMAy Streamx is disabled, the double buffer mode 
 704:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         and the current memory target.
 705:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 706:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 707:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  Memory1BaseAddr: the base address of the second buffer (Memory 1)  
 708:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMA_CurrentMemory: specifies which memory will be first buffer for
 709:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         the transactions when the Stream will be enabled. 
 710:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          This parameter can be one of the following values:
 711:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_Memory_0: Memory 0 is the current buffer.
 712:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_Memory_1: Memory 1 is the current buffer.  
 713:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *       
 714:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @note   Memory0BaseAddr is set by the DMA structure configuration in DMA_Init().
 715:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *   
 716:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @retval None
 717:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
 718:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** void DMA_DoubleBufferModeConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t Memory1BaseAddr,
 719:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****                                 uint32_t DMA_CurrentMemory)
 720:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** {  
 1678              		.loc 1 720 0
 1679              		.cfi_startproc
 1680              		@ args = 0, pretend = 0, frame = 16
 1681              		@ frame_needed = 1, uses_anonymous_args = 0
 1682 0000 80B5     		push	{r7, lr}
 1683              	.LCFI24:
 1684              		.cfi_def_cfa_offset 8
 1685              		.cfi_offset 7, -8
 1686              		.cfi_offset 14, -4
 1687 0002 84B0     		sub	sp, sp, #16
 1688              	.LCFI25:
 1689              		.cfi_def_cfa_offset 24
 1690 0004 00AF     		add	r7, sp, #0
 1691              	.LCFI26:
 1692              		.cfi_def_cfa_register 7
 1693 0006 F860     		str	r0, [r7, #12]
 1694 0008 B960     		str	r1, [r7, #8]
 1695 000a 7A60     		str	r2, [r7, #4]
 721:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check the parameters */
 722:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 1696              		.loc 1 722 0
 1697 000c FA68     		ldr	r2, [r7, #12]
 1698 000e 46F21003 		movw	r3, #24592
 1699 0012 C4F20203 		movt	r3, 16386
 1700 0016 9A42     		cmp	r2, r3
 1701 0018 70D0     		beq	.L57
 1702              		.loc 1 722 0 is_stmt 0 discriminator 1
 1703 001a FA68     		ldr	r2, [r7, #12]
 1704 001c 46F22803 		movw	r3, #24616
 1705 0020 C4F20203 		movt	r3, 16386
 1706 0024 9A42     		cmp	r2, r3
 1707 0026 69D0     		beq	.L57
 1708 0028 FA68     		ldr	r2, [r7, #12]
 1709 002a 46F24003 		movw	r3, #24640
 1710 002e C4F20203 		movt	r3, 16386
 1711 0032 9A42     		cmp	r2, r3
 1712 0034 62D0     		beq	.L57
 1713 0036 FA68     		ldr	r2, [r7, #12]
 1714 0038 46F25803 		movw	r3, #24664
 1715 003c C4F20203 		movt	r3, 16386
 1716 0040 9A42     		cmp	r2, r3
 1717 0042 5BD0     		beq	.L57
 1718 0044 FA68     		ldr	r2, [r7, #12]
 1719 0046 46F27003 		movw	r3, #24688
 1720 004a C4F20203 		movt	r3, 16386
 1721 004e 9A42     		cmp	r2, r3
 1722 0050 54D0     		beq	.L57
 1723 0052 FA68     		ldr	r2, [r7, #12]
 1724 0054 46F28803 		movw	r3, #24712
 1725 0058 C4F20203 		movt	r3, 16386
 1726 005c 9A42     		cmp	r2, r3
 1727 005e 4DD0     		beq	.L57
 1728 0060 FA68     		ldr	r2, [r7, #12]
 1729 0062 46F2A003 		movw	r3, #24736
 1730 0066 C4F20203 		movt	r3, 16386
 1731 006a 9A42     		cmp	r2, r3
 1732 006c 46D0     		beq	.L57
 1733 006e FA68     		ldr	r2, [r7, #12]
 1734 0070 46F2B803 		movw	r3, #24760
 1735 0074 C4F20203 		movt	r3, 16386
 1736 0078 9A42     		cmp	r2, r3
 1737 007a 3FD0     		beq	.L57
 1738 007c FA68     		ldr	r2, [r7, #12]
 1739 007e 46F21043 		movw	r3, #25616
 1740 0082 C4F20203 		movt	r3, 16386
 1741 0086 9A42     		cmp	r2, r3
 1742 0088 38D0     		beq	.L57
 1743 008a FA68     		ldr	r2, [r7, #12]
 1744 008c 46F22843 		movw	r3, #25640
 1745 0090 C4F20203 		movt	r3, 16386
 1746 0094 9A42     		cmp	r2, r3
 1747 0096 31D0     		beq	.L57
 1748 0098 FA68     		ldr	r2, [r7, #12]
 1749 009a 46F24043 		movw	r3, #25664
 1750 009e C4F20203 		movt	r3, 16386
 1751 00a2 9A42     		cmp	r2, r3
 1752 00a4 2AD0     		beq	.L57
 1753 00a6 FA68     		ldr	r2, [r7, #12]
 1754 00a8 46F25843 		movw	r3, #25688
 1755 00ac C4F20203 		movt	r3, 16386
 1756 00b0 9A42     		cmp	r2, r3
 1757 00b2 23D0     		beq	.L57
 1758 00b4 FA68     		ldr	r2, [r7, #12]
 1759 00b6 46F27043 		movw	r3, #25712
 1760 00ba C4F20203 		movt	r3, 16386
 1761 00be 9A42     		cmp	r2, r3
 1762 00c0 1CD0     		beq	.L57
 1763 00c2 FA68     		ldr	r2, [r7, #12]
 1764 00c4 46F28843 		movw	r3, #25736
 1765 00c8 C4F20203 		movt	r3, 16386
 1766 00cc 9A42     		cmp	r2, r3
 1767 00ce 15D0     		beq	.L57
 1768 00d0 FA68     		ldr	r2, [r7, #12]
 1769 00d2 46F2A043 		movw	r3, #25760
 1770 00d6 C4F20203 		movt	r3, 16386
 1771 00da 9A42     		cmp	r2, r3
 1772 00dc 0ED0     		beq	.L57
 1773 00de FA68     		ldr	r2, [r7, #12]
 1774 00e0 46F2B843 		movw	r3, #25784
 1775 00e4 C4F20203 		movt	r3, 16386
 1776 00e8 9A42     		cmp	r2, r3
 1777 00ea 07D0     		beq	.L57
 1778 00ec 40F20000 		movw	r0, #:lower16:.LC0
 1779 00f0 C0F20000 		movt	r0, #:upper16:.LC0
 1780 00f4 40F2D221 		movw	r1, #722
 1781 00f8 FFF7FEFF 		bl	assert_failed
 1782              	.L57:
 723:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_CURRENT_MEM(DMA_CurrentMemory));
 1783              		.loc 1 723 0 is_stmt 1
 1784 00fc 7B68     		ldr	r3, [r7, #4]
 1785 00fe 002B     		cmp	r3, #0
 1786 0100 0BD0     		beq	.L58
 1787              		.loc 1 723 0 is_stmt 0 discriminator 1
 1788 0102 7B68     		ldr	r3, [r7, #4]
 1789 0104 B3F5002F 		cmp	r3, #524288
 1790 0108 07D0     		beq	.L58
 1791 010a 40F20000 		movw	r0, #:lower16:.LC0
 1792 010e C0F20000 		movt	r0, #:upper16:.LC0
 1793 0112 40F2D321 		movw	r1, #723
 1794 0116 FFF7FEFF 		bl	assert_failed
 1795              	.L58:
 724:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 725:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   if (DMA_CurrentMemory != DMA_Memory_0)
 1796              		.loc 1 725 0 is_stmt 1
 1797 011a 7B68     		ldr	r3, [r7, #4]
 1798 011c 002B     		cmp	r3, #0
 1799 011e 06D0     		beq	.L59
 726:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 727:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Set Memory 1 as current memory address */
 728:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMAy_Streamx->CR |= (uint32_t)(DMA_SxCR_CT);    
 1800              		.loc 1 728 0
 1801 0120 FB68     		ldr	r3, [r7, #12]
 1802 0122 1B68     		ldr	r3, [r3]
 1803 0124 43F40022 		orr	r2, r3, #524288
 1804 0128 FB68     		ldr	r3, [r7, #12]
 1805 012a 1A60     		str	r2, [r3]
 1806 012c 05E0     		b	.L60
 1807              	.L59:
 729:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 730:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else
 731:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 732:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Set Memory 0 as current memory address */
 733:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMAy_Streamx->CR &= ~(uint32_t)(DMA_SxCR_CT);    
 1808              		.loc 1 733 0
 1809 012e FB68     		ldr	r3, [r7, #12]
 1810 0130 1B68     		ldr	r3, [r3]
 1811 0132 23F40022 		bic	r2, r3, #524288
 1812 0136 FB68     		ldr	r3, [r7, #12]
 1813 0138 1A60     		str	r2, [r3]
 1814              	.L60:
 734:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 735:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 736:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Write to DMAy Streamx M1AR */
 737:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMAy_Streamx->M1AR = Memory1BaseAddr;
 1815              		.loc 1 737 0
 1816 013a FB68     		ldr	r3, [r7, #12]
 1817 013c BA68     		ldr	r2, [r7, #8]
 1818 013e 1A61     		str	r2, [r3, #16]
 738:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** }
 1819              		.loc 1 738 0
 1820 0140 1037     		adds	r7, r7, #16
 1821 0142 BD46     		mov	sp, r7
 1822              		@ sp needed
 1823 0144 80BD     		pop	{r7, pc}
 1824              		.cfi_endproc
 1825              	.LFE118:
 1827 0146 00BF     		.section	.text.DMA_DoubleBufferModeCmd,"ax",%progbits
 1828              		.align	2
 1829              		.global	DMA_DoubleBufferModeCmd
 1830              		.thumb
 1831              		.thumb_func
 1833              	DMA_DoubleBufferModeCmd:
 1834              	.LFB119:
 739:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 740:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /**
 741:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @brief  Enables or disables the double buffer mode for the selected DMA stream.
 742:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @note   This function can be called only when the DMA Stream is disabled.  
 743:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 744:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 745:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  NewState: new state of the DMAy Streamx double buffer mode. 
 746:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          This parameter can be: ENABLE or DISABLE.
 747:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @retval None
 748:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
 749:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** void DMA_DoubleBufferModeCmd(DMA_Stream_TypeDef* DMAy_Streamx, FunctionalState NewState)
 750:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** {  
 1835              		.loc 1 750 0
 1836              		.cfi_startproc
 1837              		@ args = 0, pretend = 0, frame = 8
 1838              		@ frame_needed = 1, uses_anonymous_args = 0
 1839 0000 80B5     		push	{r7, lr}
 1840              	.LCFI27:
 1841              		.cfi_def_cfa_offset 8
 1842              		.cfi_offset 7, -8
 1843              		.cfi_offset 14, -4
 1844 0002 82B0     		sub	sp, sp, #8
 1845              	.LCFI28:
 1846              		.cfi_def_cfa_offset 16
 1847 0004 00AF     		add	r7, sp, #0
 1848              	.LCFI29:
 1849              		.cfi_def_cfa_register 7
 1850 0006 7860     		str	r0, [r7, #4]
 1851 0008 0B46     		mov	r3, r1
 1852 000a FB70     		strb	r3, [r7, #3]
 751:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check the parameters */
 752:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 1853              		.loc 1 752 0
 1854 000c 7A68     		ldr	r2, [r7, #4]
 1855 000e 46F21003 		movw	r3, #24592
 1856 0012 C4F20203 		movt	r3, 16386
 1857 0016 9A42     		cmp	r2, r3
 1858 0018 70D0     		beq	.L62
 1859              		.loc 1 752 0 is_stmt 0 discriminator 1
 1860 001a 7A68     		ldr	r2, [r7, #4]
 1861 001c 46F22803 		movw	r3, #24616
 1862 0020 C4F20203 		movt	r3, 16386
 1863 0024 9A42     		cmp	r2, r3
 1864 0026 69D0     		beq	.L62
 1865 0028 7A68     		ldr	r2, [r7, #4]
 1866 002a 46F24003 		movw	r3, #24640
 1867 002e C4F20203 		movt	r3, 16386
 1868 0032 9A42     		cmp	r2, r3
 1869 0034 62D0     		beq	.L62
 1870 0036 7A68     		ldr	r2, [r7, #4]
 1871 0038 46F25803 		movw	r3, #24664
 1872 003c C4F20203 		movt	r3, 16386
 1873 0040 9A42     		cmp	r2, r3
 1874 0042 5BD0     		beq	.L62
 1875 0044 7A68     		ldr	r2, [r7, #4]
 1876 0046 46F27003 		movw	r3, #24688
 1877 004a C4F20203 		movt	r3, 16386
 1878 004e 9A42     		cmp	r2, r3
 1879 0050 54D0     		beq	.L62
 1880 0052 7A68     		ldr	r2, [r7, #4]
 1881 0054 46F28803 		movw	r3, #24712
 1882 0058 C4F20203 		movt	r3, 16386
 1883 005c 9A42     		cmp	r2, r3
 1884 005e 4DD0     		beq	.L62
 1885 0060 7A68     		ldr	r2, [r7, #4]
 1886 0062 46F2A003 		movw	r3, #24736
 1887 0066 C4F20203 		movt	r3, 16386
 1888 006a 9A42     		cmp	r2, r3
 1889 006c 46D0     		beq	.L62
 1890 006e 7A68     		ldr	r2, [r7, #4]
 1891 0070 46F2B803 		movw	r3, #24760
 1892 0074 C4F20203 		movt	r3, 16386
 1893 0078 9A42     		cmp	r2, r3
 1894 007a 3FD0     		beq	.L62
 1895 007c 7A68     		ldr	r2, [r7, #4]
 1896 007e 46F21043 		movw	r3, #25616
 1897 0082 C4F20203 		movt	r3, 16386
 1898 0086 9A42     		cmp	r2, r3
 1899 0088 38D0     		beq	.L62
 1900 008a 7A68     		ldr	r2, [r7, #4]
 1901 008c 46F22843 		movw	r3, #25640
 1902 0090 C4F20203 		movt	r3, 16386
 1903 0094 9A42     		cmp	r2, r3
 1904 0096 31D0     		beq	.L62
 1905 0098 7A68     		ldr	r2, [r7, #4]
 1906 009a 46F24043 		movw	r3, #25664
 1907 009e C4F20203 		movt	r3, 16386
 1908 00a2 9A42     		cmp	r2, r3
 1909 00a4 2AD0     		beq	.L62
 1910 00a6 7A68     		ldr	r2, [r7, #4]
 1911 00a8 46F25843 		movw	r3, #25688
 1912 00ac C4F20203 		movt	r3, 16386
 1913 00b0 9A42     		cmp	r2, r3
 1914 00b2 23D0     		beq	.L62
 1915 00b4 7A68     		ldr	r2, [r7, #4]
 1916 00b6 46F27043 		movw	r3, #25712
 1917 00ba C4F20203 		movt	r3, 16386
 1918 00be 9A42     		cmp	r2, r3
 1919 00c0 1CD0     		beq	.L62
 1920 00c2 7A68     		ldr	r2, [r7, #4]
 1921 00c4 46F28843 		movw	r3, #25736
 1922 00c8 C4F20203 		movt	r3, 16386
 1923 00cc 9A42     		cmp	r2, r3
 1924 00ce 15D0     		beq	.L62
 1925 00d0 7A68     		ldr	r2, [r7, #4]
 1926 00d2 46F2A043 		movw	r3, #25760
 1927 00d6 C4F20203 		movt	r3, 16386
 1928 00da 9A42     		cmp	r2, r3
 1929 00dc 0ED0     		beq	.L62
 1930 00de 7A68     		ldr	r2, [r7, #4]
 1931 00e0 46F2B843 		movw	r3, #25784
 1932 00e4 C4F20203 		movt	r3, 16386
 1933 00e8 9A42     		cmp	r2, r3
 1934 00ea 07D0     		beq	.L62
 1935 00ec 40F20000 		movw	r0, #:lower16:.LC0
 1936 00f0 C0F20000 		movt	r0, #:upper16:.LC0
 1937 00f4 4FF43C71 		mov	r1, #752
 1938 00f8 FFF7FEFF 		bl	assert_failed
 1939              	.L62:
 753:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1940              		.loc 1 753 0 is_stmt 1
 1941 00fc FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1942 00fe 002B     		cmp	r3, #0
 1943 0100 0AD0     		beq	.L63
 1944              		.loc 1 753 0 is_stmt 0 discriminator 1
 1945 0102 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1946 0104 012B     		cmp	r3, #1
 1947 0106 07D0     		beq	.L63
 1948 0108 40F20000 		movw	r0, #:lower16:.LC0
 1949 010c C0F20000 		movt	r0, #:upper16:.LC0
 1950 0110 40F2F121 		movw	r1, #753
 1951 0114 FFF7FEFF 		bl	assert_failed
 1952              	.L63:
 754:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 755:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Configure the Double Buffer mode */
 756:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   if (NewState != DISABLE)
 1953              		.loc 1 756 0 is_stmt 1
 1954 0118 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1955 011a 002B     		cmp	r3, #0
 1956 011c 06D0     		beq	.L64
 757:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 758:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Enable the Double buffer mode */
 759:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMAy_Streamx->CR |= (uint32_t)DMA_SxCR_DBM;
 1957              		.loc 1 759 0
 1958 011e 7B68     		ldr	r3, [r7, #4]
 1959 0120 1B68     		ldr	r3, [r3]
 1960 0122 43F48022 		orr	r2, r3, #262144
 1961 0126 7B68     		ldr	r3, [r7, #4]
 1962 0128 1A60     		str	r2, [r3]
 1963 012a 05E0     		b	.L61
 1964              	.L64:
 760:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 761:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else
 762:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 763:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Disable the Double buffer mode */
 764:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMAy_Streamx->CR &= ~(uint32_t)DMA_SxCR_DBM;
 1965              		.loc 1 764 0
 1966 012c 7B68     		ldr	r3, [r7, #4]
 1967 012e 1B68     		ldr	r3, [r3]
 1968 0130 23F48022 		bic	r2, r3, #262144
 1969 0134 7B68     		ldr	r3, [r7, #4]
 1970 0136 1A60     		str	r2, [r3]
 1971              	.L61:
 765:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 766:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** }
 1972              		.loc 1 766 0
 1973 0138 0837     		adds	r7, r7, #8
 1974 013a BD46     		mov	sp, r7
 1975              		@ sp needed
 1976 013c 80BD     		pop	{r7, pc}
 1977              		.cfi_endproc
 1978              	.LFE119:
 1980 013e 00BF     		.section	.text.DMA_MemoryTargetConfig,"ax",%progbits
 1981              		.align	2
 1982              		.global	DMA_MemoryTargetConfig
 1983              		.thumb
 1984              		.thumb_func
 1986              	DMA_MemoryTargetConfig:
 1987              	.LFB120:
 767:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 768:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /**
 769:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @brief  Configures the Memory address for the next buffer transfer in double
 770:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         buffer mode (for dynamic use). This function can be called when the
 771:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         DMA Stream is enabled and when the transfer is ongoing.  
 772:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 773:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 774:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  MemoryBaseAddr: The base address of the target memory buffer
 775:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMA_MemoryTarget: Next memory target to be used. 
 776:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         This parameter can be one of the following values:
 777:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_Memory_0: To use the memory address 0
 778:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_Memory_1: To use the memory address 1
 779:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * 
 780:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @note    It is not allowed to modify the Base Address of a target Memory when
 781:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          this target is involved in the current transfer. ie. If the DMA Stream
 782:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          is currently transferring to/from Memory 1, then it not possible to
 783:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          modify Base address of Memory 1, but it is possible to modify Base
 784:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          address of Memory 0.
 785:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          To know which Memory is currently used, you can use the function
 786:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          DMA_GetCurrentMemoryTarget().             
 787:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *  
 788:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @retval None
 789:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
 790:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** void DMA_MemoryTargetConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t MemoryBaseAddr,
 791:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****                            uint32_t DMA_MemoryTarget)
 792:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** {
 1988              		.loc 1 792 0
 1989              		.cfi_startproc
 1990              		@ args = 0, pretend = 0, frame = 16
 1991              		@ frame_needed = 1, uses_anonymous_args = 0
 1992 0000 80B5     		push	{r7, lr}
 1993              	.LCFI30:
 1994              		.cfi_def_cfa_offset 8
 1995              		.cfi_offset 7, -8
 1996              		.cfi_offset 14, -4
 1997 0002 84B0     		sub	sp, sp, #16
 1998              	.LCFI31:
 1999              		.cfi_def_cfa_offset 24
 2000 0004 00AF     		add	r7, sp, #0
 2001              	.LCFI32:
 2002              		.cfi_def_cfa_register 7
 2003 0006 F860     		str	r0, [r7, #12]
 2004 0008 B960     		str	r1, [r7, #8]
 2005 000a 7A60     		str	r2, [r7, #4]
 793:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check the parameters */
 794:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 2006              		.loc 1 794 0
 2007 000c FA68     		ldr	r2, [r7, #12]
 2008 000e 46F21003 		movw	r3, #24592
 2009 0012 C4F20203 		movt	r3, 16386
 2010 0016 9A42     		cmp	r2, r3
 2011 0018 70D0     		beq	.L67
 2012              		.loc 1 794 0 is_stmt 0 discriminator 1
 2013 001a FA68     		ldr	r2, [r7, #12]
 2014 001c 46F22803 		movw	r3, #24616
 2015 0020 C4F20203 		movt	r3, 16386
 2016 0024 9A42     		cmp	r2, r3
 2017 0026 69D0     		beq	.L67
 2018 0028 FA68     		ldr	r2, [r7, #12]
 2019 002a 46F24003 		movw	r3, #24640
 2020 002e C4F20203 		movt	r3, 16386
 2021 0032 9A42     		cmp	r2, r3
 2022 0034 62D0     		beq	.L67
 2023 0036 FA68     		ldr	r2, [r7, #12]
 2024 0038 46F25803 		movw	r3, #24664
 2025 003c C4F20203 		movt	r3, 16386
 2026 0040 9A42     		cmp	r2, r3
 2027 0042 5BD0     		beq	.L67
 2028 0044 FA68     		ldr	r2, [r7, #12]
 2029 0046 46F27003 		movw	r3, #24688
 2030 004a C4F20203 		movt	r3, 16386
 2031 004e 9A42     		cmp	r2, r3
 2032 0050 54D0     		beq	.L67
 2033 0052 FA68     		ldr	r2, [r7, #12]
 2034 0054 46F28803 		movw	r3, #24712
 2035 0058 C4F20203 		movt	r3, 16386
 2036 005c 9A42     		cmp	r2, r3
 2037 005e 4DD0     		beq	.L67
 2038 0060 FA68     		ldr	r2, [r7, #12]
 2039 0062 46F2A003 		movw	r3, #24736
 2040 0066 C4F20203 		movt	r3, 16386
 2041 006a 9A42     		cmp	r2, r3
 2042 006c 46D0     		beq	.L67
 2043 006e FA68     		ldr	r2, [r7, #12]
 2044 0070 46F2B803 		movw	r3, #24760
 2045 0074 C4F20203 		movt	r3, 16386
 2046 0078 9A42     		cmp	r2, r3
 2047 007a 3FD0     		beq	.L67
 2048 007c FA68     		ldr	r2, [r7, #12]
 2049 007e 46F21043 		movw	r3, #25616
 2050 0082 C4F20203 		movt	r3, 16386
 2051 0086 9A42     		cmp	r2, r3
 2052 0088 38D0     		beq	.L67
 2053 008a FA68     		ldr	r2, [r7, #12]
 2054 008c 46F22843 		movw	r3, #25640
 2055 0090 C4F20203 		movt	r3, 16386
 2056 0094 9A42     		cmp	r2, r3
 2057 0096 31D0     		beq	.L67
 2058 0098 FA68     		ldr	r2, [r7, #12]
 2059 009a 46F24043 		movw	r3, #25664
 2060 009e C4F20203 		movt	r3, 16386
 2061 00a2 9A42     		cmp	r2, r3
 2062 00a4 2AD0     		beq	.L67
 2063 00a6 FA68     		ldr	r2, [r7, #12]
 2064 00a8 46F25843 		movw	r3, #25688
 2065 00ac C4F20203 		movt	r3, 16386
 2066 00b0 9A42     		cmp	r2, r3
 2067 00b2 23D0     		beq	.L67
 2068 00b4 FA68     		ldr	r2, [r7, #12]
 2069 00b6 46F27043 		movw	r3, #25712
 2070 00ba C4F20203 		movt	r3, 16386
 2071 00be 9A42     		cmp	r2, r3
 2072 00c0 1CD0     		beq	.L67
 2073 00c2 FA68     		ldr	r2, [r7, #12]
 2074 00c4 46F28843 		movw	r3, #25736
 2075 00c8 C4F20203 		movt	r3, 16386
 2076 00cc 9A42     		cmp	r2, r3
 2077 00ce 15D0     		beq	.L67
 2078 00d0 FA68     		ldr	r2, [r7, #12]
 2079 00d2 46F2A043 		movw	r3, #25760
 2080 00d6 C4F20203 		movt	r3, 16386
 2081 00da 9A42     		cmp	r2, r3
 2082 00dc 0ED0     		beq	.L67
 2083 00de FA68     		ldr	r2, [r7, #12]
 2084 00e0 46F2B843 		movw	r3, #25784
 2085 00e4 C4F20203 		movt	r3, 16386
 2086 00e8 9A42     		cmp	r2, r3
 2087 00ea 07D0     		beq	.L67
 2088 00ec 40F20000 		movw	r0, #:lower16:.LC0
 2089 00f0 C0F20000 		movt	r0, #:upper16:.LC0
 2090 00f4 40F21A31 		movw	r1, #794
 2091 00f8 FFF7FEFF 		bl	assert_failed
 2092              	.L67:
 795:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_CURRENT_MEM(DMA_MemoryTarget));
 2093              		.loc 1 795 0 is_stmt 1
 2094 00fc 7B68     		ldr	r3, [r7, #4]
 2095 00fe 002B     		cmp	r3, #0
 2096 0100 0BD0     		beq	.L68
 2097              		.loc 1 795 0 is_stmt 0 discriminator 1
 2098 0102 7B68     		ldr	r3, [r7, #4]
 2099 0104 B3F5002F 		cmp	r3, #524288
 2100 0108 07D0     		beq	.L68
 2101 010a 40F20000 		movw	r0, #:lower16:.LC0
 2102 010e C0F20000 		movt	r0, #:upper16:.LC0
 2103 0112 40F21B31 		movw	r1, #795
 2104 0116 FFF7FEFF 		bl	assert_failed
 2105              	.L68:
 796:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     
 797:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check the Memory target to be configured */
 798:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   if (DMA_MemoryTarget != DMA_Memory_0)
 2106              		.loc 1 798 0 is_stmt 1
 2107 011a 7B68     		ldr	r3, [r7, #4]
 2108 011c 002B     		cmp	r3, #0
 2109 011e 03D0     		beq	.L69
 799:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 800:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Write to DMAy Streamx M1AR */
 801:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMAy_Streamx->M1AR = MemoryBaseAddr;    
 2110              		.loc 1 801 0
 2111 0120 FB68     		ldr	r3, [r7, #12]
 2112 0122 BA68     		ldr	r2, [r7, #8]
 2113 0124 1A61     		str	r2, [r3, #16]
 2114 0126 02E0     		b	.L66
 2115              	.L69:
 802:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }  
 803:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else
 804:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 805:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Write to DMAy Streamx M0AR */
 806:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMAy_Streamx->M0AR = MemoryBaseAddr;  
 2116              		.loc 1 806 0
 2117 0128 FB68     		ldr	r3, [r7, #12]
 2118 012a BA68     		ldr	r2, [r7, #8]
 2119 012c DA60     		str	r2, [r3, #12]
 2120              	.L66:
 807:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 808:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** }
 2121              		.loc 1 808 0
 2122 012e 1037     		adds	r7, r7, #16
 2123 0130 BD46     		mov	sp, r7
 2124              		@ sp needed
 2125 0132 80BD     		pop	{r7, pc}
 2126              		.cfi_endproc
 2127              	.LFE120:
 2129              		.section	.text.DMA_GetCurrentMemoryTarget,"ax",%progbits
 2130              		.align	2
 2131              		.global	DMA_GetCurrentMemoryTarget
 2132              		.thumb
 2133              		.thumb_func
 2135              	DMA_GetCurrentMemoryTarget:
 2136              	.LFB121:
 809:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 810:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /**
 811:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @brief  Returns the current memory target used by double buffer transfer.
 812:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 813:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 814:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @retval The memory target number: 0 for Memory0 or 1 for Memory1. 
 815:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
 816:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** uint32_t DMA_GetCurrentMemoryTarget(DMA_Stream_TypeDef* DMAy_Streamx)
 817:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** {
 2137              		.loc 1 817 0
 2138              		.cfi_startproc
 2139              		@ args = 0, pretend = 0, frame = 16
 2140              		@ frame_needed = 1, uses_anonymous_args = 0
 2141 0000 80B5     		push	{r7, lr}
 2142              	.LCFI33:
 2143              		.cfi_def_cfa_offset 8
 2144              		.cfi_offset 7, -8
 2145              		.cfi_offset 14, -4
 2146 0002 84B0     		sub	sp, sp, #16
 2147              	.LCFI34:
 2148              		.cfi_def_cfa_offset 24
 2149 0004 00AF     		add	r7, sp, #0
 2150              	.LCFI35:
 2151              		.cfi_def_cfa_register 7
 2152 0006 7860     		str	r0, [r7, #4]
 818:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   uint32_t tmp = 0;
 2153              		.loc 1 818 0
 2154 0008 0023     		movs	r3, #0
 2155 000a FB60     		str	r3, [r7, #12]
 819:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   
 820:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check the parameters */
 821:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 2156              		.loc 1 821 0
 2157 000c 7A68     		ldr	r2, [r7, #4]
 2158 000e 46F21003 		movw	r3, #24592
 2159 0012 C4F20203 		movt	r3, 16386
 2160 0016 9A42     		cmp	r2, r3
 2161 0018 70D0     		beq	.L72
 2162              		.loc 1 821 0 is_stmt 0 discriminator 1
 2163 001a 7A68     		ldr	r2, [r7, #4]
 2164 001c 46F22803 		movw	r3, #24616
 2165 0020 C4F20203 		movt	r3, 16386
 2166 0024 9A42     		cmp	r2, r3
 2167 0026 69D0     		beq	.L72
 2168 0028 7A68     		ldr	r2, [r7, #4]
 2169 002a 46F24003 		movw	r3, #24640
 2170 002e C4F20203 		movt	r3, 16386
 2171 0032 9A42     		cmp	r2, r3
 2172 0034 62D0     		beq	.L72
 2173 0036 7A68     		ldr	r2, [r7, #4]
 2174 0038 46F25803 		movw	r3, #24664
 2175 003c C4F20203 		movt	r3, 16386
 2176 0040 9A42     		cmp	r2, r3
 2177 0042 5BD0     		beq	.L72
 2178 0044 7A68     		ldr	r2, [r7, #4]
 2179 0046 46F27003 		movw	r3, #24688
 2180 004a C4F20203 		movt	r3, 16386
 2181 004e 9A42     		cmp	r2, r3
 2182 0050 54D0     		beq	.L72
 2183 0052 7A68     		ldr	r2, [r7, #4]
 2184 0054 46F28803 		movw	r3, #24712
 2185 0058 C4F20203 		movt	r3, 16386
 2186 005c 9A42     		cmp	r2, r3
 2187 005e 4DD0     		beq	.L72
 2188 0060 7A68     		ldr	r2, [r7, #4]
 2189 0062 46F2A003 		movw	r3, #24736
 2190 0066 C4F20203 		movt	r3, 16386
 2191 006a 9A42     		cmp	r2, r3
 2192 006c 46D0     		beq	.L72
 2193 006e 7A68     		ldr	r2, [r7, #4]
 2194 0070 46F2B803 		movw	r3, #24760
 2195 0074 C4F20203 		movt	r3, 16386
 2196 0078 9A42     		cmp	r2, r3
 2197 007a 3FD0     		beq	.L72
 2198 007c 7A68     		ldr	r2, [r7, #4]
 2199 007e 46F21043 		movw	r3, #25616
 2200 0082 C4F20203 		movt	r3, 16386
 2201 0086 9A42     		cmp	r2, r3
 2202 0088 38D0     		beq	.L72
 2203 008a 7A68     		ldr	r2, [r7, #4]
 2204 008c 46F22843 		movw	r3, #25640
 2205 0090 C4F20203 		movt	r3, 16386
 2206 0094 9A42     		cmp	r2, r3
 2207 0096 31D0     		beq	.L72
 2208 0098 7A68     		ldr	r2, [r7, #4]
 2209 009a 46F24043 		movw	r3, #25664
 2210 009e C4F20203 		movt	r3, 16386
 2211 00a2 9A42     		cmp	r2, r3
 2212 00a4 2AD0     		beq	.L72
 2213 00a6 7A68     		ldr	r2, [r7, #4]
 2214 00a8 46F25843 		movw	r3, #25688
 2215 00ac C4F20203 		movt	r3, 16386
 2216 00b0 9A42     		cmp	r2, r3
 2217 00b2 23D0     		beq	.L72
 2218 00b4 7A68     		ldr	r2, [r7, #4]
 2219 00b6 46F27043 		movw	r3, #25712
 2220 00ba C4F20203 		movt	r3, 16386
 2221 00be 9A42     		cmp	r2, r3
 2222 00c0 1CD0     		beq	.L72
 2223 00c2 7A68     		ldr	r2, [r7, #4]
 2224 00c4 46F28843 		movw	r3, #25736
 2225 00c8 C4F20203 		movt	r3, 16386
 2226 00cc 9A42     		cmp	r2, r3
 2227 00ce 15D0     		beq	.L72
 2228 00d0 7A68     		ldr	r2, [r7, #4]
 2229 00d2 46F2A043 		movw	r3, #25760
 2230 00d6 C4F20203 		movt	r3, 16386
 2231 00da 9A42     		cmp	r2, r3
 2232 00dc 0ED0     		beq	.L72
 2233 00de 7A68     		ldr	r2, [r7, #4]
 2234 00e0 46F2B843 		movw	r3, #25784
 2235 00e4 C4F20203 		movt	r3, 16386
 2236 00e8 9A42     		cmp	r2, r3
 2237 00ea 07D0     		beq	.L72
 2238 00ec 40F20000 		movw	r0, #:lower16:.LC0
 2239 00f0 C0F20000 		movt	r0, #:upper16:.LC0
 2240 00f4 40F23531 		movw	r1, #821
 2241 00f8 FFF7FEFF 		bl	assert_failed
 2242              	.L72:
 822:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 823:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Get the current memory target */
 824:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   if ((DMAy_Streamx->CR & DMA_SxCR_CT) != 0)
 2243              		.loc 1 824 0 is_stmt 1
 2244 00fc 7B68     		ldr	r3, [r7, #4]
 2245 00fe 1B68     		ldr	r3, [r3]
 2246 0100 03F40023 		and	r3, r3, #524288
 2247 0104 002B     		cmp	r3, #0
 2248 0106 02D0     		beq	.L73
 825:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 826:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Current memory buffer used is Memory 1 */
 827:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     tmp = 1;
 2249              		.loc 1 827 0
 2250 0108 0123     		movs	r3, #1
 2251 010a FB60     		str	r3, [r7, #12]
 2252 010c 01E0     		b	.L74
 2253              	.L73:
 828:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }  
 829:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else
 830:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 831:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Current memory buffer used is Memory 0 */
 832:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     tmp = 0;    
 2254              		.loc 1 832 0
 2255 010e 0023     		movs	r3, #0
 2256 0110 FB60     		str	r3, [r7, #12]
 2257              	.L74:
 833:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 834:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   return tmp;
 2258              		.loc 1 834 0
 2259 0112 FB68     		ldr	r3, [r7, #12]
 835:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** }
 2260              		.loc 1 835 0
 2261 0114 1846     		mov	r0, r3
 2262 0116 1037     		adds	r7, r7, #16
 2263 0118 BD46     		mov	sp, r7
 2264              		@ sp needed
 2265 011a 80BD     		pop	{r7, pc}
 2266              		.cfi_endproc
 2267              	.LFE121:
 2269              		.section	.text.DMA_GetCmdStatus,"ax",%progbits
 2270              		.align	2
 2271              		.global	DMA_GetCmdStatus
 2272              		.thumb
 2273              		.thumb_func
 2275              	DMA_GetCmdStatus:
 2276              	.LFB122:
 836:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /**
 837:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @}
 838:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
 839:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 840:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /** @defgroup DMA_Group4 Interrupts and flags management functions
 841:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  *  @brief   Interrupts and flags management functions 
 842:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  *
 843:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** @verbatim   
 844:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  ===============================================================================
 845:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****                   Interrupts and flags management functions
 846:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  ===============================================================================  
 847:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 848:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   This subsection provides functions allowing to
 849:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****    - Check the DMA enable status
 850:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****    - Check the FIFO status 
 851:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****    - Configure the DMA Interrupts sources and check or clear the flags or pending bits status.   
 852:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****    
 853:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  1. DMA Enable status:
 854:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****    After configuring the DMA Stream (DMA_Init() function) and enabling the stream,
 855:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****    it is recommended to check (or wait until) the DMA Stream is effectively enabled.
 856:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****    A Stream may remain disabled if a configuration parameter is wrong.
 857:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****    After disabling a DMA Stream, it is also recommended to check (or wait until) the DMA
 858:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****    Stream is effectively disabled. If a Stream is disabled while a data transfer is ongoing, 
 859:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****    the current data will be transferred and the Stream will be effectively disabled only after
 860:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****    this data transfer completion.
 861:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****    To monitor this state it is possible to use the following function:
 862:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****      - FunctionalState DMA_GetCmdStatus(DMA_Stream_TypeDef* DMAy_Streamx); 
 863:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  
 864:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  2. FIFO Status:
 865:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****    It is possible to monitor the FIFO status when a transfer is ongoing using the following 
 866:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****    function:
 867:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****      - uint32_t DMA_GetFIFOStatus(DMA_Stream_TypeDef* DMAy_Streamx); 
 868:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  
 869:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  3. DMA Interrupts and Flags:
 870:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   The user should identify which mode will be used in his application to manage the
 871:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMA controller events: Polling mode or Interrupt mode. 
 872:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     
 873:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   Polling Mode
 874:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   =============
 875:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     Each DMA stream can be managed through 4 event Flags:
 876:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     (x : DMA Stream number )
 877:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****        1. DMA_FLAG_FEIFx  : to indicate that a FIFO Mode Transfer Error event occurred.
 878:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****        2. DMA_FLAG_DMEIFx : to indicate that a Direct Mode Transfer Error event occurred.
 879:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****        3. DMA_FLAG_TEIFx  : to indicate that a Transfer Error event occurred.
 880:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****        4. DMA_FLAG_HTIFx  : to indicate that a Half-Transfer Complete event occurred.
 881:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****        5. DMA_FLAG_TCIFx  : to indicate that a Transfer Complete event occurred .       
 882:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 883:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****    In this Mode it is advised to use the following functions:
 884:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****       - FlagStatus DMA_GetFlagStatus(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_FLAG);
 885:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****       - void DMA_ClearFlag(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_FLAG);
 886:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 887:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   Interrupt Mode
 888:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   ===============
 889:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     Each DMA Stream can be managed through 4 Interrupts:
 890:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 891:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     Interrupt Source
 892:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     ----------------
 893:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****        1. DMA_IT_FEIFx  : specifies the interrupt source for the  FIFO Mode Transfer Error event.
 894:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****        2. DMA_IT_DMEIFx : specifies the interrupt source for the Direct Mode Transfer Error event.
 895:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****        3. DMA_IT_TEIFx  : specifies the interrupt source for the Transfer Error event.
 896:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****        4. DMA_IT_HTIFx  : specifies the interrupt source for the Half-Transfer Complete event.
 897:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****        5. DMA_IT_TCIFx  : specifies the interrupt source for the a Transfer Complete event. 
 898:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****      
 899:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   In this Mode it is advised to use the following functions:
 900:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****      - void DMA_ITConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_IT, FunctionalState NewStat
 901:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****      - ITStatus DMA_GetITStatus(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_IT);
 902:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****      - void DMA_ClearITPendingBit(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_IT);
 903:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 904:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** @endverbatim
 905:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @{
 906:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
 907:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 908:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /**
 909:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @brief  Returns the status of EN bit for the specified DMAy Streamx.
 910:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 911:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 912:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *   
 913:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @note    After configuring the DMA Stream (DMA_Init() function) and enabling
 914:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          the stream, it is recommended to check (or wait until) the DMA Stream
 915:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          is effectively enabled. A Stream may remain disabled if a configuration
 916:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          parameter is wrong.
 917:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          After disabling a DMA Stream, it is also recommended to check (or wait 
 918:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          until) the DMA Stream is effectively disabled. If a Stream is disabled
 919:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          while a data transfer is ongoing, the current data will be transferred
 920:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          and the Stream will be effectively disabled only after the transfer
 921:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          of this single data is finished.  
 922:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *      
 923:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @retval Current state of the DMAy Streamx (ENABLE or DISABLE).
 924:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
 925:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** FunctionalState DMA_GetCmdStatus(DMA_Stream_TypeDef* DMAy_Streamx)
 926:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** {
 2277              		.loc 1 926 0
 2278              		.cfi_startproc
 2279              		@ args = 0, pretend = 0, frame = 16
 2280              		@ frame_needed = 1, uses_anonymous_args = 0
 2281 0000 80B5     		push	{r7, lr}
 2282              	.LCFI36:
 2283              		.cfi_def_cfa_offset 8
 2284              		.cfi_offset 7, -8
 2285              		.cfi_offset 14, -4
 2286 0002 84B0     		sub	sp, sp, #16
 2287              	.LCFI37:
 2288              		.cfi_def_cfa_offset 24
 2289 0004 00AF     		add	r7, sp, #0
 2290              	.LCFI38:
 2291              		.cfi_def_cfa_register 7
 2292 0006 7860     		str	r0, [r7, #4]
 927:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   FunctionalState state = DISABLE;
 2293              		.loc 1 927 0
 2294 0008 0023     		movs	r3, #0
 2295 000a FB73     		strb	r3, [r7, #15]
 928:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 929:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check the parameters */
 930:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 2296              		.loc 1 930 0
 2297 000c 7A68     		ldr	r2, [r7, #4]
 2298 000e 46F21003 		movw	r3, #24592
 2299 0012 C4F20203 		movt	r3, 16386
 2300 0016 9A42     		cmp	r2, r3
 2301 0018 70D0     		beq	.L77
 2302              		.loc 1 930 0 is_stmt 0 discriminator 1
 2303 001a 7A68     		ldr	r2, [r7, #4]
 2304 001c 46F22803 		movw	r3, #24616
 2305 0020 C4F20203 		movt	r3, 16386
 2306 0024 9A42     		cmp	r2, r3
 2307 0026 69D0     		beq	.L77
 2308 0028 7A68     		ldr	r2, [r7, #4]
 2309 002a 46F24003 		movw	r3, #24640
 2310 002e C4F20203 		movt	r3, 16386
 2311 0032 9A42     		cmp	r2, r3
 2312 0034 62D0     		beq	.L77
 2313 0036 7A68     		ldr	r2, [r7, #4]
 2314 0038 46F25803 		movw	r3, #24664
 2315 003c C4F20203 		movt	r3, 16386
 2316 0040 9A42     		cmp	r2, r3
 2317 0042 5BD0     		beq	.L77
 2318 0044 7A68     		ldr	r2, [r7, #4]
 2319 0046 46F27003 		movw	r3, #24688
 2320 004a C4F20203 		movt	r3, 16386
 2321 004e 9A42     		cmp	r2, r3
 2322 0050 54D0     		beq	.L77
 2323 0052 7A68     		ldr	r2, [r7, #4]
 2324 0054 46F28803 		movw	r3, #24712
 2325 0058 C4F20203 		movt	r3, 16386
 2326 005c 9A42     		cmp	r2, r3
 2327 005e 4DD0     		beq	.L77
 2328 0060 7A68     		ldr	r2, [r7, #4]
 2329 0062 46F2A003 		movw	r3, #24736
 2330 0066 C4F20203 		movt	r3, 16386
 2331 006a 9A42     		cmp	r2, r3
 2332 006c 46D0     		beq	.L77
 2333 006e 7A68     		ldr	r2, [r7, #4]
 2334 0070 46F2B803 		movw	r3, #24760
 2335 0074 C4F20203 		movt	r3, 16386
 2336 0078 9A42     		cmp	r2, r3
 2337 007a 3FD0     		beq	.L77
 2338 007c 7A68     		ldr	r2, [r7, #4]
 2339 007e 46F21043 		movw	r3, #25616
 2340 0082 C4F20203 		movt	r3, 16386
 2341 0086 9A42     		cmp	r2, r3
 2342 0088 38D0     		beq	.L77
 2343 008a 7A68     		ldr	r2, [r7, #4]
 2344 008c 46F22843 		movw	r3, #25640
 2345 0090 C4F20203 		movt	r3, 16386
 2346 0094 9A42     		cmp	r2, r3
 2347 0096 31D0     		beq	.L77
 2348 0098 7A68     		ldr	r2, [r7, #4]
 2349 009a 46F24043 		movw	r3, #25664
 2350 009e C4F20203 		movt	r3, 16386
 2351 00a2 9A42     		cmp	r2, r3
 2352 00a4 2AD0     		beq	.L77
 2353 00a6 7A68     		ldr	r2, [r7, #4]
 2354 00a8 46F25843 		movw	r3, #25688
 2355 00ac C4F20203 		movt	r3, 16386
 2356 00b0 9A42     		cmp	r2, r3
 2357 00b2 23D0     		beq	.L77
 2358 00b4 7A68     		ldr	r2, [r7, #4]
 2359 00b6 46F27043 		movw	r3, #25712
 2360 00ba C4F20203 		movt	r3, 16386
 2361 00be 9A42     		cmp	r2, r3
 2362 00c0 1CD0     		beq	.L77
 2363 00c2 7A68     		ldr	r2, [r7, #4]
 2364 00c4 46F28843 		movw	r3, #25736
 2365 00c8 C4F20203 		movt	r3, 16386
 2366 00cc 9A42     		cmp	r2, r3
 2367 00ce 15D0     		beq	.L77
 2368 00d0 7A68     		ldr	r2, [r7, #4]
 2369 00d2 46F2A043 		movw	r3, #25760
 2370 00d6 C4F20203 		movt	r3, 16386
 2371 00da 9A42     		cmp	r2, r3
 2372 00dc 0ED0     		beq	.L77
 2373 00de 7A68     		ldr	r2, [r7, #4]
 2374 00e0 46F2B843 		movw	r3, #25784
 2375 00e4 C4F20203 		movt	r3, 16386
 2376 00e8 9A42     		cmp	r2, r3
 2377 00ea 07D0     		beq	.L77
 2378 00ec 40F20000 		movw	r0, #:lower16:.LC0
 2379 00f0 C0F20000 		movt	r0, #:upper16:.LC0
 2380 00f4 40F2A231 		movw	r1, #930
 2381 00f8 FFF7FEFF 		bl	assert_failed
 2382              	.L77:
 931:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 932:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   if ((DMAy_Streamx->CR & (uint32_t)DMA_SxCR_EN) != 0)
 2383              		.loc 1 932 0 is_stmt 1
 2384 00fc 7B68     		ldr	r3, [r7, #4]
 2385 00fe 1B68     		ldr	r3, [r3]
 2386 0100 03F00103 		and	r3, r3, #1
 2387 0104 002B     		cmp	r3, #0
 2388 0106 02D0     		beq	.L78
 933:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 934:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* The selected DMAy Streamx EN bit is set (DMA is still transferring) */
 935:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     state = ENABLE;
 2389              		.loc 1 935 0
 2390 0108 0123     		movs	r3, #1
 2391 010a FB73     		strb	r3, [r7, #15]
 2392 010c 01E0     		b	.L79
 2393              	.L78:
 936:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 937:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else
 938:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 939:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* The selected DMAy Streamx EN bit is cleared (DMA is disabled and 
 940:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****         all transfers are complete) */
 941:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     state = DISABLE;
 2394              		.loc 1 941 0
 2395 010e 0023     		movs	r3, #0
 2396 0110 FB73     		strb	r3, [r7, #15]
 2397              	.L79:
 942:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
 943:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   return state;
 2398              		.loc 1 943 0
 2399 0112 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 944:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** }
 2400              		.loc 1 944 0
 2401 0114 1846     		mov	r0, r3
 2402 0116 1037     		adds	r7, r7, #16
 2403 0118 BD46     		mov	sp, r7
 2404              		@ sp needed
 2405 011a 80BD     		pop	{r7, pc}
 2406              		.cfi_endproc
 2407              	.LFE122:
 2409              		.section	.text.DMA_GetFIFOStatus,"ax",%progbits
 2410              		.align	2
 2411              		.global	DMA_GetFIFOStatus
 2412              		.thumb
 2413              		.thumb_func
 2415              	DMA_GetFIFOStatus:
 2416              	.LFB123:
 945:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 946:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /**
 947:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @brief  Returns the current DMAy Streamx FIFO filled level.
 948:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0 
 949:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         to 7 to select the DMA Stream.
 950:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @retval The FIFO filling state.
 951:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *           - DMA_FIFOStatus_Less1QuarterFull: when FIFO is less than 1 quarter-full 
 952:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *                                               and not empty.
 953:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *           - DMA_FIFOStatus_1QuarterFull: if more than 1 quarter-full.
 954:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *           - DMA_FIFOStatus_HalfFull: if more than 1 half-full.
 955:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *           - DMA_FIFOStatus_3QuartersFull: if more than 3 quarters-full.
 956:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *           - DMA_FIFOStatus_Empty: when FIFO is empty
 957:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *           - DMA_FIFOStatus_Full: when FIFO is full
 958:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
 959:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** uint32_t DMA_GetFIFOStatus(DMA_Stream_TypeDef* DMAy_Streamx)
 960:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** {
 2417              		.loc 1 960 0
 2418              		.cfi_startproc
 2419              		@ args = 0, pretend = 0, frame = 16
 2420              		@ frame_needed = 1, uses_anonymous_args = 0
 2421 0000 80B5     		push	{r7, lr}
 2422              	.LCFI39:
 2423              		.cfi_def_cfa_offset 8
 2424              		.cfi_offset 7, -8
 2425              		.cfi_offset 14, -4
 2426 0002 84B0     		sub	sp, sp, #16
 2427              	.LCFI40:
 2428              		.cfi_def_cfa_offset 24
 2429 0004 00AF     		add	r7, sp, #0
 2430              	.LCFI41:
 2431              		.cfi_def_cfa_register 7
 2432 0006 7860     		str	r0, [r7, #4]
 961:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   uint32_t tmpreg = 0;
 2433              		.loc 1 961 0
 2434 0008 0023     		movs	r3, #0
 2435 000a FB60     		str	r3, [r7, #12]
 962:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  
 963:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check the parameters */
 964:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 2436              		.loc 1 964 0
 2437 000c 7A68     		ldr	r2, [r7, #4]
 2438 000e 46F21003 		movw	r3, #24592
 2439 0012 C4F20203 		movt	r3, 16386
 2440 0016 9A42     		cmp	r2, r3
 2441 0018 70D0     		beq	.L82
 2442              		.loc 1 964 0 is_stmt 0 discriminator 1
 2443 001a 7A68     		ldr	r2, [r7, #4]
 2444 001c 46F22803 		movw	r3, #24616
 2445 0020 C4F20203 		movt	r3, 16386
 2446 0024 9A42     		cmp	r2, r3
 2447 0026 69D0     		beq	.L82
 2448 0028 7A68     		ldr	r2, [r7, #4]
 2449 002a 46F24003 		movw	r3, #24640
 2450 002e C4F20203 		movt	r3, 16386
 2451 0032 9A42     		cmp	r2, r3
 2452 0034 62D0     		beq	.L82
 2453 0036 7A68     		ldr	r2, [r7, #4]
 2454 0038 46F25803 		movw	r3, #24664
 2455 003c C4F20203 		movt	r3, 16386
 2456 0040 9A42     		cmp	r2, r3
 2457 0042 5BD0     		beq	.L82
 2458 0044 7A68     		ldr	r2, [r7, #4]
 2459 0046 46F27003 		movw	r3, #24688
 2460 004a C4F20203 		movt	r3, 16386
 2461 004e 9A42     		cmp	r2, r3
 2462 0050 54D0     		beq	.L82
 2463 0052 7A68     		ldr	r2, [r7, #4]
 2464 0054 46F28803 		movw	r3, #24712
 2465 0058 C4F20203 		movt	r3, 16386
 2466 005c 9A42     		cmp	r2, r3
 2467 005e 4DD0     		beq	.L82
 2468 0060 7A68     		ldr	r2, [r7, #4]
 2469 0062 46F2A003 		movw	r3, #24736
 2470 0066 C4F20203 		movt	r3, 16386
 2471 006a 9A42     		cmp	r2, r3
 2472 006c 46D0     		beq	.L82
 2473 006e 7A68     		ldr	r2, [r7, #4]
 2474 0070 46F2B803 		movw	r3, #24760
 2475 0074 C4F20203 		movt	r3, 16386
 2476 0078 9A42     		cmp	r2, r3
 2477 007a 3FD0     		beq	.L82
 2478 007c 7A68     		ldr	r2, [r7, #4]
 2479 007e 46F21043 		movw	r3, #25616
 2480 0082 C4F20203 		movt	r3, 16386
 2481 0086 9A42     		cmp	r2, r3
 2482 0088 38D0     		beq	.L82
 2483 008a 7A68     		ldr	r2, [r7, #4]
 2484 008c 46F22843 		movw	r3, #25640
 2485 0090 C4F20203 		movt	r3, 16386
 2486 0094 9A42     		cmp	r2, r3
 2487 0096 31D0     		beq	.L82
 2488 0098 7A68     		ldr	r2, [r7, #4]
 2489 009a 46F24043 		movw	r3, #25664
 2490 009e C4F20203 		movt	r3, 16386
 2491 00a2 9A42     		cmp	r2, r3
 2492 00a4 2AD0     		beq	.L82
 2493 00a6 7A68     		ldr	r2, [r7, #4]
 2494 00a8 46F25843 		movw	r3, #25688
 2495 00ac C4F20203 		movt	r3, 16386
 2496 00b0 9A42     		cmp	r2, r3
 2497 00b2 23D0     		beq	.L82
 2498 00b4 7A68     		ldr	r2, [r7, #4]
 2499 00b6 46F27043 		movw	r3, #25712
 2500 00ba C4F20203 		movt	r3, 16386
 2501 00be 9A42     		cmp	r2, r3
 2502 00c0 1CD0     		beq	.L82
 2503 00c2 7A68     		ldr	r2, [r7, #4]
 2504 00c4 46F28843 		movw	r3, #25736
 2505 00c8 C4F20203 		movt	r3, 16386
 2506 00cc 9A42     		cmp	r2, r3
 2507 00ce 15D0     		beq	.L82
 2508 00d0 7A68     		ldr	r2, [r7, #4]
 2509 00d2 46F2A043 		movw	r3, #25760
 2510 00d6 C4F20203 		movt	r3, 16386
 2511 00da 9A42     		cmp	r2, r3
 2512 00dc 0ED0     		beq	.L82
 2513 00de 7A68     		ldr	r2, [r7, #4]
 2514 00e0 46F2B843 		movw	r3, #25784
 2515 00e4 C4F20203 		movt	r3, 16386
 2516 00e8 9A42     		cmp	r2, r3
 2517 00ea 07D0     		beq	.L82
 2518 00ec 40F20000 		movw	r0, #:lower16:.LC0
 2519 00f0 C0F20000 		movt	r0, #:upper16:.LC0
 2520 00f4 4FF47171 		mov	r1, #964
 2521 00f8 FFF7FEFF 		bl	assert_failed
 2522              	.L82:
 965:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   
 966:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Get the FIFO level bits */
 967:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   tmpreg = (uint32_t)((DMAy_Streamx->FCR & DMA_SxFCR_FS));
 2523              		.loc 1 967 0 is_stmt 1
 2524 00fc 7B68     		ldr	r3, [r7, #4]
 2525 00fe 5B69     		ldr	r3, [r3, #20]
 2526 0100 03F03803 		and	r3, r3, #56
 2527 0104 FB60     		str	r3, [r7, #12]
 968:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   
 969:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   return tmpreg;
 2528              		.loc 1 969 0
 2529 0106 FB68     		ldr	r3, [r7, #12]
 970:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** }
 2530              		.loc 1 970 0
 2531 0108 1846     		mov	r0, r3
 2532 010a 1037     		adds	r7, r7, #16
 2533 010c BD46     		mov	sp, r7
 2534              		@ sp needed
 2535 010e 80BD     		pop	{r7, pc}
 2536              		.cfi_endproc
 2537              	.LFE123:
 2539              		.section	.text.DMA_GetFlagStatus,"ax",%progbits
 2540              		.align	2
 2541              		.global	DMA_GetFlagStatus
 2542              		.thumb
 2543              		.thumb_func
 2545              	DMA_GetFlagStatus:
 2546              	.LFB124:
 971:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 972:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /**
 973:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @brief  Checks whether the specified DMAy Streamx flag is set or not.
 974:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
 975:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
 976:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMA_FLAG: specifies the flag to check.
 977:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          This parameter can be one of the following values:
 978:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_TCIFx:  Streamx transfer complete flag
 979:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_HTIFx:  Streamx half transfer complete flag
 980:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_TEIFx:  Streamx transfer error flag
 981:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_DMEIFx: Streamx direct mode error flag
 982:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_FEIFx:  Streamx FIFO error flag
 983:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         Where x can be 0 to 7 to select the DMA Stream.
 984:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @retval The new state of DMA_FLAG (SET or RESET).
 985:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
 986:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** FlagStatus DMA_GetFlagStatus(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_FLAG)
 987:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** {
 2547              		.loc 1 987 0
 2548              		.cfi_startproc
 2549              		@ args = 0, pretend = 0, frame = 24
 2550              		@ frame_needed = 1, uses_anonymous_args = 0
 2551 0000 80B5     		push	{r7, lr}
 2552              	.LCFI42:
 2553              		.cfi_def_cfa_offset 8
 2554              		.cfi_offset 7, -8
 2555              		.cfi_offset 14, -4
 2556 0002 86B0     		sub	sp, sp, #24
 2557              	.LCFI43:
 2558              		.cfi_def_cfa_offset 32
 2559 0004 00AF     		add	r7, sp, #0
 2560              	.LCFI44:
 2561              		.cfi_def_cfa_register 7
 2562 0006 7860     		str	r0, [r7, #4]
 2563 0008 3960     		str	r1, [r7]
 988:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   FlagStatus bitstatus = RESET;
 2564              		.loc 1 988 0
 2565 000a 0023     		movs	r3, #0
 2566 000c FB75     		strb	r3, [r7, #23]
 989:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMA_TypeDef* DMAy;
 990:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   uint32_t tmpreg = 0;
 2567              		.loc 1 990 0
 2568 000e 0023     		movs	r3, #0
 2569 0010 FB60     		str	r3, [r7, #12]
 991:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 992:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check the parameters */
 993:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 2570              		.loc 1 993 0
 2571 0012 7A68     		ldr	r2, [r7, #4]
 2572 0014 46F21003 		movw	r3, #24592
 2573 0018 C4F20203 		movt	r3, 16386
 2574 001c 9A42     		cmp	r2, r3
 2575 001e 70D0     		beq	.L85
 2576              		.loc 1 993 0 is_stmt 0 discriminator 1
 2577 0020 7A68     		ldr	r2, [r7, #4]
 2578 0022 46F22803 		movw	r3, #24616
 2579 0026 C4F20203 		movt	r3, 16386
 2580 002a 9A42     		cmp	r2, r3
 2581 002c 69D0     		beq	.L85
 2582 002e 7A68     		ldr	r2, [r7, #4]
 2583 0030 46F24003 		movw	r3, #24640
 2584 0034 C4F20203 		movt	r3, 16386
 2585 0038 9A42     		cmp	r2, r3
 2586 003a 62D0     		beq	.L85
 2587 003c 7A68     		ldr	r2, [r7, #4]
 2588 003e 46F25803 		movw	r3, #24664
 2589 0042 C4F20203 		movt	r3, 16386
 2590 0046 9A42     		cmp	r2, r3
 2591 0048 5BD0     		beq	.L85
 2592 004a 7A68     		ldr	r2, [r7, #4]
 2593 004c 46F27003 		movw	r3, #24688
 2594 0050 C4F20203 		movt	r3, 16386
 2595 0054 9A42     		cmp	r2, r3
 2596 0056 54D0     		beq	.L85
 2597 0058 7A68     		ldr	r2, [r7, #4]
 2598 005a 46F28803 		movw	r3, #24712
 2599 005e C4F20203 		movt	r3, 16386
 2600 0062 9A42     		cmp	r2, r3
 2601 0064 4DD0     		beq	.L85
 2602 0066 7A68     		ldr	r2, [r7, #4]
 2603 0068 46F2A003 		movw	r3, #24736
 2604 006c C4F20203 		movt	r3, 16386
 2605 0070 9A42     		cmp	r2, r3
 2606 0072 46D0     		beq	.L85
 2607 0074 7A68     		ldr	r2, [r7, #4]
 2608 0076 46F2B803 		movw	r3, #24760
 2609 007a C4F20203 		movt	r3, 16386
 2610 007e 9A42     		cmp	r2, r3
 2611 0080 3FD0     		beq	.L85
 2612 0082 7A68     		ldr	r2, [r7, #4]
 2613 0084 46F21043 		movw	r3, #25616
 2614 0088 C4F20203 		movt	r3, 16386
 2615 008c 9A42     		cmp	r2, r3
 2616 008e 38D0     		beq	.L85
 2617 0090 7A68     		ldr	r2, [r7, #4]
 2618 0092 46F22843 		movw	r3, #25640
 2619 0096 C4F20203 		movt	r3, 16386
 2620 009a 9A42     		cmp	r2, r3
 2621 009c 31D0     		beq	.L85
 2622 009e 7A68     		ldr	r2, [r7, #4]
 2623 00a0 46F24043 		movw	r3, #25664
 2624 00a4 C4F20203 		movt	r3, 16386
 2625 00a8 9A42     		cmp	r2, r3
 2626 00aa 2AD0     		beq	.L85
 2627 00ac 7A68     		ldr	r2, [r7, #4]
 2628 00ae 46F25843 		movw	r3, #25688
 2629 00b2 C4F20203 		movt	r3, 16386
 2630 00b6 9A42     		cmp	r2, r3
 2631 00b8 23D0     		beq	.L85
 2632 00ba 7A68     		ldr	r2, [r7, #4]
 2633 00bc 46F27043 		movw	r3, #25712
 2634 00c0 C4F20203 		movt	r3, 16386
 2635 00c4 9A42     		cmp	r2, r3
 2636 00c6 1CD0     		beq	.L85
 2637 00c8 7A68     		ldr	r2, [r7, #4]
 2638 00ca 46F28843 		movw	r3, #25736
 2639 00ce C4F20203 		movt	r3, 16386
 2640 00d2 9A42     		cmp	r2, r3
 2641 00d4 15D0     		beq	.L85
 2642 00d6 7A68     		ldr	r2, [r7, #4]
 2643 00d8 46F2A043 		movw	r3, #25760
 2644 00dc C4F20203 		movt	r3, 16386
 2645 00e0 9A42     		cmp	r2, r3
 2646 00e2 0ED0     		beq	.L85
 2647 00e4 7A68     		ldr	r2, [r7, #4]
 2648 00e6 46F2B843 		movw	r3, #25784
 2649 00ea C4F20203 		movt	r3, 16386
 2650 00ee 9A42     		cmp	r2, r3
 2651 00f0 07D0     		beq	.L85
 2652 00f2 40F20000 		movw	r0, #:lower16:.LC0
 2653 00f6 C0F20000 		movt	r0, #:upper16:.LC0
 2654 00fa 40F2E131 		movw	r1, #993
 2655 00fe FFF7FEFF 		bl	assert_failed
 2656              	.L85:
 994:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_GET_FLAG(DMA_FLAG));
 2657              		.loc 1 994 0 is_stmt 1
 2658 0102 3A68     		ldr	r2, [r7]
 2659 0104 2023     		movs	r3, #32
 2660 0106 C1F20003 		movt	r3, 4096
 2661 010a 9A42     		cmp	r2, r3
 2662 010c 00F0F580 		beq	.L86
 2663              		.loc 1 994 0 is_stmt 0 discriminator 1
 2664 0110 3A68     		ldr	r2, [r7]
 2665 0112 1023     		movs	r3, #16
 2666 0114 C1F20003 		movt	r3, 4096
 2667 0118 9A42     		cmp	r2, r3
 2668 011a 00F0EE80 		beq	.L86
 2669 011e 3A68     		ldr	r2, [r7]
 2670 0120 0823     		movs	r3, #8
 2671 0122 C1F20003 		movt	r3, 4096
 2672 0126 9A42     		cmp	r2, r3
 2673 0128 00F0E780 		beq	.L86
 2674 012c 3A68     		ldr	r2, [r7]
 2675 012e 0423     		movs	r3, #4
 2676 0130 C1F28003 		movt	r3, 4224
 2677 0134 9A42     		cmp	r2, r3
 2678 0136 00F0E080 		beq	.L86
 2679 013a 3A68     		ldr	r2, [r7]
 2680 013c 0123     		movs	r3, #1
 2681 013e C1F28003 		movt	r3, 4224
 2682 0142 9A42     		cmp	r2, r3
 2683 0144 00F0D980 		beq	.L86
 2684 0148 3A68     		ldr	r2, [r7]
 2685 014a 4FF40063 		mov	r3, #2048
 2686 014e C1F20003 		movt	r3, 4096
 2687 0152 9A42     		cmp	r2, r3
 2688 0154 00F0D180 		beq	.L86
 2689 0158 3A68     		ldr	r2, [r7]
 2690 015a 4FF48063 		mov	r3, #1024
 2691 015e C1F20003 		movt	r3, 4096
 2692 0162 9A42     		cmp	r2, r3
 2693 0164 00F0C980 		beq	.L86
 2694 0168 3A68     		ldr	r2, [r7]
 2695 016a 4FF40073 		mov	r3, #512
 2696 016e C1F20003 		movt	r3, 4096
 2697 0172 9A42     		cmp	r2, r3
 2698 0174 00F0C180 		beq	.L86
 2699 0178 3A68     		ldr	r2, [r7]
 2700 017a 4FF48073 		mov	r3, #256
 2701 017e C1F20003 		movt	r3, 4096
 2702 0182 9A42     		cmp	r2, r3
 2703 0184 00F0B980 		beq	.L86
 2704 0188 3A68     		ldr	r2, [r7]
 2705 018a 4023     		movs	r3, #64
 2706 018c C1F20003 		movt	r3, 4096
 2707 0190 9A42     		cmp	r2, r3
 2708 0192 00F0B280 		beq	.L86
 2709 0196 3B68     		ldr	r3, [r7]
 2710 0198 B3F1815F 		cmp	r3, #270532608
 2711 019c 00F0AD80 		beq	.L86
 2712 01a0 3A68     		ldr	r2, [r7]
 2713 01a2 0023     		movs	r3, #0
 2714 01a4 C1F21003 		movt	r3, 4112
 2715 01a8 9A42     		cmp	r2, r3
 2716 01aa 00F0A680 		beq	.L86
 2717 01ae 3A68     		ldr	r2, [r7]
 2718 01b0 0023     		movs	r3, #0
 2719 01b2 C1F20803 		movt	r3, 4104
 2720 01b6 9A42     		cmp	r2, r3
 2721 01b8 00F09F80 		beq	.L86
 2722 01bc 3A68     		ldr	r2, [r7]
 2723 01be 0023     		movs	r3, #0
 2724 01c0 C1F20403 		movt	r3, 4100
 2725 01c4 9A42     		cmp	r2, r3
 2726 01c6 00F09880 		beq	.L86
 2727 01ca 3A68     		ldr	r2, [r7]
 2728 01cc 0023     		movs	r3, #0
 2729 01ce C1F20103 		movt	r3, 4097
 2730 01d2 9A42     		cmp	r2, r3
 2731 01d4 00F09180 		beq	.L86
 2732 01d8 3B68     		ldr	r3, [r7]
 2733 01da B3F1C05F 		cmp	r3, #402653184
 2734 01de 00F08C80 		beq	.L86
 2735 01e2 3B68     		ldr	r3, [r7]
 2736 01e4 B3F1A05F 		cmp	r3, #335544320
 2737 01e8 00F08780 		beq	.L86
 2738 01ec 3B68     		ldr	r3, [r7]
 2739 01ee B3F1905F 		cmp	r3, #301989888
 2740 01f2 00F08280 		beq	.L86
 2741 01f6 3B68     		ldr	r3, [r7]
 2742 01f8 B3F1885F 		cmp	r3, #285212672
 2743 01fc 7DD0     		beq	.L86
 2744 01fe 3B68     		ldr	r3, [r7]
 2745 0200 B3F1825F 		cmp	r3, #272629760
 2746 0204 79D0     		beq	.L86
 2747 0206 3A68     		ldr	r2, [r7]
 2748 0208 2023     		movs	r3, #32
 2749 020a C2F20003 		movt	r3, 8192
 2750 020e 9A42     		cmp	r2, r3
 2751 0210 73D0     		beq	.L86
 2752 0212 3A68     		ldr	r2, [r7]
 2753 0214 1023     		movs	r3, #16
 2754 0216 C2F20003 		movt	r3, 8192
 2755 021a 9A42     		cmp	r2, r3
 2756 021c 6DD0     		beq	.L86
 2757 021e 3A68     		ldr	r2, [r7]
 2758 0220 0823     		movs	r3, #8
 2759 0222 C2F20003 		movt	r3, 8192
 2760 0226 9A42     		cmp	r2, r3
 2761 0228 67D0     		beq	.L86
 2762 022a 3A68     		ldr	r2, [r7]
 2763 022c 0423     		movs	r3, #4
 2764 022e C2F20003 		movt	r3, 8192
 2765 0232 9A42     		cmp	r2, r3
 2766 0234 61D0     		beq	.L86
 2767 0236 3A68     		ldr	r2, [r7]
 2768 0238 0123     		movs	r3, #1
 2769 023a C2F20003 		movt	r3, 8192
 2770 023e 9A42     		cmp	r2, r3
 2771 0240 5BD0     		beq	.L86
 2772 0242 3A68     		ldr	r2, [r7]
 2773 0244 4FF40063 		mov	r3, #2048
 2774 0248 C2F20003 		movt	r3, 8192
 2775 024c 9A42     		cmp	r2, r3
 2776 024e 54D0     		beq	.L86
 2777 0250 3A68     		ldr	r2, [r7]
 2778 0252 4FF48063 		mov	r3, #1024
 2779 0256 C2F20003 		movt	r3, 8192
 2780 025a 9A42     		cmp	r2, r3
 2781 025c 4DD0     		beq	.L86
 2782 025e 3A68     		ldr	r2, [r7]
 2783 0260 4FF40073 		mov	r3, #512
 2784 0264 C2F20003 		movt	r3, 8192
 2785 0268 9A42     		cmp	r2, r3
 2786 026a 46D0     		beq	.L86
 2787 026c 3A68     		ldr	r2, [r7]
 2788 026e 4FF48073 		mov	r3, #256
 2789 0272 C2F20003 		movt	r3, 8192
 2790 0276 9A42     		cmp	r2, r3
 2791 0278 3FD0     		beq	.L86
 2792 027a 3A68     		ldr	r2, [r7]
 2793 027c 4023     		movs	r3, #64
 2794 027e C2F20003 		movt	r3, 8192
 2795 0282 9A42     		cmp	r2, r3
 2796 0284 39D0     		beq	.L86
 2797 0286 3A68     		ldr	r2, [r7]
 2798 0288 0023     		movs	r3, #0
 2799 028a C2F22003 		movt	r3, 8224
 2800 028e 9A42     		cmp	r2, r3
 2801 0290 33D0     		beq	.L86
 2802 0292 3A68     		ldr	r2, [r7]
 2803 0294 0023     		movs	r3, #0
 2804 0296 C2F21003 		movt	r3, 8208
 2805 029a 9A42     		cmp	r2, r3
 2806 029c 2DD0     		beq	.L86
 2807 029e 3A68     		ldr	r2, [r7]
 2808 02a0 0023     		movs	r3, #0
 2809 02a2 C2F20803 		movt	r3, 8200
 2810 02a6 9A42     		cmp	r2, r3
 2811 02a8 27D0     		beq	.L86
 2812 02aa 3A68     		ldr	r2, [r7]
 2813 02ac 0023     		movs	r3, #0
 2814 02ae C2F20403 		movt	r3, 8196
 2815 02b2 9A42     		cmp	r2, r3
 2816 02b4 21D0     		beq	.L86
 2817 02b6 3A68     		ldr	r2, [r7]
 2818 02b8 0023     		movs	r3, #0
 2819 02ba C2F20103 		movt	r3, 8193
 2820 02be 9A42     		cmp	r2, r3
 2821 02c0 1BD0     		beq	.L86
 2822 02c2 3B68     		ldr	r3, [r7]
 2823 02c4 B3F1205F 		cmp	r3, #671088640
 2824 02c8 17D0     		beq	.L86
 2825 02ca 3B68     		ldr	r3, [r7]
 2826 02cc B3F1105F 		cmp	r3, #603979776
 2827 02d0 13D0     		beq	.L86
 2828 02d2 3B68     		ldr	r3, [r7]
 2829 02d4 B3F1085F 		cmp	r3, #570425344
 2830 02d8 0FD0     		beq	.L86
 2831 02da 3B68     		ldr	r3, [r7]
 2832 02dc B3F1045F 		cmp	r3, #553648128
 2833 02e0 0BD0     		beq	.L86
 2834 02e2 3B68     		ldr	r3, [r7]
 2835 02e4 B3F1015F 		cmp	r3, #541065216
 2836 02e8 07D0     		beq	.L86
 2837 02ea 40F20000 		movw	r0, #:lower16:.LC0
 2838 02ee C0F20000 		movt	r0, #:upper16:.LC0
 2839 02f2 40F2E231 		movw	r1, #994
 2840 02f6 FFF7FEFF 		bl	assert_failed
 2841              	.L86:
 995:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
 996:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Determine the DMA to which belongs the stream */
 997:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   if (DMAy_Streamx < DMA2_Stream0)
 2842              		.loc 1 997 0 is_stmt 1
 2843 02fa 7A68     		ldr	r2, [r7, #4]
 2844 02fc 46F20F43 		movw	r3, #25615
 2845 0300 C4F20203 		movt	r3, 16386
 2846 0304 9A42     		cmp	r2, r3
 2847 0306 05D8     		bhi	.L87
 998:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
 999:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* DMAy_Streamx belongs to DMA1 */
1000:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMAy = DMA1; 
 2848              		.loc 1 1000 0
 2849 0308 4FF4C043 		mov	r3, #24576
 2850 030c C4F20203 		movt	r3, 16386
 2851 0310 3B61     		str	r3, [r7, #16]
 2852 0312 04E0     		b	.L88
 2853              	.L87:
1001:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   } 
1002:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else 
1003:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
1004:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* DMAy_Streamx belongs to DMA2 */
1005:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMAy = DMA2; 
 2854              		.loc 1 1005 0
 2855 0314 4FF4C843 		mov	r3, #25600
 2856 0318 C4F20203 		movt	r3, 16386
 2857 031c 3B61     		str	r3, [r7, #16]
 2858              	.L88:
1006:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
1007:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
1008:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check if the flag is in HISR or LISR */
1009:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   if ((DMA_FLAG & HIGH_ISR_MASK) != (uint32_t)RESET)
 2859              		.loc 1 1009 0
 2860 031e 3B68     		ldr	r3, [r7]
 2861 0320 03F00053 		and	r3, r3, #536870912
 2862 0324 002B     		cmp	r3, #0
 2863 0326 03D0     		beq	.L89
1010:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
1011:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Get DMAy HISR register value */
1012:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     tmpreg = DMAy->HISR;
 2864              		.loc 1 1012 0
 2865 0328 3B69     		ldr	r3, [r7, #16]
 2866 032a 5B68     		ldr	r3, [r3, #4]
 2867 032c FB60     		str	r3, [r7, #12]
 2868 032e 02E0     		b	.L90
 2869              	.L89:
1013:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
1014:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else
1015:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
1016:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Get DMAy LISR register value */
1017:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     tmpreg = DMAy->LISR;
 2870              		.loc 1 1017 0
 2871 0330 3B69     		ldr	r3, [r7, #16]
 2872 0332 1B68     		ldr	r3, [r3]
 2873 0334 FB60     		str	r3, [r7, #12]
 2874              	.L90:
1018:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }   
1019:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  
1020:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Mask the reserved bits */
1021:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   tmpreg &= (uint32_t)RESERVED_MASK;
 2875              		.loc 1 1021 0
 2876 0336 FB68     		ldr	r3, [r7, #12]
 2877 0338 23F0F023 		bic	r3, r3, #-268374016
 2878 033c 23F08213 		bic	r3, r3, #8519810
 2879 0340 FB60     		str	r3, [r7, #12]
1022:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
1023:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check the status of the specified DMA flag */
1024:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   if ((tmpreg & DMA_FLAG) != (uint32_t)RESET)
 2880              		.loc 1 1024 0
 2881 0342 FA68     		ldr	r2, [r7, #12]
 2882 0344 3B68     		ldr	r3, [r7]
 2883 0346 1340     		ands	r3, r3, r2
 2884 0348 002B     		cmp	r3, #0
 2885 034a 02D0     		beq	.L91
1025:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
1026:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* DMA_FLAG is set */
1027:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     bitstatus = SET;
 2886              		.loc 1 1027 0
 2887 034c 0123     		movs	r3, #1
 2888 034e FB75     		strb	r3, [r7, #23]
 2889 0350 01E0     		b	.L92
 2890              	.L91:
1028:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
1029:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else
1030:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
1031:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* DMA_FLAG is reset */
1032:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     bitstatus = RESET;
 2891              		.loc 1 1032 0
 2892 0352 0023     		movs	r3, #0
 2893 0354 FB75     		strb	r3, [r7, #23]
 2894              	.L92:
1033:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
1034:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
1035:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Return the DMA_FLAG status */
1036:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   return  bitstatus;
 2895              		.loc 1 1036 0
 2896 0356 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1037:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** }
 2897              		.loc 1 1037 0
 2898 0358 1846     		mov	r0, r3
 2899 035a 1837     		adds	r7, r7, #24
 2900 035c BD46     		mov	sp, r7
 2901              		@ sp needed
 2902 035e 80BD     		pop	{r7, pc}
 2903              		.cfi_endproc
 2904              	.LFE124:
 2906              		.section	.text.DMA_ClearFlag,"ax",%progbits
 2907              		.align	2
 2908              		.global	DMA_ClearFlag
 2909              		.thumb
 2910              		.thumb_func
 2912              	DMA_ClearFlag:
 2913              	.LFB125:
1038:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
1039:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /**
1040:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @brief  Clears the DMAy Streamx's pending flags.
1041:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
1042:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
1043:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMA_FLAG: specifies the flag to clear.
1044:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          This parameter can be any combination of the following values:
1045:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_TCIFx:  Streamx transfer complete flag
1046:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_HTIFx:  Streamx half transfer complete flag
1047:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_TEIFx:  Streamx transfer error flag
1048:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_DMEIFx: Streamx direct mode error flag
1049:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_FLAG_FEIFx:  Streamx FIFO error flag
1050:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         Where x can be 0 to 7 to select the DMA Stream.   
1051:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @retval None
1052:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
1053:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** void DMA_ClearFlag(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_FLAG)
1054:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** {
 2914              		.loc 1 1054 0
 2915              		.cfi_startproc
 2916              		@ args = 0, pretend = 0, frame = 16
 2917              		@ frame_needed = 1, uses_anonymous_args = 0
 2918 0000 80B5     		push	{r7, lr}
 2919              	.LCFI45:
 2920              		.cfi_def_cfa_offset 8
 2921              		.cfi_offset 7, -8
 2922              		.cfi_offset 14, -4
 2923 0002 84B0     		sub	sp, sp, #16
 2924              	.LCFI46:
 2925              		.cfi_def_cfa_offset 24
 2926 0004 00AF     		add	r7, sp, #0
 2927              	.LCFI47:
 2928              		.cfi_def_cfa_register 7
 2929 0006 7860     		str	r0, [r7, #4]
 2930 0008 3960     		str	r1, [r7]
1055:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMA_TypeDef* DMAy;
1056:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
1057:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check the parameters */
1058:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 2931              		.loc 1 1058 0
 2932 000a 7A68     		ldr	r2, [r7, #4]
 2933 000c 46F21003 		movw	r3, #24592
 2934 0010 C4F20203 		movt	r3, 16386
 2935 0014 9A42     		cmp	r2, r3
 2936 0016 70D0     		beq	.L95
 2937              		.loc 1 1058 0 is_stmt 0 discriminator 1
 2938 0018 7A68     		ldr	r2, [r7, #4]
 2939 001a 46F22803 		movw	r3, #24616
 2940 001e C4F20203 		movt	r3, 16386
 2941 0022 9A42     		cmp	r2, r3
 2942 0024 69D0     		beq	.L95
 2943 0026 7A68     		ldr	r2, [r7, #4]
 2944 0028 46F24003 		movw	r3, #24640
 2945 002c C4F20203 		movt	r3, 16386
 2946 0030 9A42     		cmp	r2, r3
 2947 0032 62D0     		beq	.L95
 2948 0034 7A68     		ldr	r2, [r7, #4]
 2949 0036 46F25803 		movw	r3, #24664
 2950 003a C4F20203 		movt	r3, 16386
 2951 003e 9A42     		cmp	r2, r3
 2952 0040 5BD0     		beq	.L95
 2953 0042 7A68     		ldr	r2, [r7, #4]
 2954 0044 46F27003 		movw	r3, #24688
 2955 0048 C4F20203 		movt	r3, 16386
 2956 004c 9A42     		cmp	r2, r3
 2957 004e 54D0     		beq	.L95
 2958 0050 7A68     		ldr	r2, [r7, #4]
 2959 0052 46F28803 		movw	r3, #24712
 2960 0056 C4F20203 		movt	r3, 16386
 2961 005a 9A42     		cmp	r2, r3
 2962 005c 4DD0     		beq	.L95
 2963 005e 7A68     		ldr	r2, [r7, #4]
 2964 0060 46F2A003 		movw	r3, #24736
 2965 0064 C4F20203 		movt	r3, 16386
 2966 0068 9A42     		cmp	r2, r3
 2967 006a 46D0     		beq	.L95
 2968 006c 7A68     		ldr	r2, [r7, #4]
 2969 006e 46F2B803 		movw	r3, #24760
 2970 0072 C4F20203 		movt	r3, 16386
 2971 0076 9A42     		cmp	r2, r3
 2972 0078 3FD0     		beq	.L95
 2973 007a 7A68     		ldr	r2, [r7, #4]
 2974 007c 46F21043 		movw	r3, #25616
 2975 0080 C4F20203 		movt	r3, 16386
 2976 0084 9A42     		cmp	r2, r3
 2977 0086 38D0     		beq	.L95
 2978 0088 7A68     		ldr	r2, [r7, #4]
 2979 008a 46F22843 		movw	r3, #25640
 2980 008e C4F20203 		movt	r3, 16386
 2981 0092 9A42     		cmp	r2, r3
 2982 0094 31D0     		beq	.L95
 2983 0096 7A68     		ldr	r2, [r7, #4]
 2984 0098 46F24043 		movw	r3, #25664
 2985 009c C4F20203 		movt	r3, 16386
 2986 00a0 9A42     		cmp	r2, r3
 2987 00a2 2AD0     		beq	.L95
 2988 00a4 7A68     		ldr	r2, [r7, #4]
 2989 00a6 46F25843 		movw	r3, #25688
 2990 00aa C4F20203 		movt	r3, 16386
 2991 00ae 9A42     		cmp	r2, r3
 2992 00b0 23D0     		beq	.L95
 2993 00b2 7A68     		ldr	r2, [r7, #4]
 2994 00b4 46F27043 		movw	r3, #25712
 2995 00b8 C4F20203 		movt	r3, 16386
 2996 00bc 9A42     		cmp	r2, r3
 2997 00be 1CD0     		beq	.L95
 2998 00c0 7A68     		ldr	r2, [r7, #4]
 2999 00c2 46F28843 		movw	r3, #25736
 3000 00c6 C4F20203 		movt	r3, 16386
 3001 00ca 9A42     		cmp	r2, r3
 3002 00cc 15D0     		beq	.L95
 3003 00ce 7A68     		ldr	r2, [r7, #4]
 3004 00d0 46F2A043 		movw	r3, #25760
 3005 00d4 C4F20203 		movt	r3, 16386
 3006 00d8 9A42     		cmp	r2, r3
 3007 00da 0ED0     		beq	.L95
 3008 00dc 7A68     		ldr	r2, [r7, #4]
 3009 00de 46F2B843 		movw	r3, #25784
 3010 00e2 C4F20203 		movt	r3, 16386
 3011 00e6 9A42     		cmp	r2, r3
 3012 00e8 07D0     		beq	.L95
 3013 00ea 40F20000 		movw	r0, #:lower16:.LC0
 3014 00ee C0F20000 		movt	r0, #:upper16:.LC0
 3015 00f2 40F22241 		movw	r1, #1058
 3016 00f6 FFF7FEFF 		bl	assert_failed
 3017              	.L95:
1059:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_CLEAR_FLAG(DMA_FLAG));
 3018              		.loc 1 1059 0 is_stmt 1
 3019 00fa 3B68     		ldr	r3, [r7]
 3020 00fc 03F04053 		and	r3, r3, #805306368
 3021 0100 B3F1405F 		cmp	r3, #805306368
 3022 0104 0FD0     		beq	.L96
 3023              		.loc 1 1059 0 is_stmt 0 discriminator 2
 3024 0106 3B68     		ldr	r3, [r7]
 3025 0108 03F04053 		and	r3, r3, #805306368
 3026 010c 002B     		cmp	r3, #0
 3027 010e 0AD0     		beq	.L96
 3028              		.loc 1 1059 0 discriminator 1
 3029 0110 3A68     		ldr	r2, [r7]
 3030 0112 4FF28203 		movw	r3, #61570
 3031 0116 CCF28203 		movt	r3, 49282
 3032 011a 1340     		ands	r3, r3, r2
 3033 011c 002B     		cmp	r3, #0
 3034 011e 02D1     		bne	.L96
 3035 0120 3B68     		ldr	r3, [r7]
 3036 0122 002B     		cmp	r3, #0
 3037 0124 07D1     		bne	.L97
 3038              	.L96:
 3039 0126 40F20000 		movw	r0, #:lower16:.LC0
 3040 012a C0F20000 		movt	r0, #:upper16:.LC0
 3041 012e 40F22341 		movw	r1, #1059
 3042 0132 FFF7FEFF 		bl	assert_failed
 3043              	.L97:
1060:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
1061:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Determine the DMA to which belongs the stream */
1062:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   if (DMAy_Streamx < DMA2_Stream0)
 3044              		.loc 1 1062 0 is_stmt 1
 3045 0136 7A68     		ldr	r2, [r7, #4]
 3046 0138 46F20F43 		movw	r3, #25615
 3047 013c C4F20203 		movt	r3, 16386
 3048 0140 9A42     		cmp	r2, r3
 3049 0142 05D8     		bhi	.L98
1063:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
1064:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* DMAy_Streamx belongs to DMA1 */
1065:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMAy = DMA1; 
 3050              		.loc 1 1065 0
 3051 0144 4FF4C043 		mov	r3, #24576
 3052 0148 C4F20203 		movt	r3, 16386
 3053 014c FB60     		str	r3, [r7, #12]
 3054 014e 04E0     		b	.L99
 3055              	.L98:
1066:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   } 
1067:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else 
1068:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
1069:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* DMAy_Streamx belongs to DMA2 */
1070:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMAy = DMA2; 
 3056              		.loc 1 1070 0
 3057 0150 4FF4C843 		mov	r3, #25600
 3058 0154 C4F20203 		movt	r3, 16386
 3059 0158 FB60     		str	r3, [r7, #12]
 3060              	.L99:
1071:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
1072:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
1073:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check if LIFCR or HIFCR register is targeted */
1074:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   if ((DMA_FLAG & HIGH_ISR_MASK) != (uint32_t)RESET)
 3061              		.loc 1 1074 0
 3062 015a 3B68     		ldr	r3, [r7]
 3063 015c 03F00053 		and	r3, r3, #536870912
 3064 0160 002B     		cmp	r3, #0
 3065 0162 07D0     		beq	.L100
1075:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
1076:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Set DMAy HIFCR register clear flag bits */
1077:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMAy->HIFCR = (uint32_t)(DMA_FLAG & RESERVED_MASK);
 3066              		.loc 1 1077 0
 3067 0164 3B68     		ldr	r3, [r7]
 3068 0166 23F0F023 		bic	r3, r3, #-268374016
 3069 016a 23F08213 		bic	r3, r3, #8519810
 3070 016e FA68     		ldr	r2, [r7, #12]
 3071 0170 D360     		str	r3, [r2, #12]
 3072 0172 06E0     		b	.L94
 3073              	.L100:
1078:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
1079:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else 
1080:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
1081:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Set DMAy LIFCR register clear flag bits */
1082:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMAy->LIFCR = (uint32_t)(DMA_FLAG & RESERVED_MASK);
 3074              		.loc 1 1082 0
 3075 0174 3B68     		ldr	r3, [r7]
 3076 0176 23F0F023 		bic	r3, r3, #-268374016
 3077 017a 23F08213 		bic	r3, r3, #8519810
 3078 017e FA68     		ldr	r2, [r7, #12]
 3079 0180 9360     		str	r3, [r2, #8]
 3080              	.L94:
1083:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }    
1084:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** }
 3081              		.loc 1 1084 0
 3082 0182 1037     		adds	r7, r7, #16
 3083 0184 BD46     		mov	sp, r7
 3084              		@ sp needed
 3085 0186 80BD     		pop	{r7, pc}
 3086              		.cfi_endproc
 3087              	.LFE125:
 3089              		.section	.text.DMA_ITConfig,"ax",%progbits
 3090              		.align	2
 3091              		.global	DMA_ITConfig
 3092              		.thumb
 3093              		.thumb_func
 3095              	DMA_ITConfig:
 3096              	.LFB126:
1085:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
1086:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /**
1087:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @brief  Enables or disables the specified DMAy Streamx interrupts.
1088:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
1089:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
1090:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param DMA_IT: specifies the DMA interrupt sources to be enabled or disabled. 
1091:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          This parameter can be any combination of the following values:
1092:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_IT_TC:  Transfer complete interrupt mask
1093:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_IT_HT:  Half transfer complete interrupt mask
1094:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_IT_TE:  Transfer error interrupt mask
1095:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_IT_FE:  FIFO error interrupt mask
1096:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  NewState: new state of the specified DMA interrupts.
1097:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          This parameter can be: ENABLE or DISABLE.
1098:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @retval None
1099:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
1100:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** void DMA_ITConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_IT, FunctionalState NewState)
1101:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** {
 3097              		.loc 1 1101 0
 3098              		.cfi_startproc
 3099              		@ args = 0, pretend = 0, frame = 16
 3100              		@ frame_needed = 1, uses_anonymous_args = 0
 3101 0000 80B5     		push	{r7, lr}
 3102              	.LCFI48:
 3103              		.cfi_def_cfa_offset 8
 3104              		.cfi_offset 7, -8
 3105              		.cfi_offset 14, -4
 3106 0002 84B0     		sub	sp, sp, #16
 3107              	.LCFI49:
 3108              		.cfi_def_cfa_offset 24
 3109 0004 00AF     		add	r7, sp, #0
 3110              	.LCFI50:
 3111              		.cfi_def_cfa_register 7
 3112 0006 F860     		str	r0, [r7, #12]
 3113 0008 B960     		str	r1, [r7, #8]
 3114 000a 1346     		mov	r3, r2
 3115 000c FB71     		strb	r3, [r7, #7]
1102:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check the parameters */
1103:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 3116              		.loc 1 1103 0
 3117 000e FA68     		ldr	r2, [r7, #12]
 3118 0010 46F21003 		movw	r3, #24592
 3119 0014 C4F20203 		movt	r3, 16386
 3120 0018 9A42     		cmp	r2, r3
 3121 001a 70D0     		beq	.L103
 3122              		.loc 1 1103 0 is_stmt 0 discriminator 1
 3123 001c FA68     		ldr	r2, [r7, #12]
 3124 001e 46F22803 		movw	r3, #24616
 3125 0022 C4F20203 		movt	r3, 16386
 3126 0026 9A42     		cmp	r2, r3
 3127 0028 69D0     		beq	.L103
 3128 002a FA68     		ldr	r2, [r7, #12]
 3129 002c 46F24003 		movw	r3, #24640
 3130 0030 C4F20203 		movt	r3, 16386
 3131 0034 9A42     		cmp	r2, r3
 3132 0036 62D0     		beq	.L103
 3133 0038 FA68     		ldr	r2, [r7, #12]
 3134 003a 46F25803 		movw	r3, #24664
 3135 003e C4F20203 		movt	r3, 16386
 3136 0042 9A42     		cmp	r2, r3
 3137 0044 5BD0     		beq	.L103
 3138 0046 FA68     		ldr	r2, [r7, #12]
 3139 0048 46F27003 		movw	r3, #24688
 3140 004c C4F20203 		movt	r3, 16386
 3141 0050 9A42     		cmp	r2, r3
 3142 0052 54D0     		beq	.L103
 3143 0054 FA68     		ldr	r2, [r7, #12]
 3144 0056 46F28803 		movw	r3, #24712
 3145 005a C4F20203 		movt	r3, 16386
 3146 005e 9A42     		cmp	r2, r3
 3147 0060 4DD0     		beq	.L103
 3148 0062 FA68     		ldr	r2, [r7, #12]
 3149 0064 46F2A003 		movw	r3, #24736
 3150 0068 C4F20203 		movt	r3, 16386
 3151 006c 9A42     		cmp	r2, r3
 3152 006e 46D0     		beq	.L103
 3153 0070 FA68     		ldr	r2, [r7, #12]
 3154 0072 46F2B803 		movw	r3, #24760
 3155 0076 C4F20203 		movt	r3, 16386
 3156 007a 9A42     		cmp	r2, r3
 3157 007c 3FD0     		beq	.L103
 3158 007e FA68     		ldr	r2, [r7, #12]
 3159 0080 46F21043 		movw	r3, #25616
 3160 0084 C4F20203 		movt	r3, 16386
 3161 0088 9A42     		cmp	r2, r3
 3162 008a 38D0     		beq	.L103
 3163 008c FA68     		ldr	r2, [r7, #12]
 3164 008e 46F22843 		movw	r3, #25640
 3165 0092 C4F20203 		movt	r3, 16386
 3166 0096 9A42     		cmp	r2, r3
 3167 0098 31D0     		beq	.L103
 3168 009a FA68     		ldr	r2, [r7, #12]
 3169 009c 46F24043 		movw	r3, #25664
 3170 00a0 C4F20203 		movt	r3, 16386
 3171 00a4 9A42     		cmp	r2, r3
 3172 00a6 2AD0     		beq	.L103
 3173 00a8 FA68     		ldr	r2, [r7, #12]
 3174 00aa 46F25843 		movw	r3, #25688
 3175 00ae C4F20203 		movt	r3, 16386
 3176 00b2 9A42     		cmp	r2, r3
 3177 00b4 23D0     		beq	.L103
 3178 00b6 FA68     		ldr	r2, [r7, #12]
 3179 00b8 46F27043 		movw	r3, #25712
 3180 00bc C4F20203 		movt	r3, 16386
 3181 00c0 9A42     		cmp	r2, r3
 3182 00c2 1CD0     		beq	.L103
 3183 00c4 FA68     		ldr	r2, [r7, #12]
 3184 00c6 46F28843 		movw	r3, #25736
 3185 00ca C4F20203 		movt	r3, 16386
 3186 00ce 9A42     		cmp	r2, r3
 3187 00d0 15D0     		beq	.L103
 3188 00d2 FA68     		ldr	r2, [r7, #12]
 3189 00d4 46F2A043 		movw	r3, #25760
 3190 00d8 C4F20203 		movt	r3, 16386
 3191 00dc 9A42     		cmp	r2, r3
 3192 00de 0ED0     		beq	.L103
 3193 00e0 FA68     		ldr	r2, [r7, #12]
 3194 00e2 46F2B843 		movw	r3, #25784
 3195 00e6 C4F20203 		movt	r3, 16386
 3196 00ea 9A42     		cmp	r2, r3
 3197 00ec 07D0     		beq	.L103
 3198 00ee 40F20000 		movw	r0, #:lower16:.LC0
 3199 00f2 C0F20000 		movt	r0, #:upper16:.LC0
 3200 00f6 40F24F41 		movw	r1, #1103
 3201 00fa FFF7FEFF 		bl	assert_failed
 3202              	.L103:
1104:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_CONFIG_IT(DMA_IT));
 3203              		.loc 1 1104 0 is_stmt 1
 3204 00fe BB68     		ldr	r3, [r7, #8]
 3205 0100 23F09E03 		bic	r3, r3, #158
 3206 0104 002B     		cmp	r3, #0
 3207 0106 02D1     		bne	.L104
 3208              		.loc 1 1104 0 is_stmt 0 discriminator 2
 3209 0108 BB68     		ldr	r3, [r7, #8]
 3210 010a 002B     		cmp	r3, #0
 3211 010c 07D1     		bne	.L105
 3212              	.L104:
 3213              		.loc 1 1104 0 discriminator 1
 3214 010e 40F20000 		movw	r0, #:lower16:.LC0
 3215 0112 C0F20000 		movt	r0, #:upper16:.LC0
 3216 0116 4FF48A61 		mov	r1, #1104
 3217 011a FFF7FEFF 		bl	assert_failed
 3218              	.L105:
1105:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 3219              		.loc 1 1105 0 is_stmt 1
 3220 011e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3221 0120 002B     		cmp	r3, #0
 3222 0122 0AD0     		beq	.L106
 3223              		.loc 1 1105 0 is_stmt 0 discriminator 1
 3224 0124 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3225 0126 012B     		cmp	r3, #1
 3226 0128 07D0     		beq	.L106
 3227 012a 40F20000 		movw	r0, #:lower16:.LC0
 3228 012e C0F20000 		movt	r0, #:upper16:.LC0
 3229 0132 40F25141 		movw	r1, #1105
 3230 0136 FFF7FEFF 		bl	assert_failed
 3231              	.L106:
1106:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
1107:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check if the DMA_IT parameter contains a FIFO interrupt */
1108:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   if ((DMA_IT & DMA_IT_FE) != 0)
 3232              		.loc 1 1108 0 is_stmt 1
 3233 013a BB68     		ldr	r3, [r7, #8]
 3234 013c 03F08003 		and	r3, r3, #128
 3235 0140 002B     		cmp	r3, #0
 3236 0142 0FD0     		beq	.L107
1109:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
1110:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     if (NewState != DISABLE)
 3237              		.loc 1 1110 0
 3238 0144 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3239 0146 002B     		cmp	r3, #0
 3240 0148 06D0     		beq	.L108
1111:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     {
1112:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****       /* Enable the selected DMA FIFO interrupts */
1113:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****       DMAy_Streamx->FCR |= (uint32_t)DMA_IT_FE;
 3241              		.loc 1 1113 0
 3242 014a FB68     		ldr	r3, [r7, #12]
 3243 014c 5B69     		ldr	r3, [r3, #20]
 3244 014e 43F08002 		orr	r2, r3, #128
 3245 0152 FB68     		ldr	r3, [r7, #12]
 3246 0154 5A61     		str	r2, [r3, #20]
 3247 0156 05E0     		b	.L107
 3248              	.L108:
1114:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     }    
1115:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     else 
1116:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     {
1117:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****       /* Disable the selected DMA FIFO interrupts */
1118:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****       DMAy_Streamx->FCR &= ~(uint32_t)DMA_IT_FE;  
 3249              		.loc 1 1118 0
 3250 0158 FB68     		ldr	r3, [r7, #12]
 3251 015a 5B69     		ldr	r3, [r3, #20]
 3252 015c 23F08002 		bic	r2, r3, #128
 3253 0160 FB68     		ldr	r3, [r7, #12]
 3254 0162 5A61     		str	r2, [r3, #20]
 3255              	.L107:
1119:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     }
1120:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
1121:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
1122:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check if the DMA_IT parameter contains a Transfer interrupt */
1123:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   if (DMA_IT != DMA_IT_FE)
 3256              		.loc 1 1123 0
 3257 0164 BB68     		ldr	r3, [r7, #8]
 3258 0166 802B     		cmp	r3, #128
 3259 0168 14D0     		beq	.L102
1124:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
1125:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     if (NewState != DISABLE)
 3260              		.loc 1 1125 0
 3261 016a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3262 016c 002B     		cmp	r3, #0
 3263 016e 08D0     		beq	.L110
1126:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     {
1127:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****       /* Enable the selected DMA transfer interrupts */
1128:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****       DMAy_Streamx->CR |= (uint32_t)(DMA_IT  & TRANSFER_IT_ENABLE_MASK);
 3264              		.loc 1 1128 0
 3265 0170 FB68     		ldr	r3, [r7, #12]
 3266 0172 1A68     		ldr	r2, [r3]
 3267 0174 BB68     		ldr	r3, [r7, #8]
 3268 0176 03F01E03 		and	r3, r3, #30
 3269 017a 1A43     		orrs	r2, r2, r3
 3270 017c FB68     		ldr	r3, [r7, #12]
 3271 017e 1A60     		str	r2, [r3]
 3272 0180 08E0     		b	.L102
 3273              	.L110:
1129:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     }
1130:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     else
1131:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     {
1132:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****       /* Disable the selected DMA transfer interrupts */
1133:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****       DMAy_Streamx->CR &= ~(uint32_t)(DMA_IT & TRANSFER_IT_ENABLE_MASK);
 3274              		.loc 1 1133 0
 3275 0182 FB68     		ldr	r3, [r7, #12]
 3276 0184 1A68     		ldr	r2, [r3]
 3277 0186 BB68     		ldr	r3, [r7, #8]
 3278 0188 03F01E03 		and	r3, r3, #30
 3279 018c DB43     		mvns	r3, r3
 3280 018e 1A40     		ands	r2, r2, r3
 3281 0190 FB68     		ldr	r3, [r7, #12]
 3282 0192 1A60     		str	r2, [r3]
 3283              	.L102:
1134:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     }    
1135:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
1136:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** }
 3284              		.loc 1 1136 0
 3285 0194 1037     		adds	r7, r7, #16
 3286 0196 BD46     		mov	sp, r7
 3287              		@ sp needed
 3288 0198 80BD     		pop	{r7, pc}
 3289              		.cfi_endproc
 3290              	.LFE126:
 3292 019a 00BF     		.section	.text.DMA_GetITStatus,"ax",%progbits
 3293              		.align	2
 3294              		.global	DMA_GetITStatus
 3295              		.thumb
 3296              		.thumb_func
 3298              	DMA_GetITStatus:
 3299              	.LFB127:
1137:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
1138:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /**
1139:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @brief  Checks whether the specified DMAy Streamx interrupt has occurred or not.
1140:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
1141:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
1142:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMA_IT: specifies the DMA interrupt source to check.
1143:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          This parameter can be one of the following values:
1144:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_IT_TCIFx:  Streamx transfer complete interrupt
1145:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_IT_HTIFx:  Streamx half transfer complete interrupt
1146:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_IT_TEIFx:  Streamx transfer error interrupt
1147:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_IT_DMEIFx: Streamx direct mode error interrupt
1148:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_IT_FEIFx:  Streamx FIFO error interrupt
1149:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         Where x can be 0 to 7 to select the DMA Stream.
1150:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @retval The new state of DMA_IT (SET or RESET).
1151:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
1152:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** ITStatus DMA_GetITStatus(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_IT)
1153:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** {
 3300              		.loc 1 1153 0
 3301              		.cfi_startproc
 3302              		@ args = 0, pretend = 0, frame = 24
 3303              		@ frame_needed = 1, uses_anonymous_args = 0
 3304 0000 80B5     		push	{r7, lr}
 3305              	.LCFI51:
 3306              		.cfi_def_cfa_offset 8
 3307              		.cfi_offset 7, -8
 3308              		.cfi_offset 14, -4
 3309 0002 86B0     		sub	sp, sp, #24
 3310              	.LCFI52:
 3311              		.cfi_def_cfa_offset 32
 3312 0004 00AF     		add	r7, sp, #0
 3313              	.LCFI53:
 3314              		.cfi_def_cfa_register 7
 3315 0006 7860     		str	r0, [r7, #4]
 3316 0008 3960     		str	r1, [r7]
1154:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   ITStatus bitstatus = RESET;
 3317              		.loc 1 1154 0
 3318 000a 0023     		movs	r3, #0
 3319 000c FB75     		strb	r3, [r7, #23]
1155:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMA_TypeDef* DMAy;
1156:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   uint32_t tmpreg = 0, enablestatus = 0;
 3320              		.loc 1 1156 0
 3321 000e 0023     		movs	r3, #0
 3322 0010 FB60     		str	r3, [r7, #12]
 3323 0012 0023     		movs	r3, #0
 3324 0014 BB60     		str	r3, [r7, #8]
1157:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
1158:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check the parameters */
1159:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 3325              		.loc 1 1159 0
 3326 0016 7A68     		ldr	r2, [r7, #4]
 3327 0018 46F21003 		movw	r3, #24592
 3328 001c C4F20203 		movt	r3, 16386
 3329 0020 9A42     		cmp	r2, r3
 3330 0022 70D0     		beq	.L112
 3331              		.loc 1 1159 0 is_stmt 0 discriminator 1
 3332 0024 7A68     		ldr	r2, [r7, #4]
 3333 0026 46F22803 		movw	r3, #24616
 3334 002a C4F20203 		movt	r3, 16386
 3335 002e 9A42     		cmp	r2, r3
 3336 0030 69D0     		beq	.L112
 3337 0032 7A68     		ldr	r2, [r7, #4]
 3338 0034 46F24003 		movw	r3, #24640
 3339 0038 C4F20203 		movt	r3, 16386
 3340 003c 9A42     		cmp	r2, r3
 3341 003e 62D0     		beq	.L112
 3342 0040 7A68     		ldr	r2, [r7, #4]
 3343 0042 46F25803 		movw	r3, #24664
 3344 0046 C4F20203 		movt	r3, 16386
 3345 004a 9A42     		cmp	r2, r3
 3346 004c 5BD0     		beq	.L112
 3347 004e 7A68     		ldr	r2, [r7, #4]
 3348 0050 46F27003 		movw	r3, #24688
 3349 0054 C4F20203 		movt	r3, 16386
 3350 0058 9A42     		cmp	r2, r3
 3351 005a 54D0     		beq	.L112
 3352 005c 7A68     		ldr	r2, [r7, #4]
 3353 005e 46F28803 		movw	r3, #24712
 3354 0062 C4F20203 		movt	r3, 16386
 3355 0066 9A42     		cmp	r2, r3
 3356 0068 4DD0     		beq	.L112
 3357 006a 7A68     		ldr	r2, [r7, #4]
 3358 006c 46F2A003 		movw	r3, #24736
 3359 0070 C4F20203 		movt	r3, 16386
 3360 0074 9A42     		cmp	r2, r3
 3361 0076 46D0     		beq	.L112
 3362 0078 7A68     		ldr	r2, [r7, #4]
 3363 007a 46F2B803 		movw	r3, #24760
 3364 007e C4F20203 		movt	r3, 16386
 3365 0082 9A42     		cmp	r2, r3
 3366 0084 3FD0     		beq	.L112
 3367 0086 7A68     		ldr	r2, [r7, #4]
 3368 0088 46F21043 		movw	r3, #25616
 3369 008c C4F20203 		movt	r3, 16386
 3370 0090 9A42     		cmp	r2, r3
 3371 0092 38D0     		beq	.L112
 3372 0094 7A68     		ldr	r2, [r7, #4]
 3373 0096 46F22843 		movw	r3, #25640
 3374 009a C4F20203 		movt	r3, 16386
 3375 009e 9A42     		cmp	r2, r3
 3376 00a0 31D0     		beq	.L112
 3377 00a2 7A68     		ldr	r2, [r7, #4]
 3378 00a4 46F24043 		movw	r3, #25664
 3379 00a8 C4F20203 		movt	r3, 16386
 3380 00ac 9A42     		cmp	r2, r3
 3381 00ae 2AD0     		beq	.L112
 3382 00b0 7A68     		ldr	r2, [r7, #4]
 3383 00b2 46F25843 		movw	r3, #25688
 3384 00b6 C4F20203 		movt	r3, 16386
 3385 00ba 9A42     		cmp	r2, r3
 3386 00bc 23D0     		beq	.L112
 3387 00be 7A68     		ldr	r2, [r7, #4]
 3388 00c0 46F27043 		movw	r3, #25712
 3389 00c4 C4F20203 		movt	r3, 16386
 3390 00c8 9A42     		cmp	r2, r3
 3391 00ca 1CD0     		beq	.L112
 3392 00cc 7A68     		ldr	r2, [r7, #4]
 3393 00ce 46F28843 		movw	r3, #25736
 3394 00d2 C4F20203 		movt	r3, 16386
 3395 00d6 9A42     		cmp	r2, r3
 3396 00d8 15D0     		beq	.L112
 3397 00da 7A68     		ldr	r2, [r7, #4]
 3398 00dc 46F2A043 		movw	r3, #25760
 3399 00e0 C4F20203 		movt	r3, 16386
 3400 00e4 9A42     		cmp	r2, r3
 3401 00e6 0ED0     		beq	.L112
 3402 00e8 7A68     		ldr	r2, [r7, #4]
 3403 00ea 46F2B843 		movw	r3, #25784
 3404 00ee C4F20203 		movt	r3, 16386
 3405 00f2 9A42     		cmp	r2, r3
 3406 00f4 07D0     		beq	.L112
 3407 00f6 40F20000 		movw	r0, #:lower16:.LC0
 3408 00fa C0F20000 		movt	r0, #:upper16:.LC0
 3409 00fe 40F28741 		movw	r1, #1159
 3410 0102 FFF7FEFF 		bl	assert_failed
 3411              	.L112:
1160:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_GET_IT(DMA_IT));
 3412              		.loc 1 1160 0 is_stmt 1
 3413 0106 3A68     		ldr	r2, [r7]
 3414 0108 48F22003 		movw	r3, #32800
 3415 010c C1F20003 		movt	r3, 4096
 3416 0110 9A42     		cmp	r2, r3
 3417 0112 00F02681 		beq	.L113
 3418              		.loc 1 1160 0 is_stmt 0 discriminator 1
 3419 0116 3A68     		ldr	r2, [r7]
 3420 0118 44F21003 		movw	r3, #16400
 3421 011c C1F20003 		movt	r3, 4096
 3422 0120 9A42     		cmp	r2, r3
 3423 0122 00F01E81 		beq	.L113
 3424 0126 3A68     		ldr	r2, [r7]
 3425 0128 42F20803 		movw	r3, #8200
 3426 012c C1F20003 		movt	r3, 4096
 3427 0130 9A42     		cmp	r2, r3
 3428 0132 00F01681 		beq	.L113
 3429 0136 3A68     		ldr	r2, [r7]
 3430 0138 41F20403 		movw	r3, #4100
 3431 013c C1F20003 		movt	r3, 4096
 3432 0140 9A42     		cmp	r2, r3
 3433 0142 00F00E81 		beq	.L113
 3434 0146 3A68     		ldr	r2, [r7]
 3435 0148 0123     		movs	r3, #1
 3436 014a C9F20003 		movt	r3, 36864
 3437 014e 9A42     		cmp	r2, r3
 3438 0150 00F00781 		beq	.L113
 3439 0154 3A68     		ldr	r2, [r7]
 3440 0156 4FF40843 		mov	r3, #34816
 3441 015a C1F20003 		movt	r3, 4096
 3442 015e 9A42     		cmp	r2, r3
 3443 0160 00F0FF80 		beq	.L113
 3444 0164 3A68     		ldr	r2, [r7]
 3445 0166 4FF48843 		mov	r3, #17408
 3446 016a C1F20003 		movt	r3, 4096
 3447 016e 9A42     		cmp	r2, r3
 3448 0170 00F0F780 		beq	.L113
 3449 0174 3A68     		ldr	r2, [r7]
 3450 0176 4FF40853 		mov	r3, #8704
 3451 017a C1F20003 		movt	r3, 4096
 3452 017e 9A42     		cmp	r2, r3
 3453 0180 00F0EF80 		beq	.L113
 3454 0184 3A68     		ldr	r2, [r7]
 3455 0186 4FF48853 		mov	r3, #4352
 3456 018a C1F20003 		movt	r3, 4096
 3457 018e 9A42     		cmp	r2, r3
 3458 0190 00F0E780 		beq	.L113
 3459 0194 3A68     		ldr	r2, [r7]
 3460 0196 4023     		movs	r3, #64
 3461 0198 C9F20003 		movt	r3, 36864
 3462 019c 9A42     		cmp	r2, r3
 3463 019e 00F0E080 		beq	.L113
 3464 01a2 3A68     		ldr	r2, [r7]
 3465 01a4 4FF40043 		mov	r3, #32768
 3466 01a8 C1F22003 		movt	r3, 4128
 3467 01ac 9A42     		cmp	r2, r3
 3468 01ae 00F0D880 		beq	.L113
 3469 01b2 3A68     		ldr	r2, [r7]
 3470 01b4 4FF48043 		mov	r3, #16384
 3471 01b8 C1F21003 		movt	r3, 4112
 3472 01bc 9A42     		cmp	r2, r3
 3473 01be 00F0D080 		beq	.L113
 3474 01c2 3A68     		ldr	r2, [r7]
 3475 01c4 4FF40053 		mov	r3, #8192
 3476 01c8 C1F20803 		movt	r3, 4104
 3477 01cc 9A42     		cmp	r2, r3
 3478 01ce 00F0C880 		beq	.L113
 3479 01d2 3A68     		ldr	r2, [r7]
 3480 01d4 4FF48053 		mov	r3, #4096
 3481 01d8 C1F20403 		movt	r3, 4100
 3482 01dc 9A42     		cmp	r2, r3
 3483 01de 00F0C080 		beq	.L113
 3484 01e2 3A68     		ldr	r2, [r7]
 3485 01e4 0023     		movs	r3, #0
 3486 01e6 C9F20103 		movt	r3, 36865
 3487 01ea 9A42     		cmp	r2, r3
 3488 01ec 00F0B980 		beq	.L113
 3489 01f0 3A68     		ldr	r2, [r7]
 3490 01f2 4FF40043 		mov	r3, #32768
 3491 01f6 C1F60003 		movt	r3, 6144
 3492 01fa 9A42     		cmp	r2, r3
 3493 01fc 00F0B180 		beq	.L113
 3494 0200 3A68     		ldr	r2, [r7]
 3495 0202 4FF48043 		mov	r3, #16384
 3496 0206 C1F20043 		movt	r3, 5120
 3497 020a 9A42     		cmp	r2, r3
 3498 020c 00F0A980 		beq	.L113
 3499 0210 3A68     		ldr	r2, [r7]
 3500 0212 4FF40053 		mov	r3, #8192
 3501 0216 C1F20023 		movt	r3, 4608
 3502 021a 9A42     		cmp	r2, r3
 3503 021c 00F0A180 		beq	.L113
 3504 0220 3A68     		ldr	r2, [r7]
 3505 0222 4FF48053 		mov	r3, #4096
 3506 0226 C1F20013 		movt	r3, 4352
 3507 022a 9A42     		cmp	r2, r3
 3508 022c 00F09980 		beq	.L113
 3509 0230 3A68     		ldr	r2, [r7]
 3510 0232 0023     		movs	r3, #0
 3511 0234 C9F24003 		movt	r3, 36928
 3512 0238 9A42     		cmp	r2, r3
 3513 023a 00F09280 		beq	.L113
 3514 023e 3A68     		ldr	r2, [r7]
 3515 0240 48F22003 		movw	r3, #32800
 3516 0244 C2F20003 		movt	r3, 8192
 3517 0248 9A42     		cmp	r2, r3
 3518 024a 00F08A80 		beq	.L113
 3519 024e 3A68     		ldr	r2, [r7]
 3520 0250 44F21003 		movw	r3, #16400
 3521 0254 C2F20003 		movt	r3, 8192
 3522 0258 9A42     		cmp	r2, r3
 3523 025a 00F08280 		beq	.L113
 3524 025e 3A68     		ldr	r2, [r7]
 3525 0260 42F20803 		movw	r3, #8200
 3526 0264 C2F20003 		movt	r3, 8192
 3527 0268 9A42     		cmp	r2, r3
 3528 026a 7AD0     		beq	.L113
 3529 026c 3A68     		ldr	r2, [r7]
 3530 026e 41F20403 		movw	r3, #4100
 3531 0272 C2F20003 		movt	r3, 8192
 3532 0276 9A42     		cmp	r2, r3
 3533 0278 73D0     		beq	.L113
 3534 027a 3A68     		ldr	r2, [r7]
 3535 027c 0123     		movs	r3, #1
 3536 027e CAF20003 		movt	r3, 40960
 3537 0282 9A42     		cmp	r2, r3
 3538 0284 6DD0     		beq	.L113
 3539 0286 3A68     		ldr	r2, [r7]
 3540 0288 4FF40843 		mov	r3, #34816
 3541 028c C2F20003 		movt	r3, 8192
 3542 0290 9A42     		cmp	r2, r3
 3543 0292 66D0     		beq	.L113
 3544 0294 3A68     		ldr	r2, [r7]
 3545 0296 4FF48843 		mov	r3, #17408
 3546 029a C2F20003 		movt	r3, 8192
 3547 029e 9A42     		cmp	r2, r3
 3548 02a0 5FD0     		beq	.L113
 3549 02a2 3A68     		ldr	r2, [r7]
 3550 02a4 4FF40853 		mov	r3, #8704
 3551 02a8 C2F20003 		movt	r3, 8192
 3552 02ac 9A42     		cmp	r2, r3
 3553 02ae 58D0     		beq	.L113
 3554 02b0 3A68     		ldr	r2, [r7]
 3555 02b2 4FF48853 		mov	r3, #4352
 3556 02b6 C2F20003 		movt	r3, 8192
 3557 02ba 9A42     		cmp	r2, r3
 3558 02bc 51D0     		beq	.L113
 3559 02be 3A68     		ldr	r2, [r7]
 3560 02c0 4023     		movs	r3, #64
 3561 02c2 CAF20003 		movt	r3, 40960
 3562 02c6 9A42     		cmp	r2, r3
 3563 02c8 4BD0     		beq	.L113
 3564 02ca 3A68     		ldr	r2, [r7]
 3565 02cc 4FF40043 		mov	r3, #32768
 3566 02d0 C2F22003 		movt	r3, 8224
 3567 02d4 9A42     		cmp	r2, r3
 3568 02d6 44D0     		beq	.L113
 3569 02d8 3A68     		ldr	r2, [r7]
 3570 02da 4FF48043 		mov	r3, #16384
 3571 02de C2F21003 		movt	r3, 8208
 3572 02e2 9A42     		cmp	r2, r3
 3573 02e4 3DD0     		beq	.L113
 3574 02e6 3A68     		ldr	r2, [r7]
 3575 02e8 4FF40053 		mov	r3, #8192
 3576 02ec C2F20803 		movt	r3, 8200
 3577 02f0 9A42     		cmp	r2, r3
 3578 02f2 36D0     		beq	.L113
 3579 02f4 3A68     		ldr	r2, [r7]
 3580 02f6 4FF48053 		mov	r3, #4096
 3581 02fa C2F20403 		movt	r3, 8196
 3582 02fe 9A42     		cmp	r2, r3
 3583 0300 2FD0     		beq	.L113
 3584 0302 3A68     		ldr	r2, [r7]
 3585 0304 0023     		movs	r3, #0
 3586 0306 CAF20103 		movt	r3, 40961
 3587 030a 9A42     		cmp	r2, r3
 3588 030c 29D0     		beq	.L113
 3589 030e 3A68     		ldr	r2, [r7]
 3590 0310 4FF40043 		mov	r3, #32768
 3591 0314 C2F60003 		movt	r3, 10240
 3592 0318 9A42     		cmp	r2, r3
 3593 031a 22D0     		beq	.L113
 3594 031c 3A68     		ldr	r2, [r7]
 3595 031e 4FF48043 		mov	r3, #16384
 3596 0322 C2F20043 		movt	r3, 9216
 3597 0326 9A42     		cmp	r2, r3
 3598 0328 1BD0     		beq	.L113
 3599 032a 3A68     		ldr	r2, [r7]
 3600 032c 4FF40053 		mov	r3, #8192
 3601 0330 C2F20023 		movt	r3, 8704
 3602 0334 9A42     		cmp	r2, r3
 3603 0336 14D0     		beq	.L113
 3604 0338 3A68     		ldr	r2, [r7]
 3605 033a 4FF48053 		mov	r3, #4096
 3606 033e C2F20013 		movt	r3, 8448
 3607 0342 9A42     		cmp	r2, r3
 3608 0344 0DD0     		beq	.L113
 3609 0346 3A68     		ldr	r2, [r7]
 3610 0348 0023     		movs	r3, #0
 3611 034a CAF24003 		movt	r3, 41024
 3612 034e 9A42     		cmp	r2, r3
 3613 0350 07D0     		beq	.L113
 3614 0352 40F20000 		movw	r0, #:lower16:.LC0
 3615 0356 C0F20000 		movt	r0, #:upper16:.LC0
 3616 035a 4FF49161 		mov	r1, #1160
 3617 035e FFF7FEFF 		bl	assert_failed
 3618              	.L113:
1161:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  
1162:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Determine the DMA to which belongs the stream */
1163:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   if (DMAy_Streamx < DMA2_Stream0)
 3619              		.loc 1 1163 0 is_stmt 1
 3620 0362 7A68     		ldr	r2, [r7, #4]
 3621 0364 46F20F43 		movw	r3, #25615
 3622 0368 C4F20203 		movt	r3, 16386
 3623 036c 9A42     		cmp	r2, r3
 3624 036e 05D8     		bhi	.L114
1164:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
1165:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* DMAy_Streamx belongs to DMA1 */
1166:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMAy = DMA1; 
 3625              		.loc 1 1166 0
 3626 0370 4FF4C043 		mov	r3, #24576
 3627 0374 C4F20203 		movt	r3, 16386
 3628 0378 3B61     		str	r3, [r7, #16]
 3629 037a 04E0     		b	.L115
 3630              	.L114:
1167:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   } 
1168:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else 
1169:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
1170:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* DMAy_Streamx belongs to DMA2 */
1171:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMAy = DMA2; 
 3631              		.loc 1 1171 0
 3632 037c 4FF4C843 		mov	r3, #25600
 3633 0380 C4F20203 		movt	r3, 16386
 3634 0384 3B61     		str	r3, [r7, #16]
 3635              	.L115:
1172:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
1173:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
1174:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check if the interrupt enable bit is in the CR or FCR register */
1175:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   if ((DMA_IT & TRANSFER_IT_MASK) != (uint32_t)RESET)
 3636              		.loc 1 1175 0
 3637 0386 3B68     		ldr	r3, [r7]
 3638 0388 23F0F023 		bic	r3, r3, #-268374016
 3639 038c 23F0C313 		bic	r3, r3, #12779715
 3640 0390 002B     		cmp	r3, #0
 3641 0392 0AD0     		beq	.L116
1176:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
1177:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Get the interrupt enable position mask in CR register */
1178:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     tmpreg = (uint32_t)((DMA_IT >> 11) & TRANSFER_IT_ENABLE_MASK);   
 3642              		.loc 1 1178 0
 3643 0394 3B68     		ldr	r3, [r7]
 3644 0396 DB0A     		lsrs	r3, r3, #11
 3645 0398 03F01E03 		and	r3, r3, #30
 3646 039c FB60     		str	r3, [r7, #12]
1179:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     
1180:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Check the enable bit in CR register */
1181:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     enablestatus = (uint32_t)(DMAy_Streamx->CR & tmpreg);
 3647              		.loc 1 1181 0
 3648 039e 7B68     		ldr	r3, [r7, #4]
 3649 03a0 1A68     		ldr	r2, [r3]
 3650 03a2 FB68     		ldr	r3, [r7, #12]
 3651 03a4 1340     		ands	r3, r3, r2
 3652 03a6 BB60     		str	r3, [r7, #8]
 3653 03a8 04E0     		b	.L117
 3654              	.L116:
1182:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
1183:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else 
1184:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
1185:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Check the enable bit in FCR register */
1186:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     enablestatus = (uint32_t)(DMAy_Streamx->FCR & DMA_IT_FE); 
 3655              		.loc 1 1186 0
 3656 03aa 7B68     		ldr	r3, [r7, #4]
 3657 03ac 5B69     		ldr	r3, [r3, #20]
 3658 03ae 03F08003 		and	r3, r3, #128
 3659 03b2 BB60     		str	r3, [r7, #8]
 3660              	.L117:
1187:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
1188:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****  
1189:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check if the interrupt pending flag is in LISR or HISR */
1190:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   if ((DMA_IT & HIGH_ISR_MASK) != (uint32_t)RESET)
 3661              		.loc 1 1190 0
 3662 03b4 3B68     		ldr	r3, [r7]
 3663 03b6 03F00053 		and	r3, r3, #536870912
 3664 03ba 002B     		cmp	r3, #0
 3665 03bc 03D0     		beq	.L118
1191:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
1192:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Get DMAy HISR register value */
1193:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     tmpreg = DMAy->HISR ;
 3666              		.loc 1 1193 0
 3667 03be 3B69     		ldr	r3, [r7, #16]
 3668 03c0 5B68     		ldr	r3, [r3, #4]
 3669 03c2 FB60     		str	r3, [r7, #12]
 3670 03c4 02E0     		b	.L119
 3671              	.L118:
1194:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
1195:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else
1196:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
1197:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Get DMAy LISR register value */
1198:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     tmpreg = DMAy->LISR ;
 3672              		.loc 1 1198 0
 3673 03c6 3B69     		ldr	r3, [r7, #16]
 3674 03c8 1B68     		ldr	r3, [r3]
 3675 03ca FB60     		str	r3, [r7, #12]
 3676              	.L119:
1199:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   } 
1200:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
1201:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* mask all reserved bits */
1202:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   tmpreg &= (uint32_t)RESERVED_MASK;
 3677              		.loc 1 1202 0
 3678 03cc FB68     		ldr	r3, [r7, #12]
 3679 03ce 23F0F023 		bic	r3, r3, #-268374016
 3680 03d2 23F08213 		bic	r3, r3, #8519810
 3681 03d6 FB60     		str	r3, [r7, #12]
1203:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
1204:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check the status of the specified DMA interrupt */
1205:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   if (((tmpreg & DMA_IT) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
 3682              		.loc 1 1205 0
 3683 03d8 FA68     		ldr	r2, [r7, #12]
 3684 03da 3B68     		ldr	r3, [r7]
 3685 03dc 1340     		ands	r3, r3, r2
 3686 03de 002B     		cmp	r3, #0
 3687 03e0 05D0     		beq	.L120
 3688              		.loc 1 1205 0 is_stmt 0 discriminator 1
 3689 03e2 BB68     		ldr	r3, [r7, #8]
 3690 03e4 002B     		cmp	r3, #0
 3691 03e6 02D0     		beq	.L120
1206:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
1207:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* DMA_IT is set */
1208:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     bitstatus = SET;
 3692              		.loc 1 1208 0 is_stmt 1
 3693 03e8 0123     		movs	r3, #1
 3694 03ea FB75     		strb	r3, [r7, #23]
 3695 03ec 01E0     		b	.L121
 3696              	.L120:
1209:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
1210:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else
1211:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
1212:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* DMA_IT is reset */
1213:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     bitstatus = RESET;
 3697              		.loc 1 1213 0
 3698 03ee 0023     		movs	r3, #0
 3699 03f0 FB75     		strb	r3, [r7, #23]
 3700              	.L121:
1214:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
1215:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
1216:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Return the DMA_IT status */
1217:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   return  bitstatus;
 3701              		.loc 1 1217 0
 3702 03f2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1218:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** }
 3703              		.loc 1 1218 0
 3704 03f4 1846     		mov	r0, r3
 3705 03f6 1837     		adds	r7, r7, #24
 3706 03f8 BD46     		mov	sp, r7
 3707              		@ sp needed
 3708 03fa 80BD     		pop	{r7, pc}
 3709              		.cfi_endproc
 3710              	.LFE127:
 3712              		.section	.text.DMA_ClearITPendingBit,"ax",%progbits
 3713              		.align	2
 3714              		.global	DMA_ClearITPendingBit
 3715              		.thumb
 3716              		.thumb_func
 3718              	DMA_ClearITPendingBit:
 3719              	.LFB128:
1219:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
1220:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** /**
1221:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @brief  Clears the DMAy Streamx's interrupt pending bits.
1222:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMAy_Streamx: where y can be 1 or 2 to select the DMA and x can be 0
1223:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          to 7 to select the DMA Stream.
1224:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @param  DMA_IT: specifies the DMA interrupt pending bit to clear.
1225:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *          This parameter can be any combination of the following values:
1226:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_IT_TCIFx:  Streamx transfer complete interrupt
1227:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_IT_HTIFx:  Streamx half transfer complete interrupt
1228:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_IT_TEIFx:  Streamx transfer error interrupt
1229:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_IT_DMEIFx: Streamx direct mode error interrupt
1230:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *            @arg DMA_IT_FEIFx:  Streamx FIFO error interrupt
1231:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   *         Where x can be 0 to 7 to select the DMA Stream.
1232:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   * @retval None
1233:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   */
1234:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** void DMA_ClearITPendingBit(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_IT)
1235:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** {
 3720              		.loc 1 1235 0
 3721              		.cfi_startproc
 3722              		@ args = 0, pretend = 0, frame = 16
 3723              		@ frame_needed = 1, uses_anonymous_args = 0
 3724 0000 80B5     		push	{r7, lr}
 3725              	.LCFI54:
 3726              		.cfi_def_cfa_offset 8
 3727              		.cfi_offset 7, -8
 3728              		.cfi_offset 14, -4
 3729 0002 84B0     		sub	sp, sp, #16
 3730              	.LCFI55:
 3731              		.cfi_def_cfa_offset 24
 3732 0004 00AF     		add	r7, sp, #0
 3733              	.LCFI56:
 3734              		.cfi_def_cfa_register 7
 3735 0006 7860     		str	r0, [r7, #4]
 3736 0008 3960     		str	r1, [r7]
1236:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   DMA_TypeDef* DMAy;
1237:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
1238:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check the parameters */
1239:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Streamx));
 3737              		.loc 1 1239 0
 3738 000a 7A68     		ldr	r2, [r7, #4]
 3739 000c 46F21003 		movw	r3, #24592
 3740 0010 C4F20203 		movt	r3, 16386
 3741 0014 9A42     		cmp	r2, r3
 3742 0016 70D0     		beq	.L124
 3743              		.loc 1 1239 0 is_stmt 0 discriminator 1
 3744 0018 7A68     		ldr	r2, [r7, #4]
 3745 001a 46F22803 		movw	r3, #24616
 3746 001e C4F20203 		movt	r3, 16386
 3747 0022 9A42     		cmp	r2, r3
 3748 0024 69D0     		beq	.L124
 3749 0026 7A68     		ldr	r2, [r7, #4]
 3750 0028 46F24003 		movw	r3, #24640
 3751 002c C4F20203 		movt	r3, 16386
 3752 0030 9A42     		cmp	r2, r3
 3753 0032 62D0     		beq	.L124
 3754 0034 7A68     		ldr	r2, [r7, #4]
 3755 0036 46F25803 		movw	r3, #24664
 3756 003a C4F20203 		movt	r3, 16386
 3757 003e 9A42     		cmp	r2, r3
 3758 0040 5BD0     		beq	.L124
 3759 0042 7A68     		ldr	r2, [r7, #4]
 3760 0044 46F27003 		movw	r3, #24688
 3761 0048 C4F20203 		movt	r3, 16386
 3762 004c 9A42     		cmp	r2, r3
 3763 004e 54D0     		beq	.L124
 3764 0050 7A68     		ldr	r2, [r7, #4]
 3765 0052 46F28803 		movw	r3, #24712
 3766 0056 C4F20203 		movt	r3, 16386
 3767 005a 9A42     		cmp	r2, r3
 3768 005c 4DD0     		beq	.L124
 3769 005e 7A68     		ldr	r2, [r7, #4]
 3770 0060 46F2A003 		movw	r3, #24736
 3771 0064 C4F20203 		movt	r3, 16386
 3772 0068 9A42     		cmp	r2, r3
 3773 006a 46D0     		beq	.L124
 3774 006c 7A68     		ldr	r2, [r7, #4]
 3775 006e 46F2B803 		movw	r3, #24760
 3776 0072 C4F20203 		movt	r3, 16386
 3777 0076 9A42     		cmp	r2, r3
 3778 0078 3FD0     		beq	.L124
 3779 007a 7A68     		ldr	r2, [r7, #4]
 3780 007c 46F21043 		movw	r3, #25616
 3781 0080 C4F20203 		movt	r3, 16386
 3782 0084 9A42     		cmp	r2, r3
 3783 0086 38D0     		beq	.L124
 3784 0088 7A68     		ldr	r2, [r7, #4]
 3785 008a 46F22843 		movw	r3, #25640
 3786 008e C4F20203 		movt	r3, 16386
 3787 0092 9A42     		cmp	r2, r3
 3788 0094 31D0     		beq	.L124
 3789 0096 7A68     		ldr	r2, [r7, #4]
 3790 0098 46F24043 		movw	r3, #25664
 3791 009c C4F20203 		movt	r3, 16386
 3792 00a0 9A42     		cmp	r2, r3
 3793 00a2 2AD0     		beq	.L124
 3794 00a4 7A68     		ldr	r2, [r7, #4]
 3795 00a6 46F25843 		movw	r3, #25688
 3796 00aa C4F20203 		movt	r3, 16386
 3797 00ae 9A42     		cmp	r2, r3
 3798 00b0 23D0     		beq	.L124
 3799 00b2 7A68     		ldr	r2, [r7, #4]
 3800 00b4 46F27043 		movw	r3, #25712
 3801 00b8 C4F20203 		movt	r3, 16386
 3802 00bc 9A42     		cmp	r2, r3
 3803 00be 1CD0     		beq	.L124
 3804 00c0 7A68     		ldr	r2, [r7, #4]
 3805 00c2 46F28843 		movw	r3, #25736
 3806 00c6 C4F20203 		movt	r3, 16386
 3807 00ca 9A42     		cmp	r2, r3
 3808 00cc 15D0     		beq	.L124
 3809 00ce 7A68     		ldr	r2, [r7, #4]
 3810 00d0 46F2A043 		movw	r3, #25760
 3811 00d4 C4F20203 		movt	r3, 16386
 3812 00d8 9A42     		cmp	r2, r3
 3813 00da 0ED0     		beq	.L124
 3814 00dc 7A68     		ldr	r2, [r7, #4]
 3815 00de 46F2B843 		movw	r3, #25784
 3816 00e2 C4F20203 		movt	r3, 16386
 3817 00e6 9A42     		cmp	r2, r3
 3818 00e8 07D0     		beq	.L124
 3819 00ea 40F20000 		movw	r0, #:lower16:.LC0
 3820 00ee C0F20000 		movt	r0, #:upper16:.LC0
 3821 00f2 40F2D741 		movw	r1, #1239
 3822 00f6 FFF7FEFF 		bl	assert_failed
 3823              	.L124:
1240:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   assert_param(IS_DMA_CLEAR_IT(DMA_IT));
 3824              		.loc 1 1240 0 is_stmt 1
 3825 00fa 3B68     		ldr	r3, [r7]
 3826 00fc 03F04053 		and	r3, r3, #805306368
 3827 0100 B3F1405F 		cmp	r3, #805306368
 3828 0104 0ED0     		beq	.L125
 3829              		.loc 1 1240 0 is_stmt 0 discriminator 2
 3830 0106 3B68     		ldr	r3, [r7]
 3831 0108 03F04053 		and	r3, r3, #805306368
 3832 010c 002B     		cmp	r3, #0
 3833 010e 09D0     		beq	.L125
 3834              		.loc 1 1240 0 discriminator 1
 3835 0110 3B68     		ldr	r3, [r7]
 3836 0112 002B     		cmp	r3, #0
 3837 0114 06D0     		beq	.L125
 3838 0116 3A68     		ldr	r2, [r7]
 3839 0118 8223     		movs	r3, #130
 3840 011a C4F28203 		movt	r3, 16514
 3841 011e 1340     		ands	r3, r3, r2
 3842 0120 002B     		cmp	r3, #0
 3843 0122 07D0     		beq	.L126
 3844              	.L125:
 3845 0124 40F20000 		movw	r0, #:lower16:.LC0
 3846 0128 C0F20000 		movt	r0, #:upper16:.LC0
 3847 012c 4FF49B61 		mov	r1, #1240
 3848 0130 FFF7FEFF 		bl	assert_failed
 3849              	.L126:
1241:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
1242:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Determine the DMA to which belongs the stream */
1243:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   if (DMAy_Streamx < DMA2_Stream0)
 3850              		.loc 1 1243 0 is_stmt 1
 3851 0134 7A68     		ldr	r2, [r7, #4]
 3852 0136 46F20F43 		movw	r3, #25615
 3853 013a C4F20203 		movt	r3, 16386
 3854 013e 9A42     		cmp	r2, r3
 3855 0140 05D8     		bhi	.L127
1244:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
1245:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* DMAy_Streamx belongs to DMA1 */
1246:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMAy = DMA1; 
 3856              		.loc 1 1246 0
 3857 0142 4FF4C043 		mov	r3, #24576
 3858 0146 C4F20203 		movt	r3, 16386
 3859 014a FB60     		str	r3, [r7, #12]
 3860 014c 04E0     		b	.L128
 3861              	.L127:
1247:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   } 
1248:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else 
1249:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
1250:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* DMAy_Streamx belongs to DMA2 */
1251:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMAy = DMA2; 
 3862              		.loc 1 1251 0
 3863 014e 4FF4C843 		mov	r3, #25600
 3864 0152 C4F20203 		movt	r3, 16386
 3865 0156 FB60     		str	r3, [r7, #12]
 3866              	.L128:
1252:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
1253:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** 
1254:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   /* Check if LIFCR or HIFCR register is targeted */
1255:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   if ((DMA_IT & HIGH_ISR_MASK) != (uint32_t)RESET)
 3867              		.loc 1 1255 0
 3868 0158 3B68     		ldr	r3, [r7]
 3869 015a 03F00053 		and	r3, r3, #536870912
 3870 015e 002B     		cmp	r3, #0
 3871 0160 07D0     		beq	.L129
1256:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
1257:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Set DMAy HIFCR register clear interrupt bits */
1258:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMAy->HIFCR = (uint32_t)(DMA_IT & RESERVED_MASK);
 3872              		.loc 1 1258 0
 3873 0162 3B68     		ldr	r3, [r7]
 3874 0164 23F0F023 		bic	r3, r3, #-268374016
 3875 0168 23F08213 		bic	r3, r3, #8519810
 3876 016c FA68     		ldr	r2, [r7, #12]
 3877 016e D360     		str	r3, [r2, #12]
 3878 0170 06E0     		b	.L123
 3879              	.L129:
1259:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }
1260:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   else 
1261:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   {
1262:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     /* Set DMAy LIFCR register clear interrupt bits */
1263:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****     DMAy->LIFCR = (uint32_t)(DMA_IT & RESERVED_MASK);
 3880              		.loc 1 1263 0
 3881 0172 3B68     		ldr	r3, [r7]
 3882 0174 23F0F023 		bic	r3, r3, #-268374016
 3883 0178 23F08213 		bic	r3, r3, #8519810
 3884 017c FA68     		ldr	r2, [r7, #12]
 3885 017e 9360     		str	r3, [r2, #8]
 3886              	.L123:
1264:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c ****   }   
1265:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c **** }
 3887              		.loc 1 1265 0
 3888 0180 1037     		adds	r7, r7, #16
 3889 0182 BD46     		mov	sp, r7
 3890              		@ sp needed
 3891 0184 80BD     		pop	{r7, pc}
 3892              		.cfi_endproc
 3893              	.LFE128:
 3895 0186 00BF     		.text
 3896              	.Letext0:
 3897              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 3898              		.file 3 "/usr/include/newlib/stdint.h"
 3899              		.file 4 "lib/chip/CMSIS/ST/STM32F4xx/Include/stm32f4xx.h"
 3900              		.file 5 "lib/chip/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
 3901              		.file 6 "lib/chip/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_dma.c
     /tmp/ccJZ3nFQ.s:20     .rodata:00000000 $d
     /tmp/ccJZ3nFQ.s:21     .rodata:00000000 .LC0
     /tmp/ccJZ3nFQ.s:25     .text.DMA_DeInit:00000000 $t
     /tmp/ccJZ3nFQ.s:30     .text.DMA_DeInit:00000000 DMA_DeInit
     /tmp/ccJZ3nFQ.s:388    .text.DMA_Init:00000000 $t
     /tmp/ccJZ3nFQ.s:393    .text.DMA_Init:00000000 DMA_Init
     /tmp/ccJZ3nFQ.s:872    .text.DMA_StructInit:00000000 $t
     /tmp/ccJZ3nFQ.s:877    .text.DMA_StructInit:00000000 DMA_StructInit
     /tmp/ccJZ3nFQ.s:965    .text.DMA_Cmd:00000000 $t
     /tmp/ccJZ3nFQ.s:970    .text.DMA_Cmd:00000000 DMA_Cmd
     /tmp/ccJZ3nFQ.s:1118   .text.DMA_PeriphIncOffsetSizeConfig:00000000 $t
     /tmp/ccJZ3nFQ.s:1123   .text.DMA_PeriphIncOffsetSizeConfig:00000000 DMA_PeriphIncOffsetSizeConfig
     /tmp/ccJZ3nFQ.s:1270   .text.DMA_FlowControllerConfig:00000000 $t
     /tmp/ccJZ3nFQ.s:1275   .text.DMA_FlowControllerConfig:00000000 DMA_FlowControllerConfig
     /tmp/ccJZ3nFQ.s:1422   .text.DMA_SetCurrDataCounter:00000000 $t
     /tmp/ccJZ3nFQ.s:1427   .text.DMA_SetCurrDataCounter:00000000 DMA_SetCurrDataCounter
     /tmp/ccJZ3nFQ.s:1547   .text.DMA_GetCurrDataCounter:00000000 $t
     /tmp/ccJZ3nFQ.s:1552   .text.DMA_GetCurrDataCounter:00000000 DMA_GetCurrDataCounter
     /tmp/ccJZ3nFQ.s:1671   .text.DMA_DoubleBufferModeConfig:00000000 $t
     /tmp/ccJZ3nFQ.s:1676   .text.DMA_DoubleBufferModeConfig:00000000 DMA_DoubleBufferModeConfig
     /tmp/ccJZ3nFQ.s:1828   .text.DMA_DoubleBufferModeCmd:00000000 $t
     /tmp/ccJZ3nFQ.s:1833   .text.DMA_DoubleBufferModeCmd:00000000 DMA_DoubleBufferModeCmd
     /tmp/ccJZ3nFQ.s:1981   .text.DMA_MemoryTargetConfig:00000000 $t
     /tmp/ccJZ3nFQ.s:1986   .text.DMA_MemoryTargetConfig:00000000 DMA_MemoryTargetConfig
     /tmp/ccJZ3nFQ.s:2130   .text.DMA_GetCurrentMemoryTarget:00000000 $t
     /tmp/ccJZ3nFQ.s:2135   .text.DMA_GetCurrentMemoryTarget:00000000 DMA_GetCurrentMemoryTarget
     /tmp/ccJZ3nFQ.s:2270   .text.DMA_GetCmdStatus:00000000 $t
     /tmp/ccJZ3nFQ.s:2275   .text.DMA_GetCmdStatus:00000000 DMA_GetCmdStatus
     /tmp/ccJZ3nFQ.s:2410   .text.DMA_GetFIFOStatus:00000000 $t
     /tmp/ccJZ3nFQ.s:2415   .text.DMA_GetFIFOStatus:00000000 DMA_GetFIFOStatus
     /tmp/ccJZ3nFQ.s:2540   .text.DMA_GetFlagStatus:00000000 $t
     /tmp/ccJZ3nFQ.s:2545   .text.DMA_GetFlagStatus:00000000 DMA_GetFlagStatus
     /tmp/ccJZ3nFQ.s:2907   .text.DMA_ClearFlag:00000000 $t
     /tmp/ccJZ3nFQ.s:2912   .text.DMA_ClearFlag:00000000 DMA_ClearFlag
     /tmp/ccJZ3nFQ.s:3090   .text.DMA_ITConfig:00000000 $t
     /tmp/ccJZ3nFQ.s:3095   .text.DMA_ITConfig:00000000 DMA_ITConfig
     /tmp/ccJZ3nFQ.s:3293   .text.DMA_GetITStatus:00000000 $t
     /tmp/ccJZ3nFQ.s:3298   .text.DMA_GetITStatus:00000000 DMA_GetITStatus
     /tmp/ccJZ3nFQ.s:3713   .text.DMA_ClearITPendingBit:00000000 $t
     /tmp/ccJZ3nFQ.s:3718   .text.DMA_ClearITPendingBit:00000000 DMA_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
assert_failed
