   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_adc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	ADC_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	ADC_DeInit:
  26              	.LFB110:
  27              		.file 1 "lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c"
   1:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
   2:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ******************************************************************************
   3:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @file    stm32f4xx_adc.c
   4:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @author  MCD Application Team
   5:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @version V1.0.0
   6:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @date    30-September-2011
   7:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC) peripheral:
   9:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *           - Initialization and Configuration (in addition to ADC multi mode 
  10:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *             selection)
  11:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *           - Analog Watchdog configuration
  12:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *           - Temperature Sensor & Vrefint (Voltage Reference internal) & VBAT
  13:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *             management 
  14:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *           - Regular Channels Configuration
  15:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *           - Regular Channels DMA Configuration
  16:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *           - Injected channels Configuration
  17:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *           - Interrupts and flags management
  18:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         
  19:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *  @verbatim
  20:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *
  21:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          ===================================================================
  22:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *                                   How to use this driver
  23:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          ===================================================================
  24:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
  25:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          1.  Enable the ADC interface clock using 
  26:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *                  RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADCx, ENABLE); 
  27:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *     
  28:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          2. ADC pins configuration
  29:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *               - Enable the clock for the ADC GPIOs using the following function:
  30:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *                   RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);   
  31:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *                - Configure these ADC pins in analog mode using GPIO_Init();  
  32:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *
  33:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          3. Configure the ADC Prescaler, conversion resolution and data 
  34:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *              alignment using the ADC_Init() function.
  35:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          4. Activate the ADC peripheral using ADC_Cmd() function.
  36:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *
  37:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          Regular channels group configuration
  38:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          ====================================    
  39:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            - To configure the ADC regular channels group features, use 
  40:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *              ADC_Init() and ADC_RegularChannelConfig() functions.
  41:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            - To activate the continuous mode, use the ADC_continuousModeCmd()
  42:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *              function.
  43:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            - To configurate and activate the Discontinuous mode, use the 
  44:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *              ADC_DiscModeChannelCountConfig() and ADC_DiscModeCmd() functions.
  45:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            - To read the ADC converted values, use the ADC_GetConversionValue()
  46:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *              function.
  47:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *
  48:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          Multi mode ADCs Regular channels configuration
  49:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          ===============================================
  50:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            - Refer to "Regular channels group configuration" description to
  51:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *              configure the ADC1, ADC2 and ADC3 regular channels.        
  52:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            - Select the Multi mode ADC regular channels features (dual or 
  53:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *              triple mode) using ADC_CommonInit() function and configure 
  54:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *              the DMA mode using ADC_MultiModeDMARequestAfterLastTransferCmd() 
  55:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *              functions.        
  56:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            - Read the ADCs converted values using the 
  57:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *              ADC_GetMultiModeConversionValue() function.
  58:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *
  59:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          DMA for Regular channels group features configuration
  60:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          ====================================================== 
  61:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *           - To enable the DMA mode for regular channels group, use the 
  62:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *             ADC_DMACmd() function.
  63:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *           - To enable the generation of DMA requests continuously at the end
  64:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *             of the last DMA transfer, use the ADC_DMARequestAfterLastTransferCmd() 
  65:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *             function.
  66:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *
  67:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          Injected channels group configuration
  68:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          =====================================    
  69:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            - To configure the ADC Injected channels group features, use 
  70:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *              ADC_InjectedChannelConfig() and  ADC_InjectedSequencerLengthConfig()
  71:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *              functions.
  72:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            - To activate the continuous mode, use the ADC_continuousModeCmd()
  73:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *              function.
  74:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            - To activate the Injected Discontinuous mode, use the 
  75:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *              ADC_InjectedDiscModeCmd() function.  
  76:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            - To activate the AutoInjected mode, use the ADC_AutoInjectedConvCmd() 
  77:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *              function.        
  78:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            - To read the ADC converted values, use the ADC_GetInjectedConversionValue() 
  79:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *              function.
  80:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *
  81:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *  @endverbatim
  82:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *
  83:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ******************************************************************************
  84:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @attention
  85:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *
  86:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  87:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  88:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  89:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  90:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  91:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  92:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *
  93:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  94:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ******************************************************************************  
  95:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */ 
  96:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
  97:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* Includes ------------------------------------------------------------------*/
  98:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #include "stm32f4xx_adc.h"
  99:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #include "stm32f4xx_rcc.h"
 100:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 101:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 102:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @{
 103:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 104:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 105:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /** @defgroup ADC 
 106:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief ADC driver modules
 107:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @{
 108:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */ 
 109:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 110:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* Private typedef -----------------------------------------------------------*/
 111:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* Private define ------------------------------------------------------------*/ 
 112:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 113:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC DISCNUM mask */
 114:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define CR1_DISCNUM_RESET         ((uint32_t)0xFFFF1FFF)
 115:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 116:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC AWDCH mask */
 117:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define CR1_AWDCH_RESET           ((uint32_t)0xFFFFFFE0)   
 118:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 119:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC Analog watchdog enable mode mask */
 120:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define CR1_AWDMode_RESET         ((uint32_t)0xFF3FFDFF)   
 121:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 122:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* CR1 register Mask */
 123:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define CR1_CLEAR_MASK            ((uint32_t)0xFCFFFEFF)
 124:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 125:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC EXTEN mask */
 126:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define CR2_EXTEN_RESET           ((uint32_t)0xCFFFFFFF)  
 127:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 128:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC JEXTEN mask */
 129:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define CR2_JEXTEN_RESET          ((uint32_t)0xFFCFFFFF)  
 130:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 131:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC JEXTSEL mask */
 132:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define CR2_JEXTSEL_RESET         ((uint32_t)0xFFF0FFFF)  
 133:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 134:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* CR2 register Mask */
 135:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define CR2_CLEAR_MASK            ((uint32_t)0xC0FFF7FD)
 136:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 137:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC SQx mask */
 138:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define SQR3_SQ_SET               ((uint32_t)0x0000001F)  
 139:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define SQR2_SQ_SET               ((uint32_t)0x0000001F)  
 140:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define SQR1_SQ_SET               ((uint32_t)0x0000001F)  
 141:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 142:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC L Mask */
 143:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define SQR1_L_RESET              ((uint32_t)0xFF0FFFFF) 
 144:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 145:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC JSQx mask */
 146:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define JSQR_JSQ_SET              ((uint32_t)0x0000001F) 
 147:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 148:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC JL mask */
 149:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define JSQR_JL_SET               ((uint32_t)0x00300000) 
 150:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define JSQR_JL_RESET             ((uint32_t)0xFFCFFFFF) 
 151:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 152:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC SMPx mask */
 153:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define SMPR1_SMP_SET             ((uint32_t)0x00000007)  
 154:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define SMPR2_SMP_SET             ((uint32_t)0x00000007) 
 155:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 156:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC JDRx registers offset */
 157:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define JDR_OFFSET                ((uint8_t)0x28) 
 158:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 159:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC CDR register base address */
 160:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define CDR_ADDRESS               ((uint32_t)0x40012308)   
 161:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 162:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC CCR register Mask */
 163:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define CR_CLEAR_MASK             ((uint32_t)0xFFFC30E0)  
 164:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 165:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* Private macro -------------------------------------------------------------*/
 166:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* Private variables ---------------------------------------------------------*/
 167:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* Private function prototypes -----------------------------------------------*/
 168:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* Private functions ---------------------------------------------------------*/
 169:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 170:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /** @defgroup ADC_Private_Functions
 171:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @{
 172:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */ 
 173:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 174:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /** @defgroup ADC_Group1 Initialization and Configuration functions
 175:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *  @brief    Initialization and Configuration functions 
 176:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *
 177:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @verbatim    
 178:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================
 179:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                       Initialization and Configuration functions
 180:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================  
 181:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   This section provides functions allowing to:
 182:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****    - Initialize and configure the ADC Prescaler
 183:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****    - ADC Conversion Resolution (12bit..6bit)
 184:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****    - Scan Conversion Mode (multichannels or one channel) for regular group
 185:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****    - ADC Continuous Conversion Mode (Continuous or Single conversion) for 
 186:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      regular group
 187:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****    - External trigger Edge and source of regular group, 
 188:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****    - Converted data alignment (left or right)
 189:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****    - The number of ADC conversions that will be done using the sequencer for 
 190:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      regular channel group
 191:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****    - Multi ADC mode selection
 192:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****    - Direct memory access mode selection for multi ADC mode  
 193:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****    - Delay between 2 sampling phases (used in dual or triple interleaved modes)
 194:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****    - Enable or disable the ADC peripheral
 195:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****    
 196:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @endverbatim
 197:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @{
 198:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 199:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 200:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 201:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Deinitializes all ADCs peripherals registers to their default reset 
 202:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         values.
 203:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  None
 204:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 205:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 206:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_DeInit(void)
 207:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
  28              		.loc 1 207 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
 208:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Enable all ADCs reset state */
 209:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC, ENABLE);
  40              		.loc 1 209 0
  41 0004 4FF48070 		mov	r0, #256
  42 0008 0121     		movs	r1, #1
  43 000a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 210:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 211:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Release all ADCs from reset state */
 212:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC, DISABLE);
  44              		.loc 1 212 0
  45 000e 4FF48070 		mov	r0, #256
  46 0012 0021     		movs	r1, #0
  47 0014 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 213:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
  48              		.loc 1 213 0
  49 0018 80BD     		pop	{r7, pc}
  50              		.cfi_endproc
  51              	.LFE110:
  53 001a 00BF     		.section	.rodata
  54              		.align	2
  55              	.LC0:
  56 0000 6C69622F 		.ascii	"lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_a"
  56      63686970 
  56      2F53544D 
  56      33324634 
  56      78785F53 
  57 0033 64632E63 		.ascii	"dc.c\000"
  57      00
  58              		.section	.text.ADC_Init,"ax",%progbits
  59              		.align	2
  60              		.global	ADC_Init
  61              		.thumb
  62              		.thumb_func
  64              	ADC_Init:
  65              	.LFB111:
 214:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 215:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 216:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
 217:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         in the ADC_InitStruct.
 218:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @note   This function is used to configure the global features of the ADC ( 
 219:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         Resolution and Data Alignment), however, the rest of the configuration
 220:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         parameters are specific to the regular channels group (scan mode 
 221:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         activation, continuous mode activation, External trigger source and 
 222:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         edge, number of conversion in the regular channels group sequencer).  
 223:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 224:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_InitStruct: pointer to an ADC_InitTypeDef structure that contains
 225:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         the configuration information for the specified ADC peripheral.
 226:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 227:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 228:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_Init(ADC_TypeDef* ADCx, ADC_InitTypeDef* ADC_InitStruct)
 229:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
  66              		.loc 1 229 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 16
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70 0000 80B5     		push	{r7, lr}
  71              	.LCFI2:
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 7, -8
  74              		.cfi_offset 14, -4
  75 0002 84B0     		sub	sp, sp, #16
  76              	.LCFI3:
  77              		.cfi_def_cfa_offset 24
  78 0004 00AF     		add	r7, sp, #0
  79              	.LCFI4:
  80              		.cfi_def_cfa_register 7
  81 0006 7860     		str	r0, [r7, #4]
  82 0008 3960     		str	r1, [r7]
 230:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0;
  83              		.loc 1 230 0
  84 000a 0023     		movs	r3, #0
  85 000c FB60     		str	r3, [r7, #12]
 231:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint8_t tmpreg2 = 0;
  86              		.loc 1 231 0
  87 000e 0023     		movs	r3, #0
  88 0010 FB72     		strb	r3, [r7, #11]
 232:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 233:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
  89              		.loc 1 233 0
  90 0012 7A68     		ldr	r2, [r7, #4]
  91 0014 4FF40053 		mov	r3, #8192
  92 0018 C4F20103 		movt	r3, 16385
  93 001c 9A42     		cmp	r2, r3
  94 001e 14D0     		beq	.L3
  95              		.loc 1 233 0 is_stmt 0 discriminator 1
  96 0020 7A68     		ldr	r2, [r7, #4]
  97 0022 4FF40453 		mov	r3, #8448
  98 0026 C4F20103 		movt	r3, 16385
  99 002a 9A42     		cmp	r2, r3
 100 002c 0DD0     		beq	.L3
 101 002e 7A68     		ldr	r2, [r7, #4]
 102 0030 4FF40853 		mov	r3, #8704
 103 0034 C4F20103 		movt	r3, 16385
 104 0038 9A42     		cmp	r2, r3
 105 003a 06D0     		beq	.L3
 106 003c 40F20000 		movw	r0, #:lower16:.LC0
 107 0040 C0F20000 		movt	r0, #:upper16:.LC0
 108 0044 E921     		movs	r1, #233
 109 0046 FFF7FEFF 		bl	assert_failed
 110              	.L3:
 234:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_RESOLUTION(ADC_InitStruct->ADC_Resolution)); 
 111              		.loc 1 234 0 is_stmt 1
 112 004a 3B68     		ldr	r3, [r7]
 113 004c 1B68     		ldr	r3, [r3]
 114 004e 002B     		cmp	r3, #0
 115 0050 15D0     		beq	.L4
 116              		.loc 1 234 0 is_stmt 0 discriminator 1
 117 0052 3B68     		ldr	r3, [r7]
 118 0054 1B68     		ldr	r3, [r3]
 119 0056 B3F1807F 		cmp	r3, #16777216
 120 005a 10D0     		beq	.L4
 121 005c 3B68     		ldr	r3, [r7]
 122 005e 1B68     		ldr	r3, [r3]
 123 0060 B3F1007F 		cmp	r3, #33554432
 124 0064 0BD0     		beq	.L4
 125 0066 3B68     		ldr	r3, [r7]
 126 0068 1B68     		ldr	r3, [r3]
 127 006a B3F1407F 		cmp	r3, #50331648
 128 006e 06D0     		beq	.L4
 129 0070 40F20000 		movw	r0, #:lower16:.LC0
 130 0074 C0F20000 		movt	r0, #:upper16:.LC0
 131 0078 EA21     		movs	r1, #234
 132 007a FFF7FEFF 		bl	assert_failed
 133              	.L4:
 235:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ScanConvMode));
 134              		.loc 1 235 0 is_stmt 1
 135 007e 3B68     		ldr	r3, [r7]
 136 0080 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 137 0082 002B     		cmp	r3, #0
 138 0084 0AD0     		beq	.L5
 139              		.loc 1 235 0 is_stmt 0 discriminator 1
 140 0086 3B68     		ldr	r3, [r7]
 141 0088 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 142 008a 012B     		cmp	r3, #1
 143 008c 06D0     		beq	.L5
 144 008e 40F20000 		movw	r0, #:lower16:.LC0
 145 0092 C0F20000 		movt	r0, #:upper16:.LC0
 146 0096 EB21     		movs	r1, #235
 147 0098 FFF7FEFF 		bl	assert_failed
 148              	.L5:
 236:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ContinuousConvMode)); 
 149              		.loc 1 236 0 is_stmt 1
 150 009c 3B68     		ldr	r3, [r7]
 151 009e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 152 00a0 002B     		cmp	r3, #0
 153 00a2 0AD0     		beq	.L6
 154              		.loc 1 236 0 is_stmt 0 discriminator 1
 155 00a4 3B68     		ldr	r3, [r7]
 156 00a6 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 157 00a8 012B     		cmp	r3, #1
 158 00aa 06D0     		beq	.L6
 159 00ac 40F20000 		movw	r0, #:lower16:.LC0
 160 00b0 C0F20000 		movt	r0, #:upper16:.LC0
 161 00b4 EC21     		movs	r1, #236
 162 00b6 FFF7FEFF 		bl	assert_failed
 163              	.L6:
 237:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(ADC_InitStruct->ADC_ExternalTrigConvEdge)); 
 164              		.loc 1 237 0 is_stmt 1
 165 00ba 3B68     		ldr	r3, [r7]
 166 00bc 9B68     		ldr	r3, [r3, #8]
 167 00be 002B     		cmp	r3, #0
 168 00c0 15D0     		beq	.L7
 169              		.loc 1 237 0 is_stmt 0 discriminator 1
 170 00c2 3B68     		ldr	r3, [r7]
 171 00c4 9B68     		ldr	r3, [r3, #8]
 172 00c6 B3F1805F 		cmp	r3, #268435456
 173 00ca 10D0     		beq	.L7
 174 00cc 3B68     		ldr	r3, [r7]
 175 00ce 9B68     		ldr	r3, [r3, #8]
 176 00d0 B3F1005F 		cmp	r3, #536870912
 177 00d4 0BD0     		beq	.L7
 178 00d6 3B68     		ldr	r3, [r7]
 179 00d8 9B68     		ldr	r3, [r3, #8]
 180 00da B3F1405F 		cmp	r3, #805306368
 181 00de 06D0     		beq	.L7
 182 00e0 40F20000 		movw	r0, #:lower16:.LC0
 183 00e4 C0F20000 		movt	r0, #:upper16:.LC0
 184 00e8 ED21     		movs	r1, #237
 185 00ea FFF7FEFF 		bl	assert_failed
 186              	.L7:
 238:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_EXT_TRIG(ADC_InitStruct->ADC_ExternalTrigConv));    
 187              		.loc 1 238 0 is_stmt 1
 188 00ee 3B68     		ldr	r3, [r7]
 189 00f0 DB68     		ldr	r3, [r3, #12]
 190 00f2 002B     		cmp	r3, #0
 191 00f4 51D0     		beq	.L8
 192              		.loc 1 238 0 is_stmt 0 discriminator 1
 193 00f6 3B68     		ldr	r3, [r7]
 194 00f8 DB68     		ldr	r3, [r3, #12]
 195 00fa B3F1807F 		cmp	r3, #16777216
 196 00fe 4CD0     		beq	.L8
 197 0100 3B68     		ldr	r3, [r7]
 198 0102 DB68     		ldr	r3, [r3, #12]
 199 0104 B3F1007F 		cmp	r3, #33554432
 200 0108 47D0     		beq	.L8
 201 010a 3B68     		ldr	r3, [r7]
 202 010c DB68     		ldr	r3, [r3, #12]
 203 010e B3F1407F 		cmp	r3, #50331648
 204 0112 42D0     		beq	.L8
 205 0114 3B68     		ldr	r3, [r7]
 206 0116 DB68     		ldr	r3, [r3, #12]
 207 0118 B3F1806F 		cmp	r3, #67108864
 208 011c 3DD0     		beq	.L8
 209 011e 3B68     		ldr	r3, [r7]
 210 0120 DB68     		ldr	r3, [r3, #12]
 211 0122 B3F1A06F 		cmp	r3, #83886080
 212 0126 38D0     		beq	.L8
 213 0128 3B68     		ldr	r3, [r7]
 214 012a DB68     		ldr	r3, [r3, #12]
 215 012c B3F1C06F 		cmp	r3, #100663296
 216 0130 33D0     		beq	.L8
 217 0132 3B68     		ldr	r3, [r7]
 218 0134 DB68     		ldr	r3, [r3, #12]
 219 0136 B3F1E06F 		cmp	r3, #117440512
 220 013a 2ED0     		beq	.L8
 221 013c 3B68     		ldr	r3, [r7]
 222 013e DB68     		ldr	r3, [r3, #12]
 223 0140 B3F1006F 		cmp	r3, #134217728
 224 0144 29D0     		beq	.L8
 225 0146 3B68     		ldr	r3, [r7]
 226 0148 DB68     		ldr	r3, [r3, #12]
 227 014a B3F1106F 		cmp	r3, #150994944
 228 014e 24D0     		beq	.L8
 229 0150 3B68     		ldr	r3, [r7]
 230 0152 DB68     		ldr	r3, [r3, #12]
 231 0154 B3F1206F 		cmp	r3, #167772160
 232 0158 1FD0     		beq	.L8
 233 015a 3B68     		ldr	r3, [r7]
 234 015c DB68     		ldr	r3, [r3, #12]
 235 015e B3F1306F 		cmp	r3, #184549376
 236 0162 1AD0     		beq	.L8
 237 0164 3B68     		ldr	r3, [r7]
 238 0166 DB68     		ldr	r3, [r3, #12]
 239 0168 B3F1406F 		cmp	r3, #201326592
 240 016c 15D0     		beq	.L8
 241 016e 3B68     		ldr	r3, [r7]
 242 0170 DB68     		ldr	r3, [r3, #12]
 243 0172 B3F1506F 		cmp	r3, #218103808
 244 0176 10D0     		beq	.L8
 245 0178 3B68     		ldr	r3, [r7]
 246 017a DB68     		ldr	r3, [r3, #12]
 247 017c B3F1606F 		cmp	r3, #234881024
 248 0180 0BD0     		beq	.L8
 249 0182 3B68     		ldr	r3, [r7]
 250 0184 DB68     		ldr	r3, [r3, #12]
 251 0186 B3F1706F 		cmp	r3, #251658240
 252 018a 06D0     		beq	.L8
 253 018c 40F20000 		movw	r0, #:lower16:.LC0
 254 0190 C0F20000 		movt	r0, #:upper16:.LC0
 255 0194 EE21     		movs	r1, #238
 256 0196 FFF7FEFF 		bl	assert_failed
 257              	.L8:
 239:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(ADC_InitStruct->ADC_DataAlign)); 
 258              		.loc 1 239 0 is_stmt 1
 259 019a 3B68     		ldr	r3, [r7]
 260 019c 1B69     		ldr	r3, [r3, #16]
 261 019e 002B     		cmp	r3, #0
 262 01a0 0BD0     		beq	.L9
 263              		.loc 1 239 0 is_stmt 0 discriminator 1
 264 01a2 3B68     		ldr	r3, [r7]
 265 01a4 1B69     		ldr	r3, [r3, #16]
 266 01a6 B3F5006F 		cmp	r3, #2048
 267 01aa 06D0     		beq	.L9
 268 01ac 40F20000 		movw	r0, #:lower16:.LC0
 269 01b0 C0F20000 		movt	r0, #:upper16:.LC0
 270 01b4 EF21     		movs	r1, #239
 271 01b6 FFF7FEFF 		bl	assert_failed
 272              	.L9:
 240:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(ADC_InitStruct->ADC_NbrOfConversion));
 273              		.loc 1 240 0 is_stmt 1
 274 01ba 3B68     		ldr	r3, [r7]
 275 01bc 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 276 01be 002B     		cmp	r3, #0
 277 01c0 03D0     		beq	.L10
 278              		.loc 1 240 0 is_stmt 0 discriminator 2
 279 01c2 3B68     		ldr	r3, [r7]
 280 01c4 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 281 01c6 102B     		cmp	r3, #16
 282 01c8 06D9     		bls	.L11
 283              	.L10:
 284              		.loc 1 240 0 discriminator 1
 285 01ca 40F20000 		movw	r0, #:lower16:.LC0
 286 01ce C0F20000 		movt	r0, #:upper16:.LC0
 287 01d2 F021     		movs	r1, #240
 288 01d4 FFF7FEFF 		bl	assert_failed
 289              	.L11:
 241:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 242:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /*---------------------------- ADCx CR1 Configuration -----------------*/
 243:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the ADCx CR1 value */
 244:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->CR1;
 290              		.loc 1 244 0 is_stmt 1
 291 01d8 7B68     		ldr	r3, [r7, #4]
 292 01da 5B68     		ldr	r3, [r3, #4]
 293 01dc FB60     		str	r3, [r7, #12]
 245:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 246:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear RES and SCAN bits */
 247:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 &= CR1_CLEAR_MASK;
 294              		.loc 1 247 0
 295 01de FB68     		ldr	r3, [r7, #12]
 296 01e0 23F04073 		bic	r3, r3, #50331648
 297 01e4 23F48073 		bic	r3, r3, #256
 298 01e8 FB60     		str	r3, [r7, #12]
 248:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 249:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Configure ADCx: scan conversion mode and resolution */
 250:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set SCAN bit according to ADC_ScanConvMode value */
 251:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set RES bit according to ADC_Resolution value */ 
 252:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(((uint32_t)ADC_InitStruct->ADC_ScanConvMode << 8) | \
 299              		.loc 1 252 0
 300 01ea 3B68     		ldr	r3, [r7]
 301 01ec 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 302 01ee 1A02     		lsls	r2, r3, #8
 253:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                                    ADC_InitStruct->ADC_Resolution);
 303              		.loc 1 253 0
 304 01f0 3B68     		ldr	r3, [r7]
 305 01f2 1B68     		ldr	r3, [r3]
 252:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                                    ADC_InitStruct->ADC_Resolution);
 306              		.loc 1 252 0
 307 01f4 1343     		orrs	r3, r3, r2
 308 01f6 FA68     		ldr	r2, [r7, #12]
 309 01f8 1343     		orrs	r3, r3, r2
 310 01fa FB60     		str	r3, [r7, #12]
 254:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Write to ADCx CR1 */
 255:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->CR1 = tmpreg1;
 311              		.loc 1 255 0
 312 01fc 7B68     		ldr	r3, [r7, #4]
 313 01fe FA68     		ldr	r2, [r7, #12]
 314 0200 5A60     		str	r2, [r3, #4]
 256:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /*---------------------------- ADCx CR2 Configuration -----------------*/
 257:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the ADCx CR2 value */
 258:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->CR2;
 315              		.loc 1 258 0
 316 0202 7B68     		ldr	r3, [r7, #4]
 317 0204 9B68     		ldr	r3, [r3, #8]
 318 0206 FB60     		str	r3, [r7, #12]
 259:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 260:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear CONT, ALIGN, EXTEN and EXTSEL bits */
 261:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 &= CR2_CLEAR_MASK;
 319              		.loc 1 261 0
 320 0208 FA68     		ldr	r2, [r7, #12]
 321 020a 4FF2FD73 		movw	r3, #63485
 322 020e CCF2FF03 		movt	r3, 49407
 323 0212 1340     		ands	r3, r3, r2
 324 0214 FB60     		str	r3, [r7, #12]
 262:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 263:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Configure ADCx: external trigger event and edge, data alignment and 
 264:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      continuous conversion mode */
 265:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set ALIGN bit according to ADC_DataAlign value */
 266:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set EXTEN bits according to ADC_ExternalTrigConvEdge value */ 
 267:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set EXTSEL bits according to ADC_ExternalTrigConv value */
 268:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set CONT bit according to ADC_ContinuousConvMode value */
 269:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | \
 325              		.loc 1 269 0
 326 0216 3B68     		ldr	r3, [r7]
 327 0218 1A69     		ldr	r2, [r3, #16]
 270:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         ADC_InitStruct->ADC_ExternalTrigConv | 
 328              		.loc 1 270 0
 329 021a 3B68     		ldr	r3, [r7]
 330 021c DB68     		ldr	r3, [r3, #12]
 269:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         ADC_InitStruct->ADC_ExternalTrigConv | 
 331              		.loc 1 269 0
 332 021e 1A43     		orrs	r2, r2, r3
 271:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         ADC_InitStruct->ADC_ExternalTrigConvEdge | \
 333              		.loc 1 271 0
 334 0220 3B68     		ldr	r3, [r7]
 335 0222 9B68     		ldr	r3, [r3, #8]
 270:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         ADC_InitStruct->ADC_ExternalTrigConv | 
 336              		.loc 1 270 0
 337 0224 1A43     		orrs	r2, r2, r3
 272:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         ((uint32_t)ADC_InitStruct->ADC_ContinuousConvMode << 1));
 338              		.loc 1 272 0
 339 0226 3B68     		ldr	r3, [r7]
 340 0228 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 341 022a 5B00     		lsls	r3, r3, #1
 269:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         ADC_InitStruct->ADC_ExternalTrigConv | 
 342              		.loc 1 269 0
 343 022c 1343     		orrs	r3, r3, r2
 344 022e FA68     		ldr	r2, [r7, #12]
 345 0230 1343     		orrs	r3, r3, r2
 346 0232 FB60     		str	r3, [r7, #12]
 273:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         
 274:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Write to ADCx CR2 */
 275:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->CR2 = tmpreg1;
 347              		.loc 1 275 0
 348 0234 7B68     		ldr	r3, [r7, #4]
 349 0236 FA68     		ldr	r2, [r7, #12]
 350 0238 9A60     		str	r2, [r3, #8]
 276:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /*---------------------------- ADCx SQR1 Configuration -----------------*/
 277:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the ADCx SQR1 value */
 278:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->SQR1;
 351              		.loc 1 278 0
 352 023a 7B68     		ldr	r3, [r7, #4]
 353 023c DB6A     		ldr	r3, [r3, #44]
 354 023e FB60     		str	r3, [r7, #12]
 279:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 280:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear L bits */
 281:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 &= SQR1_L_RESET;
 355              		.loc 1 281 0
 356 0240 FB68     		ldr	r3, [r7, #12]
 357 0242 23F47003 		bic	r3, r3, #15728640
 358 0246 FB60     		str	r3, [r7, #12]
 282:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 283:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Configure ADCx: regular channel sequence length */
 284:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set L bits according to ADC_NbrOfConversion value */
 285:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg2 |= (uint8_t)(ADC_InitStruct->ADC_NbrOfConversion - (uint8_t)1);
 359              		.loc 1 285 0
 360 0248 3B68     		ldr	r3, [r7]
 361 024a 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 362 024c 013B     		subs	r3, r3, #1
 363 024e DAB2     		uxtb	r2, r3
 364 0250 FB7A     		ldrb	r3, [r7, #11]
 365 0252 1343     		orrs	r3, r3, r2
 366 0254 FB72     		strb	r3, [r7, #11]
 286:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 |= ((uint32_t)tmpreg2 << 20);
 367              		.loc 1 286 0
 368 0256 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 369 0258 1B05     		lsls	r3, r3, #20
 370 025a FA68     		ldr	r2, [r7, #12]
 371 025c 1343     		orrs	r3, r3, r2
 372 025e FB60     		str	r3, [r7, #12]
 287:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 288:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Write to ADCx SQR1 */
 289:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->SQR1 = tmpreg1;
 373              		.loc 1 289 0
 374 0260 7B68     		ldr	r3, [r7, #4]
 375 0262 FA68     		ldr	r2, [r7, #12]
 376 0264 DA62     		str	r2, [r3, #44]
 290:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 377              		.loc 1 290 0
 378 0266 1037     		adds	r7, r7, #16
 379 0268 BD46     		mov	sp, r7
 380              		@ sp needed
 381 026a 80BD     		pop	{r7, pc}
 382              		.cfi_endproc
 383              	.LFE111:
 385              		.section	.text.ADC_StructInit,"ax",%progbits
 386              		.align	2
 387              		.global	ADC_StructInit
 388              		.thumb
 389              		.thumb_func
 391              	ADC_StructInit:
 392              	.LFB112:
 291:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 292:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 293:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Fills each ADC_InitStruct member with its default value.
 294:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @note   This function is used to initialize the global features of the ADC ( 
 295:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         Resolution and Data Alignment), however, the rest of the configuration
 296:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         parameters are specific to the regular channels group (scan mode 
 297:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         activation, continuous mode activation, External trigger source and 
 298:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         edge, number of conversion in the regular channels group sequencer).  
 299:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_InitStruct: pointer to an ADC_InitTypeDef structure which will 
 300:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         be initialized.
 301:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 302:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 303:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_StructInit(ADC_InitTypeDef* ADC_InitStruct)
 304:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 393              		.loc 1 304 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 8
 396              		@ frame_needed = 1, uses_anonymous_args = 0
 397              		@ link register save eliminated.
 398 0000 80B4     		push	{r7}
 399              	.LCFI5:
 400              		.cfi_def_cfa_offset 4
 401              		.cfi_offset 7, -4
 402 0002 83B0     		sub	sp, sp, #12
 403              	.LCFI6:
 404              		.cfi_def_cfa_offset 16
 405 0004 00AF     		add	r7, sp, #0
 406              	.LCFI7:
 407              		.cfi_def_cfa_register 7
 408 0006 7860     		str	r0, [r7, #4]
 305:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Initialize the ADC_Mode member */
 306:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_Resolution = ADC_Resolution_12b;
 409              		.loc 1 306 0
 410 0008 7B68     		ldr	r3, [r7, #4]
 411 000a 0022     		movs	r2, #0
 412 000c 1A60     		str	r2, [r3]
 307:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 308:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* initialize the ADC_ScanConvMode member */
 309:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_ScanConvMode = DISABLE;
 413              		.loc 1 309 0
 414 000e 7B68     		ldr	r3, [r7, #4]
 415 0010 0022     		movs	r2, #0
 416 0012 1A71     		strb	r2, [r3, #4]
 310:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 311:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Initialize the ADC_ContinuousConvMode member */
 312:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_ContinuousConvMode = DISABLE;
 417              		.loc 1 312 0
 418 0014 7B68     		ldr	r3, [r7, #4]
 419 0016 0022     		movs	r2, #0
 420 0018 5A71     		strb	r2, [r3, #5]
 313:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 314:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Initialize the ADC_ExternalTrigConvEdge member */
 315:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;
 421              		.loc 1 315 0
 422 001a 7B68     		ldr	r3, [r7, #4]
 423 001c 0022     		movs	r2, #0
 424 001e 9A60     		str	r2, [r3, #8]
 316:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 317:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Initialize the ADC_ExternalTrigConv member */
 318:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_ExternalTrigConv = ADC_ExternalTrigConv_T1_CC1;
 425              		.loc 1 318 0
 426 0020 7B68     		ldr	r3, [r7, #4]
 427 0022 0022     		movs	r2, #0
 428 0024 DA60     		str	r2, [r3, #12]
 319:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 320:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Initialize the ADC_DataAlign member */
 321:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_DataAlign = ADC_DataAlign_Right;
 429              		.loc 1 321 0
 430 0026 7B68     		ldr	r3, [r7, #4]
 431 0028 0022     		movs	r2, #0
 432 002a 1A61     		str	r2, [r3, #16]
 322:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 323:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Initialize the ADC_NbrOfConversion member */
 324:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_NbrOfConversion = 1;
 433              		.loc 1 324 0
 434 002c 7B68     		ldr	r3, [r7, #4]
 435 002e 0122     		movs	r2, #1
 436 0030 1A75     		strb	r2, [r3, #20]
 325:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 437              		.loc 1 325 0
 438 0032 0C37     		adds	r7, r7, #12
 439 0034 BD46     		mov	sp, r7
 440              		@ sp needed
 441 0036 5DF8047B 		ldr	r7, [sp], #4
 442 003a 7047     		bx	lr
 443              		.cfi_endproc
 444              	.LFE112:
 446              		.section	.text.ADC_CommonInit,"ax",%progbits
 447              		.align	2
 448              		.global	ADC_CommonInit
 449              		.thumb
 450              		.thumb_func
 452              	ADC_CommonInit:
 453              	.LFB113:
 326:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 327:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 328:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Initializes the ADCs peripherals according to the specified parameters 
 329:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         in the ADC_CommonInitStruct.
 330:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_CommonInitStruct: pointer to an ADC_CommonInitTypeDef structure 
 331:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         that contains the configuration information for  All ADCs peripherals.
 332:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 333:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 334:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_CommonInit(ADC_CommonInitTypeDef* ADC_CommonInitStruct)
 335:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 454              		.loc 1 335 0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 16
 457              		@ frame_needed = 1, uses_anonymous_args = 0
 458 0000 80B5     		push	{r7, lr}
 459              	.LCFI8:
 460              		.cfi_def_cfa_offset 8
 461              		.cfi_offset 7, -8
 462              		.cfi_offset 14, -4
 463 0002 84B0     		sub	sp, sp, #16
 464              	.LCFI9:
 465              		.cfi_def_cfa_offset 24
 466 0004 00AF     		add	r7, sp, #0
 467              	.LCFI10:
 468              		.cfi_def_cfa_register 7
 469 0006 7860     		str	r0, [r7, #4]
 336:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0;
 470              		.loc 1 336 0
 471 0008 0023     		movs	r3, #0
 472 000a FB60     		str	r3, [r7, #12]
 337:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 338:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_MODE(ADC_CommonInitStruct->ADC_Mode));
 473              		.loc 1 338 0
 474 000c 7B68     		ldr	r3, [r7, #4]
 475 000e 1B68     		ldr	r3, [r3]
 476 0010 002B     		cmp	r3, #0
 477 0012 37D0     		beq	.L14
 478              		.loc 1 338 0 is_stmt 0 discriminator 1
 479 0014 7B68     		ldr	r3, [r7, #4]
 480 0016 1B68     		ldr	r3, [r3]
 481 0018 012B     		cmp	r3, #1
 482 001a 33D0     		beq	.L14
 483 001c 7B68     		ldr	r3, [r7, #4]
 484 001e 1B68     		ldr	r3, [r3]
 485 0020 022B     		cmp	r3, #2
 486 0022 2FD0     		beq	.L14
 487 0024 7B68     		ldr	r3, [r7, #4]
 488 0026 1B68     		ldr	r3, [r3]
 489 0028 052B     		cmp	r3, #5
 490 002a 2BD0     		beq	.L14
 491 002c 7B68     		ldr	r3, [r7, #4]
 492 002e 1B68     		ldr	r3, [r3]
 493 0030 062B     		cmp	r3, #6
 494 0032 27D0     		beq	.L14
 495 0034 7B68     		ldr	r3, [r7, #4]
 496 0036 1B68     		ldr	r3, [r3]
 497 0038 072B     		cmp	r3, #7
 498 003a 23D0     		beq	.L14
 499 003c 7B68     		ldr	r3, [r7, #4]
 500 003e 1B68     		ldr	r3, [r3]
 501 0040 092B     		cmp	r3, #9
 502 0042 1FD0     		beq	.L14
 503 0044 7B68     		ldr	r3, [r7, #4]
 504 0046 1B68     		ldr	r3, [r3]
 505 0048 112B     		cmp	r3, #17
 506 004a 1BD0     		beq	.L14
 507 004c 7B68     		ldr	r3, [r7, #4]
 508 004e 1B68     		ldr	r3, [r3]
 509 0050 122B     		cmp	r3, #18
 510 0052 17D0     		beq	.L14
 511 0054 7B68     		ldr	r3, [r7, #4]
 512 0056 1B68     		ldr	r3, [r3]
 513 0058 152B     		cmp	r3, #21
 514 005a 13D0     		beq	.L14
 515 005c 7B68     		ldr	r3, [r7, #4]
 516 005e 1B68     		ldr	r3, [r3]
 517 0060 162B     		cmp	r3, #22
 518 0062 0FD0     		beq	.L14
 519 0064 7B68     		ldr	r3, [r7, #4]
 520 0066 1B68     		ldr	r3, [r3]
 521 0068 172B     		cmp	r3, #23
 522 006a 0BD0     		beq	.L14
 523 006c 7B68     		ldr	r3, [r7, #4]
 524 006e 1B68     		ldr	r3, [r3]
 525 0070 192B     		cmp	r3, #25
 526 0072 07D0     		beq	.L14
 527 0074 40F20000 		movw	r0, #:lower16:.LC0
 528 0078 C0F20000 		movt	r0, #:upper16:.LC0
 529 007c 4FF4A971 		mov	r1, #338
 530 0080 FFF7FEFF 		bl	assert_failed
 531              	.L14:
 339:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_PRESCALER(ADC_CommonInitStruct->ADC_Prescaler));
 532              		.loc 1 339 0 is_stmt 1
 533 0084 7B68     		ldr	r3, [r7, #4]
 534 0086 5B68     		ldr	r3, [r3, #4]
 535 0088 002B     		cmp	r3, #0
 536 008a 16D0     		beq	.L15
 537              		.loc 1 339 0 is_stmt 0 discriminator 1
 538 008c 7B68     		ldr	r3, [r7, #4]
 539 008e 5B68     		ldr	r3, [r3, #4]
 540 0090 B3F5803F 		cmp	r3, #65536
 541 0094 11D0     		beq	.L15
 542 0096 7B68     		ldr	r3, [r7, #4]
 543 0098 5B68     		ldr	r3, [r3, #4]
 544 009a B3F5003F 		cmp	r3, #131072
 545 009e 0CD0     		beq	.L15
 546 00a0 7B68     		ldr	r3, [r7, #4]
 547 00a2 5B68     		ldr	r3, [r3, #4]
 548 00a4 B3F5403F 		cmp	r3, #196608
 549 00a8 07D0     		beq	.L15
 550 00aa 40F20000 		movw	r0, #:lower16:.LC0
 551 00ae C0F20000 		movt	r0, #:upper16:.LC0
 552 00b2 40F25311 		movw	r1, #339
 553 00b6 FFF7FEFF 		bl	assert_failed
 554              	.L15:
 340:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_DMA_ACCESS_MODE(ADC_CommonInitStruct->ADC_DMAAccessMode));
 555              		.loc 1 340 0 is_stmt 1
 556 00ba 7B68     		ldr	r3, [r7, #4]
 557 00bc 9B68     		ldr	r3, [r3, #8]
 558 00be 002B     		cmp	r3, #0
 559 00c0 16D0     		beq	.L16
 560              		.loc 1 340 0 is_stmt 0 discriminator 1
 561 00c2 7B68     		ldr	r3, [r7, #4]
 562 00c4 9B68     		ldr	r3, [r3, #8]
 563 00c6 B3F5804F 		cmp	r3, #16384
 564 00ca 11D0     		beq	.L16
 565 00cc 7B68     		ldr	r3, [r7, #4]
 566 00ce 9B68     		ldr	r3, [r3, #8]
 567 00d0 B3F5004F 		cmp	r3, #32768
 568 00d4 0CD0     		beq	.L16
 569 00d6 7B68     		ldr	r3, [r7, #4]
 570 00d8 9B68     		ldr	r3, [r3, #8]
 571 00da B3F5404F 		cmp	r3, #49152
 572 00de 07D0     		beq	.L16
 573 00e0 40F20000 		movw	r0, #:lower16:.LC0
 574 00e4 C0F20000 		movt	r0, #:upper16:.LC0
 575 00e8 4FF4AA71 		mov	r1, #340
 576 00ec FFF7FEFF 		bl	assert_failed
 577              	.L16:
 341:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_SAMPLING_DELAY(ADC_CommonInitStruct->ADC_TwoSamplingDelay));
 578              		.loc 1 341 0 is_stmt 1
 579 00f0 7B68     		ldr	r3, [r7, #4]
 580 00f2 DB68     		ldr	r3, [r3, #12]
 581 00f4 002B     		cmp	r3, #0
 582 00f6 52D0     		beq	.L17
 583              		.loc 1 341 0 is_stmt 0 discriminator 1
 584 00f8 7B68     		ldr	r3, [r7, #4]
 585 00fa DB68     		ldr	r3, [r3, #12]
 586 00fc B3F5807F 		cmp	r3, #256
 587 0100 4DD0     		beq	.L17
 588 0102 7B68     		ldr	r3, [r7, #4]
 589 0104 DB68     		ldr	r3, [r3, #12]
 590 0106 B3F5007F 		cmp	r3, #512
 591 010a 48D0     		beq	.L17
 592 010c 7B68     		ldr	r3, [r7, #4]
 593 010e DB68     		ldr	r3, [r3, #12]
 594 0110 B3F5407F 		cmp	r3, #768
 595 0114 43D0     		beq	.L17
 596 0116 7B68     		ldr	r3, [r7, #4]
 597 0118 DB68     		ldr	r3, [r3, #12]
 598 011a B3F5806F 		cmp	r3, #1024
 599 011e 3ED0     		beq	.L17
 600 0120 7B68     		ldr	r3, [r7, #4]
 601 0122 DB68     		ldr	r3, [r3, #12]
 602 0124 B3F5A06F 		cmp	r3, #1280
 603 0128 39D0     		beq	.L17
 604 012a 7B68     		ldr	r3, [r7, #4]
 605 012c DB68     		ldr	r3, [r3, #12]
 606 012e B3F5C06F 		cmp	r3, #1536
 607 0132 34D0     		beq	.L17
 608 0134 7B68     		ldr	r3, [r7, #4]
 609 0136 DB68     		ldr	r3, [r3, #12]
 610 0138 B3F5E06F 		cmp	r3, #1792
 611 013c 2FD0     		beq	.L17
 612 013e 7B68     		ldr	r3, [r7, #4]
 613 0140 DB68     		ldr	r3, [r3, #12]
 614 0142 B3F5006F 		cmp	r3, #2048
 615 0146 2AD0     		beq	.L17
 616 0148 7B68     		ldr	r3, [r7, #4]
 617 014a DB68     		ldr	r3, [r3, #12]
 618 014c B3F5106F 		cmp	r3, #2304
 619 0150 25D0     		beq	.L17
 620 0152 7B68     		ldr	r3, [r7, #4]
 621 0154 DB68     		ldr	r3, [r3, #12]
 622 0156 B3F5206F 		cmp	r3, #2560
 623 015a 20D0     		beq	.L17
 624 015c 7B68     		ldr	r3, [r7, #4]
 625 015e DB68     		ldr	r3, [r3, #12]
 626 0160 B3F5306F 		cmp	r3, #2816
 627 0164 1BD0     		beq	.L17
 628 0166 7B68     		ldr	r3, [r7, #4]
 629 0168 DB68     		ldr	r3, [r3, #12]
 630 016a B3F5406F 		cmp	r3, #3072
 631 016e 16D0     		beq	.L17
 632 0170 7B68     		ldr	r3, [r7, #4]
 633 0172 DB68     		ldr	r3, [r3, #12]
 634 0174 B3F5506F 		cmp	r3, #3328
 635 0178 11D0     		beq	.L17
 636 017a 7B68     		ldr	r3, [r7, #4]
 637 017c DB68     		ldr	r3, [r3, #12]
 638 017e B3F5606F 		cmp	r3, #3584
 639 0182 0CD0     		beq	.L17
 640 0184 7B68     		ldr	r3, [r7, #4]
 641 0186 DB68     		ldr	r3, [r3, #12]
 642 0188 B3F5706F 		cmp	r3, #3840
 643 018c 07D0     		beq	.L17
 644 018e 40F20000 		movw	r0, #:lower16:.LC0
 645 0192 C0F20000 		movt	r0, #:upper16:.LC0
 646 0196 40F25511 		movw	r1, #341
 647 019a FFF7FEFF 		bl	assert_failed
 648              	.L17:
 342:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /*---------------------------- ADC CCR Configuration -----------------*/
 343:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the ADC CCR value */
 344:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 = ADC->CCR;
 649              		.loc 1 344 0 is_stmt 1
 650 019e 4FF40C53 		mov	r3, #8960
 651 01a2 C4F20103 		movt	r3, 16385
 652 01a6 5B68     		ldr	r3, [r3, #4]
 653 01a8 FB60     		str	r3, [r7, #12]
 345:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 346:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear MULTI, DELAY, DMA and ADCPRE bits */
 347:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 &= CR_CLEAR_MASK;
 654              		.loc 1 347 0
 655 01aa FA68     		ldr	r2, [r7, #12]
 656 01ac 43F2E003 		movw	r3, #12512
 657 01b0 CFF6FC73 		movt	r3, 65532
 658 01b4 1340     		ands	r3, r3, r2
 659 01b6 FB60     		str	r3, [r7, #12]
 348:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 349:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Configure ADCx: Multi mode, Delay between two sampling time, ADC prescaler,
 350:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      and DMA access mode for multimode */
 351:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set MULTI bits according to ADC_Mode value */
 352:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set ADCPRE bits according to ADC_Prescaler value */
 353:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set DMA bits according to ADC_DMAAccessMode value */
 354:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set DELAY bits according to ADC_TwoSamplingDelay value */    
 355:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(ADC_CommonInitStruct->ADC_Mode | 
 660              		.loc 1 355 0
 661 01b8 7B68     		ldr	r3, [r7, #4]
 662 01ba 1A68     		ldr	r2, [r3]
 356:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_Prescaler | 
 663              		.loc 1 356 0
 664 01bc 7B68     		ldr	r3, [r7, #4]
 665 01be 5B68     		ldr	r3, [r3, #4]
 355:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_Prescaler | 
 666              		.loc 1 355 0
 667 01c0 1A43     		orrs	r2, r2, r3
 357:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_DMAAccessMode | 
 668              		.loc 1 357 0
 669 01c2 7B68     		ldr	r3, [r7, #4]
 670 01c4 9B68     		ldr	r3, [r3, #8]
 356:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_Prescaler | 
 671              		.loc 1 356 0
 672 01c6 1A43     		orrs	r2, r2, r3
 358:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_TwoSamplingDelay);
 673              		.loc 1 358 0
 674 01c8 7B68     		ldr	r3, [r7, #4]
 675 01ca DB68     		ldr	r3, [r3, #12]
 355:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_Prescaler | 
 676              		.loc 1 355 0
 677 01cc 1343     		orrs	r3, r3, r2
 678 01ce FA68     		ldr	r2, [r7, #12]
 679 01d0 1343     		orrs	r3, r3, r2
 680 01d2 FB60     		str	r3, [r7, #12]
 359:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         
 360:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Write to ADC CCR */
 361:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADC->CCR = tmpreg1;
 681              		.loc 1 361 0
 682 01d4 4FF40C53 		mov	r3, #8960
 683 01d8 C4F20103 		movt	r3, 16385
 684 01dc FA68     		ldr	r2, [r7, #12]
 685 01de 5A60     		str	r2, [r3, #4]
 362:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 686              		.loc 1 362 0
 687 01e0 1037     		adds	r7, r7, #16
 688 01e2 BD46     		mov	sp, r7
 689              		@ sp needed
 690 01e4 80BD     		pop	{r7, pc}
 691              		.cfi_endproc
 692              	.LFE113:
 694 01e6 00BF     		.section	.text.ADC_CommonStructInit,"ax",%progbits
 695              		.align	2
 696              		.global	ADC_CommonStructInit
 697              		.thumb
 698              		.thumb_func
 700              	ADC_CommonStructInit:
 701              	.LFB114:
 363:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 364:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 365:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Fills each ADC_CommonInitStruct member with its default value.
 366:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_CommonInitStruct: pointer to an ADC_CommonInitTypeDef structure
 367:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         which will be initialized.
 368:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 369:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 370:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_CommonStructInit(ADC_CommonInitTypeDef* ADC_CommonInitStruct)
 371:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 702              		.loc 1 371 0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 8
 705              		@ frame_needed = 1, uses_anonymous_args = 0
 706              		@ link register save eliminated.
 707 0000 80B4     		push	{r7}
 708              	.LCFI11:
 709              		.cfi_def_cfa_offset 4
 710              		.cfi_offset 7, -4
 711 0002 83B0     		sub	sp, sp, #12
 712              	.LCFI12:
 713              		.cfi_def_cfa_offset 16
 714 0004 00AF     		add	r7, sp, #0
 715              	.LCFI13:
 716              		.cfi_def_cfa_register 7
 717 0006 7860     		str	r0, [r7, #4]
 372:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Initialize the ADC_Mode member */
 373:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADC_CommonInitStruct->ADC_Mode = ADC_Mode_Independent;
 718              		.loc 1 373 0
 719 0008 7B68     		ldr	r3, [r7, #4]
 720 000a 0022     		movs	r2, #0
 721 000c 1A60     		str	r2, [r3]
 374:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 375:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* initialize the ADC_Prescaler member */
 376:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADC_CommonInitStruct->ADC_Prescaler = ADC_Prescaler_Div2;
 722              		.loc 1 376 0
 723 000e 7B68     		ldr	r3, [r7, #4]
 724 0010 0022     		movs	r2, #0
 725 0012 5A60     		str	r2, [r3, #4]
 377:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 378:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Initialize the ADC_DMAAccessMode member */
 379:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADC_CommonInitStruct->ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
 726              		.loc 1 379 0
 727 0014 7B68     		ldr	r3, [r7, #4]
 728 0016 0022     		movs	r2, #0
 729 0018 9A60     		str	r2, [r3, #8]
 380:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 381:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Initialize the ADC_TwoSamplingDelay member */
 382:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADC_CommonInitStruct->ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_5Cycles;
 730              		.loc 1 382 0
 731 001a 7B68     		ldr	r3, [r7, #4]
 732 001c 0022     		movs	r2, #0
 733 001e DA60     		str	r2, [r3, #12]
 383:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 734              		.loc 1 383 0
 735 0020 0C37     		adds	r7, r7, #12
 736 0022 BD46     		mov	sp, r7
 737              		@ sp needed
 738 0024 5DF8047B 		ldr	r7, [sp], #4
 739 0028 7047     		bx	lr
 740              		.cfi_endproc
 741              	.LFE114:
 743 002a 00BF     		.section	.text.ADC_Cmd,"ax",%progbits
 744              		.align	2
 745              		.global	ADC_Cmd
 746              		.thumb
 747              		.thumb_func
 749              	ADC_Cmd:
 750              	.LFB115:
 384:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 385:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 386:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the specified ADC peripheral.
 387:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 388:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the ADCx peripheral. 
 389:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 390:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 391:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 392:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_Cmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 393:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 751              		.loc 1 393 0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 8
 754              		@ frame_needed = 1, uses_anonymous_args = 0
 755 0000 80B5     		push	{r7, lr}
 756              	.LCFI14:
 757              		.cfi_def_cfa_offset 8
 758              		.cfi_offset 7, -8
 759              		.cfi_offset 14, -4
 760 0002 82B0     		sub	sp, sp, #8
 761              	.LCFI15:
 762              		.cfi_def_cfa_offset 16
 763 0004 00AF     		add	r7, sp, #0
 764              	.LCFI16:
 765              		.cfi_def_cfa_register 7
 766 0006 7860     		str	r0, [r7, #4]
 767 0008 0B46     		mov	r3, r1
 768 000a FB70     		strb	r3, [r7, #3]
 394:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 395:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 769              		.loc 1 395 0
 770 000c 7A68     		ldr	r2, [r7, #4]
 771 000e 4FF40053 		mov	r3, #8192
 772 0012 C4F20103 		movt	r3, 16385
 773 0016 9A42     		cmp	r2, r3
 774 0018 15D0     		beq	.L20
 775              		.loc 1 395 0 is_stmt 0 discriminator 1
 776 001a 7A68     		ldr	r2, [r7, #4]
 777 001c 4FF40453 		mov	r3, #8448
 778 0020 C4F20103 		movt	r3, 16385
 779 0024 9A42     		cmp	r2, r3
 780 0026 0ED0     		beq	.L20
 781 0028 7A68     		ldr	r2, [r7, #4]
 782 002a 4FF40853 		mov	r3, #8704
 783 002e C4F20103 		movt	r3, 16385
 784 0032 9A42     		cmp	r2, r3
 785 0034 07D0     		beq	.L20
 786 0036 40F20000 		movw	r0, #:lower16:.LC0
 787 003a C0F20000 		movt	r0, #:upper16:.LC0
 788 003e 40F28B11 		movw	r1, #395
 789 0042 FFF7FEFF 		bl	assert_failed
 790              	.L20:
 396:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 791              		.loc 1 396 0 is_stmt 1
 792 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 793 0048 002B     		cmp	r3, #0
 794 004a 0AD0     		beq	.L21
 795              		.loc 1 396 0 is_stmt 0 discriminator 1
 796 004c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 797 004e 012B     		cmp	r3, #1
 798 0050 07D0     		beq	.L21
 799 0052 40F20000 		movw	r0, #:lower16:.LC0
 800 0056 C0F20000 		movt	r0, #:upper16:.LC0
 801 005a 4FF4C671 		mov	r1, #396
 802 005e FFF7FEFF 		bl	assert_failed
 803              	.L21:
 397:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 804              		.loc 1 397 0 is_stmt 1
 805 0062 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 806 0064 002B     		cmp	r3, #0
 807 0066 06D0     		beq	.L22
 398:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 399:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Set the ADON bit to wake up the ADC from power down mode */
 400:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_ADON;
 808              		.loc 1 400 0
 809 0068 7B68     		ldr	r3, [r7, #4]
 810 006a 9B68     		ldr	r3, [r3, #8]
 811 006c 43F00102 		orr	r2, r3, #1
 812 0070 7B68     		ldr	r3, [r7, #4]
 813 0072 9A60     		str	r2, [r3, #8]
 814 0074 05E0     		b	.L19
 815              	.L22:
 401:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 402:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
 403:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 404:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Disable the selected ADC peripheral */
 405:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_ADON);
 816              		.loc 1 405 0
 817 0076 7B68     		ldr	r3, [r7, #4]
 818 0078 9B68     		ldr	r3, [r3, #8]
 819 007a 23F00102 		bic	r2, r3, #1
 820 007e 7B68     		ldr	r3, [r7, #4]
 821 0080 9A60     		str	r2, [r3, #8]
 822              	.L19:
 406:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 407:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 823              		.loc 1 407 0
 824 0082 0837     		adds	r7, r7, #8
 825 0084 BD46     		mov	sp, r7
 826              		@ sp needed
 827 0086 80BD     		pop	{r7, pc}
 828              		.cfi_endproc
 829              	.LFE115:
 831              		.section	.text.ADC_AnalogWatchdogCmd,"ax",%progbits
 832              		.align	2
 833              		.global	ADC_AnalogWatchdogCmd
 834              		.thumb
 835              		.thumb_func
 837              	ADC_AnalogWatchdogCmd:
 838              	.LFB116:
 408:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 409:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @}
 410:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 411:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 412:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /** @defgroup ADC_Group2 Analog Watchdog configuration functions
 413:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *  @brief    Analog Watchdog configuration functions 
 414:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *
 415:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @verbatim   
 416:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================
 417:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                     Analog Watchdog configuration functions
 418:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================  
 419:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 420:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   This section provides functions allowing to configure the Analog Watchdog
 421:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   (AWD) feature in the ADC.
 422:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 423:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   A typical configuration Analog Watchdog is done following these steps :
 424:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****    1. the ADC guarded channel(s) is (are) selected using the 
 425:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       ADC_AnalogWatchdogSingleChannelConfig() function.
 426:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****    2. The Analog watchdog lower and higher threshold are configured using the  
 427:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      ADC_AnalogWatchdogThresholdsConfig() function.
 428:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****    3. The Analog watchdog is enabled and configured to enable the check, on one
 429:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       or more channels, using the  ADC_AnalogWatchdogCmd() function.
 430:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 431:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @endverbatim
 432:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @{
 433:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 434:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 435:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 436:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the analog watchdog on single/all regular or 
 437:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         injected channels
 438:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 439:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_AnalogWatchdog: the ADC analog watchdog configuration.
 440:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         This parameter can be one of the following values:
 441:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_SingleRegEnable: Analog watchdog on a single regular channel
 442:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_SingleInjecEnable: Analog watchdog on a single injected chan
 443:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_SingleRegOrInjecEnable: Analog watchdog on a single regular 
 444:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_AllRegEnable: Analog watchdog on all regular channel
 445:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_AllInjecEnable: Analog watchdog on all injected channel
 446:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_AllRegAllInjecEnable: Analog watchdog on all regular and inj
 447:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_None: No channel guarded by the analog watchdog
 448:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None	  
 449:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 450:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_AnalogWatchdogCmd(ADC_TypeDef* ADCx, uint32_t ADC_AnalogWatchdog)
 451:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 839              		.loc 1 451 0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 16
 842              		@ frame_needed = 1, uses_anonymous_args = 0
 843 0000 80B5     		push	{r7, lr}
 844              	.LCFI17:
 845              		.cfi_def_cfa_offset 8
 846              		.cfi_offset 7, -8
 847              		.cfi_offset 14, -4
 848 0002 84B0     		sub	sp, sp, #16
 849              	.LCFI18:
 850              		.cfi_def_cfa_offset 24
 851 0004 00AF     		add	r7, sp, #0
 852              	.LCFI19:
 853              		.cfi_def_cfa_register 7
 854 0006 7860     		str	r0, [r7, #4]
 855 0008 3960     		str	r1, [r7]
 452:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg = 0;
 856              		.loc 1 452 0
 857 000a 0023     		movs	r3, #0
 858 000c FB60     		str	r3, [r7, #12]
 453:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 454:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 859              		.loc 1 454 0
 860 000e 7A68     		ldr	r2, [r7, #4]
 861 0010 4FF40053 		mov	r3, #8192
 862 0014 C4F20103 		movt	r3, 16385
 863 0018 9A42     		cmp	r2, r3
 864 001a 15D0     		beq	.L25
 865              		.loc 1 454 0 is_stmt 0 discriminator 1
 866 001c 7A68     		ldr	r2, [r7, #4]
 867 001e 4FF40453 		mov	r3, #8448
 868 0022 C4F20103 		movt	r3, 16385
 869 0026 9A42     		cmp	r2, r3
 870 0028 0ED0     		beq	.L25
 871 002a 7A68     		ldr	r2, [r7, #4]
 872 002c 4FF40853 		mov	r3, #8704
 873 0030 C4F20103 		movt	r3, 16385
 874 0034 9A42     		cmp	r2, r3
 875 0036 07D0     		beq	.L25
 876 0038 40F20000 		movw	r0, #:lower16:.LC0
 877 003c C0F20000 		movt	r0, #:upper16:.LC0
 878 0040 4FF4E371 		mov	r1, #454
 879 0044 FFF7FEFF 		bl	assert_failed
 880              	.L25:
 455:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG(ADC_AnalogWatchdog));
 881              		.loc 1 455 0 is_stmt 1
 882 0048 3A68     		ldr	r2, [r7]
 883 004a 4FF40073 		mov	r3, #512
 884 004e C0F28003 		movt	r3, 128
 885 0052 9A42     		cmp	r2, r3
 886 0054 24D0     		beq	.L26
 887              		.loc 1 455 0 is_stmt 0 discriminator 1
 888 0056 3A68     		ldr	r2, [r7]
 889 0058 4FF40073 		mov	r3, #512
 890 005c C0F24003 		movt	r3, 64
 891 0060 9A42     		cmp	r2, r3
 892 0062 1DD0     		beq	.L26
 893 0064 3A68     		ldr	r2, [r7]
 894 0066 4FF40073 		mov	r3, #512
 895 006a C0F2C003 		movt	r3, 192
 896 006e 9A42     		cmp	r2, r3
 897 0070 16D0     		beq	.L26
 898 0072 3B68     		ldr	r3, [r7]
 899 0074 B3F5000F 		cmp	r3, #8388608
 900 0078 12D0     		beq	.L26
 901 007a 3B68     		ldr	r3, [r7]
 902 007c B3F5800F 		cmp	r3, #4194304
 903 0080 0ED0     		beq	.L26
 904 0082 3B68     		ldr	r3, [r7]
 905 0084 B3F5400F 		cmp	r3, #12582912
 906 0088 0AD0     		beq	.L26
 907 008a 3B68     		ldr	r3, [r7]
 908 008c 002B     		cmp	r3, #0
 909 008e 07D0     		beq	.L26
 910 0090 40F20000 		movw	r0, #:lower16:.LC0
 911 0094 C0F20000 		movt	r0, #:upper16:.LC0
 912 0098 40F2C711 		movw	r1, #455
 913 009c FFF7FEFF 		bl	assert_failed
 914              	.L26:
 456:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 457:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the old register value */
 458:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg = ADCx->CR1;
 915              		.loc 1 458 0 is_stmt 1
 916 00a0 7B68     		ldr	r3, [r7, #4]
 917 00a2 5B68     		ldr	r3, [r3, #4]
 918 00a4 FB60     		str	r3, [r7, #12]
 459:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 460:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear AWDEN, JAWDEN and AWDSGL bits */
 461:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg &= CR1_AWDMode_RESET;
 919              		.loc 1 461 0
 920 00a6 FB68     		ldr	r3, [r7, #12]
 921 00a8 23F44003 		bic	r3, r3, #12582912
 922 00ac 23F40073 		bic	r3, r3, #512
 923 00b0 FB60     		str	r3, [r7, #12]
 462:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 463:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set the analog watchdog enable mode */
 464:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg |= ADC_AnalogWatchdog;
 924              		.loc 1 464 0
 925 00b2 FA68     		ldr	r2, [r7, #12]
 926 00b4 3B68     		ldr	r3, [r7]
 927 00b6 1343     		orrs	r3, r3, r2
 928 00b8 FB60     		str	r3, [r7, #12]
 465:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 466:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Store the new register value */
 467:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->CR1 = tmpreg;
 929              		.loc 1 467 0
 930 00ba 7B68     		ldr	r3, [r7, #4]
 931 00bc FA68     		ldr	r2, [r7, #12]
 932 00be 5A60     		str	r2, [r3, #4]
 468:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 933              		.loc 1 468 0
 934 00c0 1037     		adds	r7, r7, #16
 935 00c2 BD46     		mov	sp, r7
 936              		@ sp needed
 937 00c4 80BD     		pop	{r7, pc}
 938              		.cfi_endproc
 939              	.LFE116:
 941 00c6 00BF     		.section	.text.ADC_AnalogWatchdogThresholdsConfig,"ax",%progbits
 942              		.align	2
 943              		.global	ADC_AnalogWatchdogThresholdsConfig
 944              		.thumb
 945              		.thumb_func
 947              	ADC_AnalogWatchdogThresholdsConfig:
 948              	.LFB117:
 469:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 470:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 471:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Configures the high and low thresholds of the analog watchdog.
 472:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 473:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  HighThreshold: the ADC analog watchdog High threshold value.
 474:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter must be a 12-bit value.
 475:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  LowThreshold:  the ADC analog watchdog Low threshold value.
 476:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter must be a 12-bit value.
 477:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 478:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 479:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_AnalogWatchdogThresholdsConfig(ADC_TypeDef* ADCx, uint16_t HighThreshold,
 480:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                                         uint16_t LowThreshold)
 481:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 949              		.loc 1 481 0
 950              		.cfi_startproc
 951              		@ args = 0, pretend = 0, frame = 8
 952              		@ frame_needed = 1, uses_anonymous_args = 0
 953 0000 80B5     		push	{r7, lr}
 954              	.LCFI20:
 955              		.cfi_def_cfa_offset 8
 956              		.cfi_offset 7, -8
 957              		.cfi_offset 14, -4
 958 0002 82B0     		sub	sp, sp, #8
 959              	.LCFI21:
 960              		.cfi_def_cfa_offset 16
 961 0004 00AF     		add	r7, sp, #0
 962              	.LCFI22:
 963              		.cfi_def_cfa_register 7
 964 0006 7860     		str	r0, [r7, #4]
 965 0008 1346     		mov	r3, r2
 966 000a 0A46     		mov	r2, r1	@ movhi
 967 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 968 000e 3B80     		strh	r3, [r7]	@ movhi
 482:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 483:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 969              		.loc 1 483 0
 970 0010 7A68     		ldr	r2, [r7, #4]
 971 0012 4FF40053 		mov	r3, #8192
 972 0016 C4F20103 		movt	r3, 16385
 973 001a 9A42     		cmp	r2, r3
 974 001c 15D0     		beq	.L28
 975              		.loc 1 483 0 is_stmt 0 discriminator 1
 976 001e 7A68     		ldr	r2, [r7, #4]
 977 0020 4FF40453 		mov	r3, #8448
 978 0024 C4F20103 		movt	r3, 16385
 979 0028 9A42     		cmp	r2, r3
 980 002a 0ED0     		beq	.L28
 981 002c 7A68     		ldr	r2, [r7, #4]
 982 002e 4FF40853 		mov	r3, #8704
 983 0032 C4F20103 		movt	r3, 16385
 984 0036 9A42     		cmp	r2, r3
 985 0038 07D0     		beq	.L28
 986 003a 40F20000 		movw	r0, #:lower16:.LC0
 987 003e C0F20000 		movt	r0, #:upper16:.LC0
 988 0042 40F2E311 		movw	r1, #483
 989 0046 FFF7FEFF 		bl	assert_failed
 990              	.L28:
 484:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_THRESHOLD(HighThreshold));
 991              		.loc 1 484 0 is_stmt 1
 992 004a 7B88     		ldrh	r3, [r7, #2]
 993 004c B3F5805F 		cmp	r3, #4096
 994 0050 07D3     		bcc	.L29
 995              		.loc 1 484 0 is_stmt 0 discriminator 1
 996 0052 40F20000 		movw	r0, #:lower16:.LC0
 997 0056 C0F20000 		movt	r0, #:upper16:.LC0
 998 005a 4FF4F271 		mov	r1, #484
 999 005e FFF7FEFF 		bl	assert_failed
 1000              	.L29:
 485:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_THRESHOLD(LowThreshold));
 1001              		.loc 1 485 0 is_stmt 1
 1002 0062 3B88     		ldrh	r3, [r7]
 1003 0064 B3F5805F 		cmp	r3, #4096
 1004 0068 07D3     		bcc	.L30
 1005              		.loc 1 485 0 is_stmt 0 discriminator 1
 1006 006a 40F20000 		movw	r0, #:lower16:.LC0
 1007 006e C0F20000 		movt	r0, #:upper16:.LC0
 1008 0072 40F2E511 		movw	r1, #485
 1009 0076 FFF7FEFF 		bl	assert_failed
 1010              	.L30:
 486:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 487:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set the ADCx high threshold */
 488:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->HTR = HighThreshold;
 1011              		.loc 1 488 0 is_stmt 1
 1012 007a 7A88     		ldrh	r2, [r7, #2]
 1013 007c 7B68     		ldr	r3, [r7, #4]
 1014 007e 5A62     		str	r2, [r3, #36]
 489:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 490:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set the ADCx low threshold */
 491:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->LTR = LowThreshold;
 1015              		.loc 1 491 0
 1016 0080 3A88     		ldrh	r2, [r7]
 1017 0082 7B68     		ldr	r3, [r7, #4]
 1018 0084 9A62     		str	r2, [r3, #40]
 492:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 1019              		.loc 1 492 0
 1020 0086 0837     		adds	r7, r7, #8
 1021 0088 BD46     		mov	sp, r7
 1022              		@ sp needed
 1023 008a 80BD     		pop	{r7, pc}
 1024              		.cfi_endproc
 1025              	.LFE117:
 1027              		.section	.text.ADC_AnalogWatchdogSingleChannelConfig,"ax",%progbits
 1028              		.align	2
 1029              		.global	ADC_AnalogWatchdogSingleChannelConfig
 1030              		.thumb
 1031              		.thumb_func
 1033              	ADC_AnalogWatchdogSingleChannelConfig:
 1034              	.LFB118:
 493:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 494:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 495:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Configures the analog watchdog guarded single channel
 496:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 497:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_Channel: the ADC channel to configure for the analog watchdog. 
 498:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
 499:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_0: ADC Channel0 selected
 500:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_1: ADC Channel1 selected
 501:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_2: ADC Channel2 selected
 502:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_3: ADC Channel3 selected
 503:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_4: ADC Channel4 selected
 504:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_5: ADC Channel5 selected
 505:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_6: ADC Channel6 selected
 506:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_7: ADC Channel7 selected
 507:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_8: ADC Channel8 selected
 508:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_9: ADC Channel9 selected
 509:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_10: ADC Channel10 selected
 510:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_11: ADC Channel11 selected
 511:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_12: ADC Channel12 selected
 512:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_13: ADC Channel13 selected
 513:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_14: ADC Channel14 selected
 514:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_15: ADC Channel15 selected
 515:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_16: ADC Channel16 selected
 516:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_17: ADC Channel17 selected
 517:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_18: ADC Channel18 selected
 518:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 519:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 520:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_AnalogWatchdogSingleChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel)
 521:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 1035              		.loc 1 521 0
 1036              		.cfi_startproc
 1037              		@ args = 0, pretend = 0, frame = 16
 1038              		@ frame_needed = 1, uses_anonymous_args = 0
 1039 0000 80B5     		push	{r7, lr}
 1040              	.LCFI23:
 1041              		.cfi_def_cfa_offset 8
 1042              		.cfi_offset 7, -8
 1043              		.cfi_offset 14, -4
 1044 0002 84B0     		sub	sp, sp, #16
 1045              	.LCFI24:
 1046              		.cfi_def_cfa_offset 24
 1047 0004 00AF     		add	r7, sp, #0
 1048              	.LCFI25:
 1049              		.cfi_def_cfa_register 7
 1050 0006 7860     		str	r0, [r7, #4]
 1051 0008 0B46     		mov	r3, r1
 1052 000a FB70     		strb	r3, [r7, #3]
 522:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg = 0;
 1053              		.loc 1 522 0
 1054 000c 0023     		movs	r3, #0
 1055 000e FB60     		str	r3, [r7, #12]
 523:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 524:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1056              		.loc 1 524 0
 1057 0010 7A68     		ldr	r2, [r7, #4]
 1058 0012 4FF40053 		mov	r3, #8192
 1059 0016 C4F20103 		movt	r3, 16385
 1060 001a 9A42     		cmp	r2, r3
 1061 001c 15D0     		beq	.L32
 1062              		.loc 1 524 0 is_stmt 0 discriminator 1
 1063 001e 7A68     		ldr	r2, [r7, #4]
 1064 0020 4FF40453 		mov	r3, #8448
 1065 0024 C4F20103 		movt	r3, 16385
 1066 0028 9A42     		cmp	r2, r3
 1067 002a 0ED0     		beq	.L32
 1068 002c 7A68     		ldr	r2, [r7, #4]
 1069 002e 4FF40853 		mov	r3, #8704
 1070 0032 C4F20103 		movt	r3, 16385
 1071 0036 9A42     		cmp	r2, r3
 1072 0038 07D0     		beq	.L32
 1073 003a 40F20000 		movw	r0, #:lower16:.LC0
 1074 003e C0F20000 		movt	r0, #:upper16:.LC0
 1075 0042 4FF40371 		mov	r1, #524
 1076 0046 FFF7FEFF 		bl	assert_failed
 1077              	.L32:
 525:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 1078              		.loc 1 525 0 is_stmt 1
 1079 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1080 004c 002B     		cmp	r3, #0
 1081 004e 3DD0     		beq	.L33
 1082              		.loc 1 525 0 is_stmt 0 discriminator 1
 1083 0050 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1084 0052 012B     		cmp	r3, #1
 1085 0054 3AD0     		beq	.L33
 1086 0056 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1087 0058 022B     		cmp	r3, #2
 1088 005a 37D0     		beq	.L33
 1089 005c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1090 005e 032B     		cmp	r3, #3
 1091 0060 34D0     		beq	.L33
 1092 0062 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1093 0064 042B     		cmp	r3, #4
 1094 0066 31D0     		beq	.L33
 1095 0068 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1096 006a 052B     		cmp	r3, #5
 1097 006c 2ED0     		beq	.L33
 1098 006e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1099 0070 062B     		cmp	r3, #6
 1100 0072 2BD0     		beq	.L33
 1101 0074 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1102 0076 072B     		cmp	r3, #7
 1103 0078 28D0     		beq	.L33
 1104 007a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1105 007c 082B     		cmp	r3, #8
 1106 007e 25D0     		beq	.L33
 1107 0080 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1108 0082 092B     		cmp	r3, #9
 1109 0084 22D0     		beq	.L33
 1110 0086 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1111 0088 0A2B     		cmp	r3, #10
 1112 008a 1FD0     		beq	.L33
 1113 008c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1114 008e 0B2B     		cmp	r3, #11
 1115 0090 1CD0     		beq	.L33
 1116 0092 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1117 0094 0C2B     		cmp	r3, #12
 1118 0096 19D0     		beq	.L33
 1119 0098 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1120 009a 0D2B     		cmp	r3, #13
 1121 009c 16D0     		beq	.L33
 1122 009e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1123 00a0 0E2B     		cmp	r3, #14
 1124 00a2 13D0     		beq	.L33
 1125 00a4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1126 00a6 0F2B     		cmp	r3, #15
 1127 00a8 10D0     		beq	.L33
 1128 00aa FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1129 00ac 102B     		cmp	r3, #16
 1130 00ae 0DD0     		beq	.L33
 1131 00b0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1132 00b2 112B     		cmp	r3, #17
 1133 00b4 0AD0     		beq	.L33
 1134 00b6 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1135 00b8 122B     		cmp	r3, #18
 1136 00ba 07D0     		beq	.L33
 1137 00bc 40F20000 		movw	r0, #:lower16:.LC0
 1138 00c0 C0F20000 		movt	r0, #:upper16:.LC0
 1139 00c4 40F20D21 		movw	r1, #525
 1140 00c8 FFF7FEFF 		bl	assert_failed
 1141              	.L33:
 526:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 527:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the old register value */
 528:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg = ADCx->CR1;
 1142              		.loc 1 528 0 is_stmt 1
 1143 00cc 7B68     		ldr	r3, [r7, #4]
 1144 00ce 5B68     		ldr	r3, [r3, #4]
 1145 00d0 FB60     		str	r3, [r7, #12]
 529:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 530:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear the Analog watchdog channel select bits */
 531:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg &= CR1_AWDCH_RESET;
 1146              		.loc 1 531 0
 1147 00d2 FB68     		ldr	r3, [r7, #12]
 1148 00d4 23F01F03 		bic	r3, r3, #31
 1149 00d8 FB60     		str	r3, [r7, #12]
 532:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 533:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set the Analog watchdog channel */
 534:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg |= ADC_Channel;
 1150              		.loc 1 534 0
 1151 00da FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1152 00dc FA68     		ldr	r2, [r7, #12]
 1153 00de 1343     		orrs	r3, r3, r2
 1154 00e0 FB60     		str	r3, [r7, #12]
 535:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 536:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Store the new register value */
 537:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->CR1 = tmpreg;
 1155              		.loc 1 537 0
 1156 00e2 7B68     		ldr	r3, [r7, #4]
 1157 00e4 FA68     		ldr	r2, [r7, #12]
 1158 00e6 5A60     		str	r2, [r3, #4]
 538:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 1159              		.loc 1 538 0
 1160 00e8 1037     		adds	r7, r7, #16
 1161 00ea BD46     		mov	sp, r7
 1162              		@ sp needed
 1163 00ec 80BD     		pop	{r7, pc}
 1164              		.cfi_endproc
 1165              	.LFE118:
 1167 00ee 00BF     		.section	.text.ADC_TempSensorVrefintCmd,"ax",%progbits
 1168              		.align	2
 1169              		.global	ADC_TempSensorVrefintCmd
 1170              		.thumb
 1171              		.thumb_func
 1173              	ADC_TempSensorVrefintCmd:
 1174              	.LFB119:
 539:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 540:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @}
 541:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 542:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 543:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /** @defgroup ADC_Group3 Temperature Sensor, Vrefint (Voltage Reference internal) 
 544:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *            and VBAT (Voltage BATtery) management functions
 545:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *  @brief   Temperature Sensor, Vrefint and VBAT management functions 
 546:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *
 547:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @verbatim   
 548:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================
 549:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                Temperature Sensor, Vrefint and VBAT management functions
 550:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================  
 551:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 552:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   This section provides functions allowing to enable/ disable the internal 
 553:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   connections between the ADC and the Temperature Sensor, the Vrefint and the
 554:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   Vbat sources.
 555:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      
 556:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   A typical configuration to get the Temperature sensor and Vrefint channels 
 557:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   voltages is done following these steps :
 558:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****    1. Enable the internal connection of Temperature sensor and Vrefint sources 
 559:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       with the ADC channels using ADC_TempSensorVrefintCmd() function. 
 560:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****    2. Select the ADC_Channel_TempSensor and/or ADC_Channel_Vrefint using 
 561:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       ADC_RegularChannelConfig() or  ADC_InjectedChannelConfig() functions 
 562:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****    3. Get the voltage values, using ADC_GetConversionValue() or  
 563:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       ADC_GetInjectedConversionValue().
 564:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 565:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   A typical configuration to get the VBAT channel voltage is done following 
 566:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   these steps :
 567:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****    1. Enable the internal connection of VBAT source with the ADC channel using 
 568:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       ADC_VBATCmd() function. 
 569:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****    2. Select the ADC_Channel_Vbat using ADC_RegularChannelConfig() or  
 570:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       ADC_InjectedChannelConfig() functions 
 571:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****    3. Get the voltage value, using ADC_GetConversionValue() or  
 572:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       ADC_GetInjectedConversionValue().
 573:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  
 574:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @endverbatim
 575:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @{
 576:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 577:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 578:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 579:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 580:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the temperature sensor and Vrefint channels.
 581:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the temperature sensor and Vrefint channels.
 582:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 583:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 584:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 585:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_TempSensorVrefintCmd(FunctionalState NewState)                
 586:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 1175              		.loc 1 586 0
 1176              		.cfi_startproc
 1177              		@ args = 0, pretend = 0, frame = 8
 1178              		@ frame_needed = 1, uses_anonymous_args = 0
 1179 0000 80B5     		push	{r7, lr}
 1180              	.LCFI26:
 1181              		.cfi_def_cfa_offset 8
 1182              		.cfi_offset 7, -8
 1183              		.cfi_offset 14, -4
 1184 0002 82B0     		sub	sp, sp, #8
 1185              	.LCFI27:
 1186              		.cfi_def_cfa_offset 16
 1187 0004 00AF     		add	r7, sp, #0
 1188              	.LCFI28:
 1189              		.cfi_def_cfa_register 7
 1190 0006 0346     		mov	r3, r0
 1191 0008 FB71     		strb	r3, [r7, #7]
 587:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 588:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1192              		.loc 1 588 0
 1193 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1194 000c 002B     		cmp	r3, #0
 1195 000e 0AD0     		beq	.L35
 1196              		.loc 1 588 0 is_stmt 0 discriminator 1
 1197 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1198 0012 012B     		cmp	r3, #1
 1199 0014 07D0     		beq	.L35
 1200 0016 40F20000 		movw	r0, #:lower16:.LC0
 1201 001a C0F20000 		movt	r0, #:upper16:.LC0
 1202 001e 4FF41371 		mov	r1, #588
 1203 0022 FFF7FEFF 		bl	assert_failed
 1204              	.L35:
 589:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 1205              		.loc 1 589 0 is_stmt 1
 1206 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1207 0028 002B     		cmp	r3, #0
 1208 002a 0CD0     		beq	.L36
 590:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 591:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Enable the temperature sensor and Vrefint channel*/
 592:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADC->CCR |= (uint32_t)ADC_CCR_TSVREFE;
 1209              		.loc 1 592 0
 1210 002c 4FF40C53 		mov	r3, #8960
 1211 0030 C4F20103 		movt	r3, 16385
 1212 0034 4FF40C52 		mov	r2, #8960
 1213 0038 C4F20102 		movt	r2, 16385
 1214 003c 5268     		ldr	r2, [r2, #4]
 1215 003e 42F40002 		orr	r2, r2, #8388608
 1216 0042 5A60     		str	r2, [r3, #4]
 1217 0044 0BE0     		b	.L34
 1218              	.L36:
 593:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 594:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
 595:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 596:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Disable the temperature sensor and Vrefint channel*/
 597:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADC->CCR &= (uint32_t)(~ADC_CCR_TSVREFE);
 1219              		.loc 1 597 0
 1220 0046 4FF40C53 		mov	r3, #8960
 1221 004a C4F20103 		movt	r3, 16385
 1222 004e 4FF40C52 		mov	r2, #8960
 1223 0052 C4F20102 		movt	r2, 16385
 1224 0056 5268     		ldr	r2, [r2, #4]
 1225 0058 22F40002 		bic	r2, r2, #8388608
 1226 005c 5A60     		str	r2, [r3, #4]
 1227              	.L34:
 598:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 599:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 1228              		.loc 1 599 0
 1229 005e 0837     		adds	r7, r7, #8
 1230 0060 BD46     		mov	sp, r7
 1231              		@ sp needed
 1232 0062 80BD     		pop	{r7, pc}
 1233              		.cfi_endproc
 1234              	.LFE119:
 1236              		.section	.text.ADC_VBATCmd,"ax",%progbits
 1237              		.align	2
 1238              		.global	ADC_VBATCmd
 1239              		.thumb
 1240              		.thumb_func
 1242              	ADC_VBATCmd:
 1243              	.LFB120:
 600:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 601:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 602:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the VBAT (Voltage Battery) channel.
 603:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the VBAT channel.
 604:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 605:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 606:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 607:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_VBATCmd(FunctionalState NewState)                             
 608:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 1244              		.loc 1 608 0
 1245              		.cfi_startproc
 1246              		@ args = 0, pretend = 0, frame = 8
 1247              		@ frame_needed = 1, uses_anonymous_args = 0
 1248 0000 80B5     		push	{r7, lr}
 1249              	.LCFI29:
 1250              		.cfi_def_cfa_offset 8
 1251              		.cfi_offset 7, -8
 1252              		.cfi_offset 14, -4
 1253 0002 82B0     		sub	sp, sp, #8
 1254              	.LCFI30:
 1255              		.cfi_def_cfa_offset 16
 1256 0004 00AF     		add	r7, sp, #0
 1257              	.LCFI31:
 1258              		.cfi_def_cfa_register 7
 1259 0006 0346     		mov	r3, r0
 1260 0008 FB71     		strb	r3, [r7, #7]
 609:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 610:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1261              		.loc 1 610 0
 1262 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1263 000c 002B     		cmp	r3, #0
 1264 000e 0AD0     		beq	.L39
 1265              		.loc 1 610 0 is_stmt 0 discriminator 1
 1266 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1267 0012 012B     		cmp	r3, #1
 1268 0014 07D0     		beq	.L39
 1269 0016 40F20000 		movw	r0, #:lower16:.LC0
 1270 001a C0F20000 		movt	r0, #:upper16:.LC0
 1271 001e 40F26221 		movw	r1, #610
 1272 0022 FFF7FEFF 		bl	assert_failed
 1273              	.L39:
 611:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 1274              		.loc 1 611 0 is_stmt 1
 1275 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1276 0028 002B     		cmp	r3, #0
 1277 002a 0CD0     		beq	.L40
 612:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 613:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Enable the VBAT channel*/
 614:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADC->CCR |= (uint32_t)ADC_CCR_VBATE;
 1278              		.loc 1 614 0
 1279 002c 4FF40C53 		mov	r3, #8960
 1280 0030 C4F20103 		movt	r3, 16385
 1281 0034 4FF40C52 		mov	r2, #8960
 1282 0038 C4F20102 		movt	r2, 16385
 1283 003c 5268     		ldr	r2, [r2, #4]
 1284 003e 42F48002 		orr	r2, r2, #4194304
 1285 0042 5A60     		str	r2, [r3, #4]
 1286 0044 0BE0     		b	.L38
 1287              	.L40:
 615:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 616:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
 617:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 618:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Disable the VBAT channel*/
 619:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADC->CCR &= (uint32_t)(~ADC_CCR_VBATE);
 1288              		.loc 1 619 0
 1289 0046 4FF40C53 		mov	r3, #8960
 1290 004a C4F20103 		movt	r3, 16385
 1291 004e 4FF40C52 		mov	r2, #8960
 1292 0052 C4F20102 		movt	r2, 16385
 1293 0056 5268     		ldr	r2, [r2, #4]
 1294 0058 22F48002 		bic	r2, r2, #4194304
 1295 005c 5A60     		str	r2, [r3, #4]
 1296              	.L38:
 620:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 621:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 1297              		.loc 1 621 0
 1298 005e 0837     		adds	r7, r7, #8
 1299 0060 BD46     		mov	sp, r7
 1300              		@ sp needed
 1301 0062 80BD     		pop	{r7, pc}
 1302              		.cfi_endproc
 1303              	.LFE120:
 1305              		.section	.text.ADC_RegularChannelConfig,"ax",%progbits
 1306              		.align	2
 1307              		.global	ADC_RegularChannelConfig
 1308              		.thumb
 1309              		.thumb_func
 1311              	ADC_RegularChannelConfig:
 1312              	.LFB121:
 622:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 623:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 624:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @}
 625:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 626:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 627:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /** @defgroup ADC_Group4 Regular Channels Configuration functions
 628:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *  @brief   Regular Channels Configuration functions 
 629:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *
 630:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @verbatim   
 631:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================
 632:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                   Regular Channels Configuration functions
 633:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================  
 634:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 635:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   This section provides functions allowing to manage the ADC's regular channels,
 636:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   it is composed of 2 sub sections : 
 637:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 638:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   1. Configuration and management functions for regular channels: This subsection 
 639:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      provides functions allowing to configure the ADC regular channels :    
 640:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           - Configure the rank in the regular group sequencer for each channel
 641:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           - Configure the sampling time for each channel
 642:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           - select the conversion Trigger for regular channels
 643:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           - select the desired EOC event behavior configuration
 644:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           - Activate the continuous Mode  (*)
 645:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           - Activate the Discontinuous Mode 
 646:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      Please Note that the following features for regular channels are configurated
 647:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      using the ADC_Init() function : 
 648:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           - scan mode activation 
 649:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           - continuous mode activation (**) 
 650:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           - External trigger source  
 651:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           - External trigger edge 
 652:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           - number of conversion in the regular channels group sequencer.
 653:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      
 654:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      @note (*) and (**) are performing the same configuration
 655:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      
 656:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   2. Get the conversion data: This subsection provides an important function in 
 657:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      the ADC peripheral since it returns the converted data of the current 
 658:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      regular channel. When the Conversion value is read, the EOC Flag is 
 659:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      automatically cleared.
 660:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      
 661:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      @note For multi ADC mode, the last ADC1, ADC2 and ADC3 regular conversions 
 662:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            results data (in the selected multi mode) can be returned in the same 
 663:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            time using ADC_GetMultiModeConversionValue() function. 
 664:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****        
 665:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 666:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @endverbatim
 667:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @{
 668:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 669:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 670:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Configures for the selected ADC regular channel its corresponding
 671:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         rank in the sequencer and its sample time.
 672:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 673:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
 674:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
 675:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_0: ADC Channel0 selected
 676:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_1: ADC Channel1 selected
 677:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_2: ADC Channel2 selected
 678:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_3: ADC Channel3 selected
 679:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_4: ADC Channel4 selected
 680:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_5: ADC Channel5 selected
 681:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_6: ADC Channel6 selected
 682:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_7: ADC Channel7 selected
 683:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_8: ADC Channel8 selected
 684:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_9: ADC Channel9 selected
 685:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_10: ADC Channel10 selected
 686:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_11: ADC Channel11 selected
 687:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_12: ADC Channel12 selected
 688:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_13: ADC Channel13 selected
 689:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_14: ADC Channel14 selected
 690:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_15: ADC Channel15 selected
 691:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_16: ADC Channel16 selected
 692:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_17: ADC Channel17 selected
 693:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_18: ADC Channel18 selected                       
 694:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  Rank: The rank in the regular group sequencer.
 695:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter must be between 1 to 16.
 696:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
 697:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
 698:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_3Cycles: Sample time equal to 3 cycles
 699:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_15Cycles: Sample time equal to 15 cycles
 700:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_28Cycles: Sample time equal to 28 cycles
 701:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_56Cycles: Sample time equal to 56 cycles	
 702:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_84Cycles: Sample time equal to 84 cycles	
 703:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_112Cycles: Sample time equal to 112 cycles	
 704:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_144Cycles: Sample time equal to 144 cycles	
 705:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_480Cycles: Sample time equal to 480 cycles	
 706:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 707:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 708:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_RegularChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sam
 709:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 1313              		.loc 1 709 0
 1314              		.cfi_startproc
 1315              		@ args = 0, pretend = 0, frame = 16
 1316              		@ frame_needed = 1, uses_anonymous_args = 0
 1317 0000 80B5     		push	{r7, lr}
 1318              	.LCFI32:
 1319              		.cfi_def_cfa_offset 8
 1320              		.cfi_offset 7, -8
 1321              		.cfi_offset 14, -4
 1322 0002 84B0     		sub	sp, sp, #16
 1323              	.LCFI33:
 1324              		.cfi_def_cfa_offset 24
 1325 0004 00AF     		add	r7, sp, #0
 1326              	.LCFI34:
 1327              		.cfi_def_cfa_register 7
 1328 0006 7860     		str	r0, [r7, #4]
 1329 0008 F970     		strb	r1, [r7, #3]
 1330 000a BA70     		strb	r2, [r7, #2]
 1331 000c 7B70     		strb	r3, [r7, #1]
 710:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
 1332              		.loc 1 710 0
 1333 000e 0023     		movs	r3, #0
 1334 0010 FB60     		str	r3, [r7, #12]
 1335 0012 0023     		movs	r3, #0
 1336 0014 BB60     		str	r3, [r7, #8]
 711:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 712:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1337              		.loc 1 712 0
 1338 0016 7A68     		ldr	r2, [r7, #4]
 1339 0018 4FF40053 		mov	r3, #8192
 1340 001c C4F20103 		movt	r3, 16385
 1341 0020 9A42     		cmp	r2, r3
 1342 0022 15D0     		beq	.L43
 1343              		.loc 1 712 0 is_stmt 0 discriminator 1
 1344 0024 7A68     		ldr	r2, [r7, #4]
 1345 0026 4FF40453 		mov	r3, #8448
 1346 002a C4F20103 		movt	r3, 16385
 1347 002e 9A42     		cmp	r2, r3
 1348 0030 0ED0     		beq	.L43
 1349 0032 7A68     		ldr	r2, [r7, #4]
 1350 0034 4FF40853 		mov	r3, #8704
 1351 0038 C4F20103 		movt	r3, 16385
 1352 003c 9A42     		cmp	r2, r3
 1353 003e 07D0     		beq	.L43
 1354 0040 40F20000 		movw	r0, #:lower16:.LC0
 1355 0044 C0F20000 		movt	r0, #:upper16:.LC0
 1356 0048 4FF43271 		mov	r1, #712
 1357 004c FFF7FEFF 		bl	assert_failed
 1358              	.L43:
 713:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 1359              		.loc 1 713 0 is_stmt 1
 1360 0050 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1361 0052 002B     		cmp	r3, #0
 1362 0054 3DD0     		beq	.L44
 1363              		.loc 1 713 0 is_stmt 0 discriminator 1
 1364 0056 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1365 0058 012B     		cmp	r3, #1
 1366 005a 3AD0     		beq	.L44
 1367 005c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1368 005e 022B     		cmp	r3, #2
 1369 0060 37D0     		beq	.L44
 1370 0062 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1371 0064 032B     		cmp	r3, #3
 1372 0066 34D0     		beq	.L44
 1373 0068 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1374 006a 042B     		cmp	r3, #4
 1375 006c 31D0     		beq	.L44
 1376 006e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1377 0070 052B     		cmp	r3, #5
 1378 0072 2ED0     		beq	.L44
 1379 0074 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1380 0076 062B     		cmp	r3, #6
 1381 0078 2BD0     		beq	.L44
 1382 007a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1383 007c 072B     		cmp	r3, #7
 1384 007e 28D0     		beq	.L44
 1385 0080 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1386 0082 082B     		cmp	r3, #8
 1387 0084 25D0     		beq	.L44
 1388 0086 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1389 0088 092B     		cmp	r3, #9
 1390 008a 22D0     		beq	.L44
 1391 008c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1392 008e 0A2B     		cmp	r3, #10
 1393 0090 1FD0     		beq	.L44
 1394 0092 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1395 0094 0B2B     		cmp	r3, #11
 1396 0096 1CD0     		beq	.L44
 1397 0098 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1398 009a 0C2B     		cmp	r3, #12
 1399 009c 19D0     		beq	.L44
 1400 009e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1401 00a0 0D2B     		cmp	r3, #13
 1402 00a2 16D0     		beq	.L44
 1403 00a4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1404 00a6 0E2B     		cmp	r3, #14
 1405 00a8 13D0     		beq	.L44
 1406 00aa FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1407 00ac 0F2B     		cmp	r3, #15
 1408 00ae 10D0     		beq	.L44
 1409 00b0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1410 00b2 102B     		cmp	r3, #16
 1411 00b4 0DD0     		beq	.L44
 1412 00b6 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1413 00b8 112B     		cmp	r3, #17
 1414 00ba 0AD0     		beq	.L44
 1415 00bc FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1416 00be 122B     		cmp	r3, #18
 1417 00c0 07D0     		beq	.L44
 1418 00c2 40F20000 		movw	r0, #:lower16:.LC0
 1419 00c6 C0F20000 		movt	r0, #:upper16:.LC0
 1420 00ca 40F2C921 		movw	r1, #713
 1421 00ce FFF7FEFF 		bl	assert_failed
 1422              	.L44:
 714:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(Rank));
 1423              		.loc 1 714 0 is_stmt 1
 1424 00d2 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1425 00d4 002B     		cmp	r3, #0
 1426 00d6 02D0     		beq	.L45
 1427              		.loc 1 714 0 is_stmt 0 discriminator 2
 1428 00d8 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1429 00da 102B     		cmp	r3, #16
 1430 00dc 07D9     		bls	.L46
 1431              	.L45:
 1432              		.loc 1 714 0 discriminator 1
 1433 00de 40F20000 		movw	r0, #:lower16:.LC0
 1434 00e2 C0F20000 		movt	r0, #:upper16:.LC0
 1435 00e6 40F2CA21 		movw	r1, #714
 1436 00ea FFF7FEFF 		bl	assert_failed
 1437              	.L46:
 715:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 1438              		.loc 1 715 0 is_stmt 1
 1439 00ee 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1440 00f0 002B     		cmp	r3, #0
 1441 00f2 1CD0     		beq	.L47
 1442              		.loc 1 715 0 is_stmt 0 discriminator 1
 1443 00f4 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1444 00f6 012B     		cmp	r3, #1
 1445 00f8 19D0     		beq	.L47
 1446 00fa 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1447 00fc 022B     		cmp	r3, #2
 1448 00fe 16D0     		beq	.L47
 1449 0100 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1450 0102 032B     		cmp	r3, #3
 1451 0104 13D0     		beq	.L47
 1452 0106 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1453 0108 042B     		cmp	r3, #4
 1454 010a 10D0     		beq	.L47
 1455 010c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1456 010e 052B     		cmp	r3, #5
 1457 0110 0DD0     		beq	.L47
 1458 0112 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1459 0114 062B     		cmp	r3, #6
 1460 0116 0AD0     		beq	.L47
 1461 0118 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1462 011a 072B     		cmp	r3, #7
 1463 011c 07D0     		beq	.L47
 1464 011e 40F20000 		movw	r0, #:lower16:.LC0
 1465 0122 C0F20000 		movt	r0, #:upper16:.LC0
 1466 0126 40F2CB21 		movw	r1, #715
 1467 012a FFF7FEFF 		bl	assert_failed
 1468              	.L47:
 716:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 717:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
 718:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 1469              		.loc 1 718 0 is_stmt 1
 1470 012e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1471 0130 092B     		cmp	r3, #9
 1472 0132 23D9     		bls	.L48
 719:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 720:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Get the old register value */
 721:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR1;
 1473              		.loc 1 721 0
 1474 0134 7B68     		ldr	r3, [r7, #4]
 1475 0136 DB68     		ldr	r3, [r3, #12]
 1476 0138 FB60     		str	r3, [r7, #12]
 722:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 723:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 724:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = SMPR1_SMP_SET << (3 * (ADC_Channel - 10));
 1477              		.loc 1 724 0
 1478 013a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1479 013c A3F10A02 		sub	r2, r3, #10
 1480 0140 1346     		mov	r3, r2
 1481 0142 5B00     		lsls	r3, r3, #1
 1482 0144 1344     		add	r3, r3, r2
 1483 0146 0722     		movs	r2, #7
 1484 0148 02FA03F3 		lsl	r3, r2, r3
 1485 014c BB60     		str	r3, [r7, #8]
 725:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 726:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Clear the old sample time */
 727:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 1486              		.loc 1 727 0
 1487 014e BB68     		ldr	r3, [r7, #8]
 1488 0150 DB43     		mvns	r3, r3
 1489 0152 FA68     		ldr	r2, [r7, #12]
 1490 0154 1340     		ands	r3, r3, r2
 1491 0156 FB60     		str	r3, [r7, #12]
 728:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 729:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 730:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * (ADC_Channel - 10));
 1492              		.loc 1 730 0
 1493 0158 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 1494 015a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1495 015c A3F10A02 		sub	r2, r3, #10
 1496 0160 1346     		mov	r3, r2
 1497 0162 5B00     		lsls	r3, r3, #1
 1498 0164 1344     		add	r3, r3, r2
 1499 0166 01FA03F3 		lsl	r3, r1, r3
 1500 016a BB60     		str	r3, [r7, #8]
 731:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 732:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Set the new sample time */
 733:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 1501              		.loc 1 733 0
 1502 016c FA68     		ldr	r2, [r7, #12]
 1503 016e BB68     		ldr	r3, [r7, #8]
 1504 0170 1343     		orrs	r3, r3, r2
 1505 0172 FB60     		str	r3, [r7, #12]
 734:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 735:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Store the new register value */
 736:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->SMPR1 = tmpreg1;
 1506              		.loc 1 736 0
 1507 0174 7B68     		ldr	r3, [r7, #4]
 1508 0176 FA68     		ldr	r2, [r7, #12]
 1509 0178 DA60     		str	r2, [r3, #12]
 1510 017a 1EE0     		b	.L49
 1511              	.L48:
 737:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 738:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
 739:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 740:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Get the old register value */
 741:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR2;
 1512              		.loc 1 741 0
 1513 017c 7B68     		ldr	r3, [r7, #4]
 1514 017e 1B69     		ldr	r3, [r3, #16]
 1515 0180 FB60     		str	r3, [r7, #12]
 742:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 743:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 744:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = SMPR2_SMP_SET << (3 * ADC_Channel);
 1516              		.loc 1 744 0
 1517 0182 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1518 0184 1346     		mov	r3, r2
 1519 0186 5B00     		lsls	r3, r3, #1
 1520 0188 1344     		add	r3, r3, r2
 1521 018a 0722     		movs	r2, #7
 1522 018c 02FA03F3 		lsl	r3, r2, r3
 1523 0190 BB60     		str	r3, [r7, #8]
 745:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 746:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Clear the old sample time */
 747:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 1524              		.loc 1 747 0
 1525 0192 BB68     		ldr	r3, [r7, #8]
 1526 0194 DB43     		mvns	r3, r3
 1527 0196 FA68     		ldr	r2, [r7, #12]
 1528 0198 1340     		ands	r3, r3, r2
 1529 019a FB60     		str	r3, [r7, #12]
 748:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 749:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 750:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 1530              		.loc 1 750 0
 1531 019c 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 1532 019e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1533 01a0 1346     		mov	r3, r2
 1534 01a2 5B00     		lsls	r3, r3, #1
 1535 01a4 1344     		add	r3, r3, r2
 1536 01a6 01FA03F3 		lsl	r3, r1, r3
 1537 01aa BB60     		str	r3, [r7, #8]
 751:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 752:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Set the new sample time */
 753:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 1538              		.loc 1 753 0
 1539 01ac FA68     		ldr	r2, [r7, #12]
 1540 01ae BB68     		ldr	r3, [r7, #8]
 1541 01b0 1343     		orrs	r3, r3, r2
 1542 01b2 FB60     		str	r3, [r7, #12]
 754:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 755:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Store the new register value */
 756:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->SMPR2 = tmpreg1;
 1543              		.loc 1 756 0
 1544 01b4 7B68     		ldr	r3, [r7, #4]
 1545 01b6 FA68     		ldr	r2, [r7, #12]
 1546 01b8 1A61     		str	r2, [r3, #16]
 1547              	.L49:
 757:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 758:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* For Rank 1 to 6 */
 759:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (Rank < 7)
 1548              		.loc 1 759 0
 1549 01ba BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1550 01bc 062B     		cmp	r3, #6
 1551 01be 21D8     		bhi	.L50
 760:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 761:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Get the old register value */
 762:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SQR3;
 1552              		.loc 1 762 0
 1553 01c0 7B68     		ldr	r3, [r7, #4]
 1554 01c2 5B6B     		ldr	r3, [r3, #52]
 1555 01c4 FB60     		str	r3, [r7, #12]
 763:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 764:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 765:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = SQR3_SQ_SET << (5 * (Rank - 1));
 1556              		.loc 1 765 0
 1557 01c6 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1558 01c8 5A1E     		subs	r2, r3, #1
 1559 01ca 1346     		mov	r3, r2
 1560 01cc 9B00     		lsls	r3, r3, #2
 1561 01ce 1344     		add	r3, r3, r2
 1562 01d0 1F22     		movs	r2, #31
 1563 01d2 02FA03F3 		lsl	r3, r2, r3
 1564 01d6 BB60     		str	r3, [r7, #8]
 766:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 767:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Clear the old SQx bits for the selected rank */
 768:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 1565              		.loc 1 768 0
 1566 01d8 BB68     		ldr	r3, [r7, #8]
 1567 01da DB43     		mvns	r3, r3
 1568 01dc FA68     		ldr	r2, [r7, #12]
 1569 01de 1340     		ands	r3, r3, r2
 1570 01e0 FB60     		str	r3, [r7, #12]
 769:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 770:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 771:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 1));
 1571              		.loc 1 771 0
 1572 01e2 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1573 01e4 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1574 01e6 5A1E     		subs	r2, r3, #1
 1575 01e8 1346     		mov	r3, r2
 1576 01ea 9B00     		lsls	r3, r3, #2
 1577 01ec 1344     		add	r3, r3, r2
 1578 01ee 01FA03F3 		lsl	r3, r1, r3
 1579 01f2 BB60     		str	r3, [r7, #8]
 772:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 773:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Set the SQx bits for the selected rank */
 774:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 1580              		.loc 1 774 0
 1581 01f4 FA68     		ldr	r2, [r7, #12]
 1582 01f6 BB68     		ldr	r3, [r7, #8]
 1583 01f8 1343     		orrs	r3, r3, r2
 1584 01fa FB60     		str	r3, [r7, #12]
 775:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 776:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Store the new register value */
 777:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->SQR3 = tmpreg1;
 1585              		.loc 1 777 0
 1586 01fc 7B68     		ldr	r3, [r7, #4]
 1587 01fe FA68     		ldr	r2, [r7, #12]
 1588 0200 5A63     		str	r2, [r3, #52]
 1589 0202 47E0     		b	.L42
 1590              	.L50:
 778:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 779:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* For Rank 7 to 12 */
 780:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else if (Rank < 13)
 1591              		.loc 1 780 0
 1592 0204 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1593 0206 0C2B     		cmp	r3, #12
 1594 0208 21D8     		bhi	.L52
 781:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 782:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Get the old register value */
 783:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SQR2;
 1595              		.loc 1 783 0
 1596 020a 7B68     		ldr	r3, [r7, #4]
 1597 020c 1B6B     		ldr	r3, [r3, #48]
 1598 020e FB60     		str	r3, [r7, #12]
 784:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 785:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 786:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = SQR2_SQ_SET << (5 * (Rank - 7));
 1599              		.loc 1 786 0
 1600 0210 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1601 0212 DA1F     		subs	r2, r3, #7
 1602 0214 1346     		mov	r3, r2
 1603 0216 9B00     		lsls	r3, r3, #2
 1604 0218 1344     		add	r3, r3, r2
 1605 021a 1F22     		movs	r2, #31
 1606 021c 02FA03F3 		lsl	r3, r2, r3
 1607 0220 BB60     		str	r3, [r7, #8]
 787:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 788:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Clear the old SQx bits for the selected rank */
 789:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 1608              		.loc 1 789 0
 1609 0222 BB68     		ldr	r3, [r7, #8]
 1610 0224 DB43     		mvns	r3, r3
 1611 0226 FA68     		ldr	r2, [r7, #12]
 1612 0228 1340     		ands	r3, r3, r2
 1613 022a FB60     		str	r3, [r7, #12]
 790:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 791:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 792:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 7));
 1614              		.loc 1 792 0
 1615 022c F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1616 022e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1617 0230 DA1F     		subs	r2, r3, #7
 1618 0232 1346     		mov	r3, r2
 1619 0234 9B00     		lsls	r3, r3, #2
 1620 0236 1344     		add	r3, r3, r2
 1621 0238 01FA03F3 		lsl	r3, r1, r3
 1622 023c BB60     		str	r3, [r7, #8]
 793:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 794:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Set the SQx bits for the selected rank */
 795:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 1623              		.loc 1 795 0
 1624 023e FA68     		ldr	r2, [r7, #12]
 1625 0240 BB68     		ldr	r3, [r7, #8]
 1626 0242 1343     		orrs	r3, r3, r2
 1627 0244 FB60     		str	r3, [r7, #12]
 796:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 797:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Store the new register value */
 798:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->SQR2 = tmpreg1;
 1628              		.loc 1 798 0
 1629 0246 7B68     		ldr	r3, [r7, #4]
 1630 0248 FA68     		ldr	r2, [r7, #12]
 1631 024a 1A63     		str	r2, [r3, #48]
 1632 024c 22E0     		b	.L42
 1633              	.L52:
 799:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 800:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* For Rank 13 to 16 */
 801:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
 802:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 803:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Get the old register value */
 804:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SQR1;
 1634              		.loc 1 804 0
 1635 024e 7B68     		ldr	r3, [r7, #4]
 1636 0250 DB6A     		ldr	r3, [r3, #44]
 1637 0252 FB60     		str	r3, [r7, #12]
 805:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 806:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 807:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = SQR1_SQ_SET << (5 * (Rank - 13));
 1638              		.loc 1 807 0
 1639 0254 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1640 0256 A3F10D02 		sub	r2, r3, #13
 1641 025a 1346     		mov	r3, r2
 1642 025c 9B00     		lsls	r3, r3, #2
 1643 025e 1344     		add	r3, r3, r2
 1644 0260 1F22     		movs	r2, #31
 1645 0262 02FA03F3 		lsl	r3, r2, r3
 1646 0266 BB60     		str	r3, [r7, #8]
 808:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 809:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Clear the old SQx bits for the selected rank */
 810:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 1647              		.loc 1 810 0
 1648 0268 BB68     		ldr	r3, [r7, #8]
 1649 026a DB43     		mvns	r3, r3
 1650 026c FA68     		ldr	r2, [r7, #12]
 1651 026e 1340     		ands	r3, r3, r2
 1652 0270 FB60     		str	r3, [r7, #12]
 811:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 812:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 813:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 13));
 1653              		.loc 1 813 0
 1654 0272 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1655 0274 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1656 0276 A3F10D02 		sub	r2, r3, #13
 1657 027a 1346     		mov	r3, r2
 1658 027c 9B00     		lsls	r3, r3, #2
 1659 027e 1344     		add	r3, r3, r2
 1660 0280 01FA03F3 		lsl	r3, r1, r3
 1661 0284 BB60     		str	r3, [r7, #8]
 814:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 815:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Set the SQx bits for the selected rank */
 816:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 1662              		.loc 1 816 0
 1663 0286 FA68     		ldr	r2, [r7, #12]
 1664 0288 BB68     		ldr	r3, [r7, #8]
 1665 028a 1343     		orrs	r3, r3, r2
 1666 028c FB60     		str	r3, [r7, #12]
 817:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 818:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Store the new register value */
 819:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->SQR1 = tmpreg1;
 1667              		.loc 1 819 0
 1668 028e 7B68     		ldr	r3, [r7, #4]
 1669 0290 FA68     		ldr	r2, [r7, #12]
 1670 0292 DA62     		str	r2, [r3, #44]
 1671              	.L42:
 820:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 821:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 1672              		.loc 1 821 0
 1673 0294 1037     		adds	r7, r7, #16
 1674 0296 BD46     		mov	sp, r7
 1675              		@ sp needed
 1676 0298 80BD     		pop	{r7, pc}
 1677              		.cfi_endproc
 1678              	.LFE121:
 1680 029a 00BF     		.section	.text.ADC_SoftwareStartConv,"ax",%progbits
 1681              		.align	2
 1682              		.global	ADC_SoftwareStartConv
 1683              		.thumb
 1684              		.thumb_func
 1686              	ADC_SoftwareStartConv:
 1687              	.LFB122:
 822:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 823:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 824:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables the selected ADC software start conversion of the regular channels.
 825:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 826:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 827:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 828:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_SoftwareStartConv(ADC_TypeDef* ADCx)
 829:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 1688              		.loc 1 829 0
 1689              		.cfi_startproc
 1690              		@ args = 0, pretend = 0, frame = 8
 1691              		@ frame_needed = 1, uses_anonymous_args = 0
 1692 0000 80B5     		push	{r7, lr}
 1693              	.LCFI35:
 1694              		.cfi_def_cfa_offset 8
 1695              		.cfi_offset 7, -8
 1696              		.cfi_offset 14, -4
 1697 0002 82B0     		sub	sp, sp, #8
 1698              	.LCFI36:
 1699              		.cfi_def_cfa_offset 16
 1700 0004 00AF     		add	r7, sp, #0
 1701              	.LCFI37:
 1702              		.cfi_def_cfa_register 7
 1703 0006 7860     		str	r0, [r7, #4]
 830:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 831:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1704              		.loc 1 831 0
 1705 0008 7A68     		ldr	r2, [r7, #4]
 1706 000a 4FF40053 		mov	r3, #8192
 1707 000e C4F20103 		movt	r3, 16385
 1708 0012 9A42     		cmp	r2, r3
 1709 0014 15D0     		beq	.L54
 1710              		.loc 1 831 0 is_stmt 0 discriminator 1
 1711 0016 7A68     		ldr	r2, [r7, #4]
 1712 0018 4FF40453 		mov	r3, #8448
 1713 001c C4F20103 		movt	r3, 16385
 1714 0020 9A42     		cmp	r2, r3
 1715 0022 0ED0     		beq	.L54
 1716 0024 7A68     		ldr	r2, [r7, #4]
 1717 0026 4FF40853 		mov	r3, #8704
 1718 002a C4F20103 		movt	r3, 16385
 1719 002e 9A42     		cmp	r2, r3
 1720 0030 07D0     		beq	.L54
 1721 0032 40F20000 		movw	r0, #:lower16:.LC0
 1722 0036 C0F20000 		movt	r0, #:upper16:.LC0
 1723 003a 40F23F31 		movw	r1, #831
 1724 003e FFF7FEFF 		bl	assert_failed
 1725              	.L54:
 832:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 833:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Enable the selected ADC conversion for regular group */
 834:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 1726              		.loc 1 834 0 is_stmt 1
 1727 0042 7B68     		ldr	r3, [r7, #4]
 1728 0044 9B68     		ldr	r3, [r3, #8]
 1729 0046 43F08042 		orr	r2, r3, #1073741824
 1730 004a 7B68     		ldr	r3, [r7, #4]
 1731 004c 9A60     		str	r2, [r3, #8]
 835:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 1732              		.loc 1 835 0
 1733 004e 0837     		adds	r7, r7, #8
 1734 0050 BD46     		mov	sp, r7
 1735              		@ sp needed
 1736 0052 80BD     		pop	{r7, pc}
 1737              		.cfi_endproc
 1738              	.LFE122:
 1740              		.section	.text.ADC_GetSoftwareStartConvStatus,"ax",%progbits
 1741              		.align	2
 1742              		.global	ADC_GetSoftwareStartConvStatus
 1743              		.thumb
 1744              		.thumb_func
 1746              	ADC_GetSoftwareStartConvStatus:
 1747              	.LFB123:
 836:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 837:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 838:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Gets the selected ADC Software start regular conversion Status.
 839:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 840:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval The new state of ADC software start conversion (SET or RESET).
 841:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 842:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** FlagStatus ADC_GetSoftwareStartConvStatus(ADC_TypeDef* ADCx)
 843:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 1748              		.loc 1 843 0
 1749              		.cfi_startproc
 1750              		@ args = 0, pretend = 0, frame = 16
 1751              		@ frame_needed = 1, uses_anonymous_args = 0
 1752 0000 80B5     		push	{r7, lr}
 1753              	.LCFI38:
 1754              		.cfi_def_cfa_offset 8
 1755              		.cfi_offset 7, -8
 1756              		.cfi_offset 14, -4
 1757 0002 84B0     		sub	sp, sp, #16
 1758              	.LCFI39:
 1759              		.cfi_def_cfa_offset 24
 1760 0004 00AF     		add	r7, sp, #0
 1761              	.LCFI40:
 1762              		.cfi_def_cfa_register 7
 1763 0006 7860     		str	r0, [r7, #4]
 844:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   FlagStatus bitstatus = RESET;
 1764              		.loc 1 844 0
 1765 0008 0023     		movs	r3, #0
 1766 000a FB73     		strb	r3, [r7, #15]
 845:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 846:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1767              		.loc 1 846 0
 1768 000c 7A68     		ldr	r2, [r7, #4]
 1769 000e 4FF40053 		mov	r3, #8192
 1770 0012 C4F20103 		movt	r3, 16385
 1771 0016 9A42     		cmp	r2, r3
 1772 0018 15D0     		beq	.L56
 1773              		.loc 1 846 0 is_stmt 0 discriminator 1
 1774 001a 7A68     		ldr	r2, [r7, #4]
 1775 001c 4FF40453 		mov	r3, #8448
 1776 0020 C4F20103 		movt	r3, 16385
 1777 0024 9A42     		cmp	r2, r3
 1778 0026 0ED0     		beq	.L56
 1779 0028 7A68     		ldr	r2, [r7, #4]
 1780 002a 4FF40853 		mov	r3, #8704
 1781 002e C4F20103 		movt	r3, 16385
 1782 0032 9A42     		cmp	r2, r3
 1783 0034 07D0     		beq	.L56
 1784 0036 40F20000 		movw	r0, #:lower16:.LC0
 1785 003a C0F20000 		movt	r0, #:upper16:.LC0
 1786 003e 40F24E31 		movw	r1, #846
 1787 0042 FFF7FEFF 		bl	assert_failed
 1788              	.L56:
 847:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 848:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the status of SWSTART bit */
 849:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if ((ADCx->CR2 & ADC_CR2_JSWSTART) != (uint32_t)RESET)
 1789              		.loc 1 849 0 is_stmt 1
 1790 0046 7B68     		ldr	r3, [r7, #4]
 1791 0048 9B68     		ldr	r3, [r3, #8]
 1792 004a 03F48003 		and	r3, r3, #4194304
 1793 004e 002B     		cmp	r3, #0
 1794 0050 02D0     		beq	.L57
 850:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 851:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* SWSTART bit is set */
 852:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     bitstatus = SET;
 1795              		.loc 1 852 0
 1796 0052 0123     		movs	r3, #1
 1797 0054 FB73     		strb	r3, [r7, #15]
 1798 0056 01E0     		b	.L58
 1799              	.L57:
 853:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 854:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
 855:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 856:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* SWSTART bit is reset */
 857:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     bitstatus = RESET;
 1800              		.loc 1 857 0
 1801 0058 0023     		movs	r3, #0
 1802 005a FB73     		strb	r3, [r7, #15]
 1803              	.L58:
 858:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 859:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 860:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Return the SWSTART bit status */
 861:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   return  bitstatus;
 1804              		.loc 1 861 0
 1805 005c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 862:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 1806              		.loc 1 862 0
 1807 005e 1846     		mov	r0, r3
 1808 0060 1037     		adds	r7, r7, #16
 1809 0062 BD46     		mov	sp, r7
 1810              		@ sp needed
 1811 0064 80BD     		pop	{r7, pc}
 1812              		.cfi_endproc
 1813              	.LFE123:
 1815 0066 00BF     		.section	.text.ADC_EOCOnEachRegularChannelCmd,"ax",%progbits
 1816              		.align	2
 1817              		.global	ADC_EOCOnEachRegularChannelCmd
 1818              		.thumb
 1819              		.thumb_func
 1821              	ADC_EOCOnEachRegularChannelCmd:
 1822              	.LFB124:
 863:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 864:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 865:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 866:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the EOC on each regular channel conversion
 867:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 868:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC EOC flag rising
 869:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 870:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 871:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 872:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_EOCOnEachRegularChannelCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 873:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 1823              		.loc 1 873 0
 1824              		.cfi_startproc
 1825              		@ args = 0, pretend = 0, frame = 8
 1826              		@ frame_needed = 1, uses_anonymous_args = 0
 1827 0000 80B5     		push	{r7, lr}
 1828              	.LCFI41:
 1829              		.cfi_def_cfa_offset 8
 1830              		.cfi_offset 7, -8
 1831              		.cfi_offset 14, -4
 1832 0002 82B0     		sub	sp, sp, #8
 1833              	.LCFI42:
 1834              		.cfi_def_cfa_offset 16
 1835 0004 00AF     		add	r7, sp, #0
 1836              	.LCFI43:
 1837              		.cfi_def_cfa_register 7
 1838 0006 7860     		str	r0, [r7, #4]
 1839 0008 0B46     		mov	r3, r1
 1840 000a FB70     		strb	r3, [r7, #3]
 874:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 875:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1841              		.loc 1 875 0
 1842 000c 7A68     		ldr	r2, [r7, #4]
 1843 000e 4FF40053 		mov	r3, #8192
 1844 0012 C4F20103 		movt	r3, 16385
 1845 0016 9A42     		cmp	r2, r3
 1846 0018 15D0     		beq	.L61
 1847              		.loc 1 875 0 is_stmt 0 discriminator 1
 1848 001a 7A68     		ldr	r2, [r7, #4]
 1849 001c 4FF40453 		mov	r3, #8448
 1850 0020 C4F20103 		movt	r3, 16385
 1851 0024 9A42     		cmp	r2, r3
 1852 0026 0ED0     		beq	.L61
 1853 0028 7A68     		ldr	r2, [r7, #4]
 1854 002a 4FF40853 		mov	r3, #8704
 1855 002e C4F20103 		movt	r3, 16385
 1856 0032 9A42     		cmp	r2, r3
 1857 0034 07D0     		beq	.L61
 1858 0036 40F20000 		movw	r0, #:lower16:.LC0
 1859 003a C0F20000 		movt	r0, #:upper16:.LC0
 1860 003e 40F26B31 		movw	r1, #875
 1861 0042 FFF7FEFF 		bl	assert_failed
 1862              	.L61:
 876:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1863              		.loc 1 876 0 is_stmt 1
 1864 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1865 0048 002B     		cmp	r3, #0
 1866 004a 0AD0     		beq	.L62
 1867              		.loc 1 876 0 is_stmt 0 discriminator 1
 1868 004c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1869 004e 012B     		cmp	r3, #1
 1870 0050 07D0     		beq	.L62
 1871 0052 40F20000 		movw	r0, #:lower16:.LC0
 1872 0056 C0F20000 		movt	r0, #:upper16:.LC0
 1873 005a 4FF45B71 		mov	r1, #876
 1874 005e FFF7FEFF 		bl	assert_failed
 1875              	.L62:
 877:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 878:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 1876              		.loc 1 878 0 is_stmt 1
 1877 0062 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1878 0064 002B     		cmp	r3, #0
 1879 0066 06D0     		beq	.L63
 879:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 880:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Enable the selected ADC EOC rising on each regular channel conversion */
 881:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_EOCS;
 1880              		.loc 1 881 0
 1881 0068 7B68     		ldr	r3, [r7, #4]
 1882 006a 9B68     		ldr	r3, [r3, #8]
 1883 006c 43F48062 		orr	r2, r3, #1024
 1884 0070 7B68     		ldr	r3, [r7, #4]
 1885 0072 9A60     		str	r2, [r3, #8]
 1886 0074 05E0     		b	.L60
 1887              	.L63:
 882:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 883:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
 884:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 885:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Disable the selected ADC EOC rising on each regular channel conversion */
 886:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_EOCS);
 1888              		.loc 1 886 0
 1889 0076 7B68     		ldr	r3, [r7, #4]
 1890 0078 9B68     		ldr	r3, [r3, #8]
 1891 007a 23F48062 		bic	r2, r3, #1024
 1892 007e 7B68     		ldr	r3, [r7, #4]
 1893 0080 9A60     		str	r2, [r3, #8]
 1894              	.L60:
 887:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 888:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 1895              		.loc 1 888 0
 1896 0082 0837     		adds	r7, r7, #8
 1897 0084 BD46     		mov	sp, r7
 1898              		@ sp needed
 1899 0086 80BD     		pop	{r7, pc}
 1900              		.cfi_endproc
 1901              	.LFE124:
 1903              		.section	.text.ADC_ContinuousModeCmd,"ax",%progbits
 1904              		.align	2
 1905              		.global	ADC_ContinuousModeCmd
 1906              		.thumb
 1907              		.thumb_func
 1909              	ADC_ContinuousModeCmd:
 1910              	.LFB125:
 889:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 890:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 891:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the ADC continuous conversion mode 
 892:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 893:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC continuous conversion mode
 894:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 895:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 896:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 897:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_ContinuousModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 898:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 1911              		.loc 1 898 0
 1912              		.cfi_startproc
 1913              		@ args = 0, pretend = 0, frame = 8
 1914              		@ frame_needed = 1, uses_anonymous_args = 0
 1915 0000 80B5     		push	{r7, lr}
 1916              	.LCFI44:
 1917              		.cfi_def_cfa_offset 8
 1918              		.cfi_offset 7, -8
 1919              		.cfi_offset 14, -4
 1920 0002 82B0     		sub	sp, sp, #8
 1921              	.LCFI45:
 1922              		.cfi_def_cfa_offset 16
 1923 0004 00AF     		add	r7, sp, #0
 1924              	.LCFI46:
 1925              		.cfi_def_cfa_register 7
 1926 0006 7860     		str	r0, [r7, #4]
 1927 0008 0B46     		mov	r3, r1
 1928 000a FB70     		strb	r3, [r7, #3]
 899:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 900:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1929              		.loc 1 900 0
 1930 000c 7A68     		ldr	r2, [r7, #4]
 1931 000e 4FF40053 		mov	r3, #8192
 1932 0012 C4F20103 		movt	r3, 16385
 1933 0016 9A42     		cmp	r2, r3
 1934 0018 15D0     		beq	.L66
 1935              		.loc 1 900 0 is_stmt 0 discriminator 1
 1936 001a 7A68     		ldr	r2, [r7, #4]
 1937 001c 4FF40453 		mov	r3, #8448
 1938 0020 C4F20103 		movt	r3, 16385
 1939 0024 9A42     		cmp	r2, r3
 1940 0026 0ED0     		beq	.L66
 1941 0028 7A68     		ldr	r2, [r7, #4]
 1942 002a 4FF40853 		mov	r3, #8704
 1943 002e C4F20103 		movt	r3, 16385
 1944 0032 9A42     		cmp	r2, r3
 1945 0034 07D0     		beq	.L66
 1946 0036 40F20000 		movw	r0, #:lower16:.LC0
 1947 003a C0F20000 		movt	r0, #:upper16:.LC0
 1948 003e 4FF46171 		mov	r1, #900
 1949 0042 FFF7FEFF 		bl	assert_failed
 1950              	.L66:
 901:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1951              		.loc 1 901 0 is_stmt 1
 1952 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1953 0048 002B     		cmp	r3, #0
 1954 004a 0AD0     		beq	.L67
 1955              		.loc 1 901 0 is_stmt 0 discriminator 1
 1956 004c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1957 004e 012B     		cmp	r3, #1
 1958 0050 07D0     		beq	.L67
 1959 0052 40F20000 		movw	r0, #:lower16:.LC0
 1960 0056 C0F20000 		movt	r0, #:upper16:.LC0
 1961 005a 40F28531 		movw	r1, #901
 1962 005e FFF7FEFF 		bl	assert_failed
 1963              	.L67:
 902:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 903:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 1964              		.loc 1 903 0 is_stmt 1
 1965 0062 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1966 0064 002B     		cmp	r3, #0
 1967 0066 06D0     		beq	.L68
 904:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 905:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Enable the selected ADC continuous conversion mode */
 906:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_CONT;
 1968              		.loc 1 906 0
 1969 0068 7B68     		ldr	r3, [r7, #4]
 1970 006a 9B68     		ldr	r3, [r3, #8]
 1971 006c 43F00202 		orr	r2, r3, #2
 1972 0070 7B68     		ldr	r3, [r7, #4]
 1973 0072 9A60     		str	r2, [r3, #8]
 1974 0074 05E0     		b	.L65
 1975              	.L68:
 907:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 908:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
 909:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 910:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Disable the selected ADC continuous conversion mode */
 911:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_CONT);
 1976              		.loc 1 911 0
 1977 0076 7B68     		ldr	r3, [r7, #4]
 1978 0078 9B68     		ldr	r3, [r3, #8]
 1979 007a 23F00202 		bic	r2, r3, #2
 1980 007e 7B68     		ldr	r3, [r7, #4]
 1981 0080 9A60     		str	r2, [r3, #8]
 1982              	.L65:
 912:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 913:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 1983              		.loc 1 913 0
 1984 0082 0837     		adds	r7, r7, #8
 1985 0084 BD46     		mov	sp, r7
 1986              		@ sp needed
 1987 0086 80BD     		pop	{r7, pc}
 1988              		.cfi_endproc
 1989              	.LFE125:
 1991              		.section	.text.ADC_DiscModeChannelCountConfig,"ax",%progbits
 1992              		.align	2
 1993              		.global	ADC_DiscModeChannelCountConfig
 1994              		.thumb
 1995              		.thumb_func
 1997              	ADC_DiscModeChannelCountConfig:
 1998              	.LFB126:
 914:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 915:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 916:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Configures the discontinuous mode for the selected ADC regular group 
 917:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         channel.
 918:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 919:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  Number: specifies the discontinuous mode regular channel count value.
 920:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This number must be between 1 and 8.
 921:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 922:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 923:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_DiscModeChannelCountConfig(ADC_TypeDef* ADCx, uint8_t Number)
 924:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 1999              		.loc 1 924 0
 2000              		.cfi_startproc
 2001              		@ args = 0, pretend = 0, frame = 16
 2002              		@ frame_needed = 1, uses_anonymous_args = 0
 2003 0000 80B5     		push	{r7, lr}
 2004              	.LCFI47:
 2005              		.cfi_def_cfa_offset 8
 2006              		.cfi_offset 7, -8
 2007              		.cfi_offset 14, -4
 2008 0002 84B0     		sub	sp, sp, #16
 2009              	.LCFI48:
 2010              		.cfi_def_cfa_offset 24
 2011 0004 00AF     		add	r7, sp, #0
 2012              	.LCFI49:
 2013              		.cfi_def_cfa_register 7
 2014 0006 7860     		str	r0, [r7, #4]
 2015 0008 0B46     		mov	r3, r1
 2016 000a FB70     		strb	r3, [r7, #3]
 925:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0;
 2017              		.loc 1 925 0
 2018 000c 0023     		movs	r3, #0
 2019 000e FB60     		str	r3, [r7, #12]
 926:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg2 = 0;
 2020              		.loc 1 926 0
 2021 0010 0023     		movs	r3, #0
 2022 0012 BB60     		str	r3, [r7, #8]
 927:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 928:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 929:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 2023              		.loc 1 929 0
 2024 0014 7A68     		ldr	r2, [r7, #4]
 2025 0016 4FF40053 		mov	r3, #8192
 2026 001a C4F20103 		movt	r3, 16385
 2027 001e 9A42     		cmp	r2, r3
 2028 0020 15D0     		beq	.L71
 2029              		.loc 1 929 0 is_stmt 0 discriminator 1
 2030 0022 7A68     		ldr	r2, [r7, #4]
 2031 0024 4FF40453 		mov	r3, #8448
 2032 0028 C4F20103 		movt	r3, 16385
 2033 002c 9A42     		cmp	r2, r3
 2034 002e 0ED0     		beq	.L71
 2035 0030 7A68     		ldr	r2, [r7, #4]
 2036 0032 4FF40853 		mov	r3, #8704
 2037 0036 C4F20103 		movt	r3, 16385
 2038 003a 9A42     		cmp	r2, r3
 2039 003c 07D0     		beq	.L71
 2040 003e 40F20000 		movw	r0, #:lower16:.LC0
 2041 0042 C0F20000 		movt	r0, #:upper16:.LC0
 2042 0046 40F2A131 		movw	r1, #929
 2043 004a FFF7FEFF 		bl	assert_failed
 2044              	.L71:
 930:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_REGULAR_DISC_NUMBER(Number));
 2045              		.loc 1 930 0 is_stmt 1
 2046 004e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2047 0050 002B     		cmp	r3, #0
 2048 0052 02D0     		beq	.L72
 2049              		.loc 1 930 0 is_stmt 0 discriminator 2
 2050 0054 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2051 0056 082B     		cmp	r3, #8
 2052 0058 07D9     		bls	.L73
 2053              	.L72:
 2054              		.loc 1 930 0 discriminator 1
 2055 005a 40F20000 		movw	r0, #:lower16:.LC0
 2056 005e C0F20000 		movt	r0, #:upper16:.LC0
 2057 0062 40F2A231 		movw	r1, #930
 2058 0066 FFF7FEFF 		bl	assert_failed
 2059              	.L73:
 931:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 932:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the old register value */
 933:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->CR1;
 2060              		.loc 1 933 0 is_stmt 1
 2061 006a 7B68     		ldr	r3, [r7, #4]
 2062 006c 5B68     		ldr	r3, [r3, #4]
 2063 006e FB60     		str	r3, [r7, #12]
 934:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 935:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear the old discontinuous mode channel count */
 936:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 &= CR1_DISCNUM_RESET;
 2064              		.loc 1 936 0
 2065 0070 FB68     		ldr	r3, [r7, #12]
 2066 0072 23F46043 		bic	r3, r3, #57344
 2067 0076 FB60     		str	r3, [r7, #12]
 937:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 938:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set the discontinuous mode channel count */
 939:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg2 = Number - 1;
 2068              		.loc 1 939 0
 2069 0078 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2070 007a 013B     		subs	r3, r3, #1
 2071 007c BB60     		str	r3, [r7, #8]
 940:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 |= tmpreg2 << 13;
 2072              		.loc 1 940 0
 2073 007e BB68     		ldr	r3, [r7, #8]
 2074 0080 5B03     		lsls	r3, r3, #13
 2075 0082 FA68     		ldr	r2, [r7, #12]
 2076 0084 1343     		orrs	r3, r3, r2
 2077 0086 FB60     		str	r3, [r7, #12]
 941:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 942:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Store the new register value */
 943:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->CR1 = tmpreg1;
 2078              		.loc 1 943 0
 2079 0088 7B68     		ldr	r3, [r7, #4]
 2080 008a FA68     		ldr	r2, [r7, #12]
 2081 008c 5A60     		str	r2, [r3, #4]
 944:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 2082              		.loc 1 944 0
 2083 008e 1037     		adds	r7, r7, #16
 2084 0090 BD46     		mov	sp, r7
 2085              		@ sp needed
 2086 0092 80BD     		pop	{r7, pc}
 2087              		.cfi_endproc
 2088              	.LFE126:
 2090              		.section	.text.ADC_DiscModeCmd,"ax",%progbits
 2091              		.align	2
 2092              		.global	ADC_DiscModeCmd
 2093              		.thumb
 2094              		.thumb_func
 2096              	ADC_DiscModeCmd:
 2097              	.LFB127:
 945:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 946:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 947:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the discontinuous mode on regular group channel 
 948:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         for the specified ADC
 949:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 950:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode on 
 951:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         regular group channel.
 952:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 953:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 954:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 955:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_DiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 956:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 2098              		.loc 1 956 0
 2099              		.cfi_startproc
 2100              		@ args = 0, pretend = 0, frame = 8
 2101              		@ frame_needed = 1, uses_anonymous_args = 0
 2102 0000 80B5     		push	{r7, lr}
 2103              	.LCFI50:
 2104              		.cfi_def_cfa_offset 8
 2105              		.cfi_offset 7, -8
 2106              		.cfi_offset 14, -4
 2107 0002 82B0     		sub	sp, sp, #8
 2108              	.LCFI51:
 2109              		.cfi_def_cfa_offset 16
 2110 0004 00AF     		add	r7, sp, #0
 2111              	.LCFI52:
 2112              		.cfi_def_cfa_register 7
 2113 0006 7860     		str	r0, [r7, #4]
 2114 0008 0B46     		mov	r3, r1
 2115 000a FB70     		strb	r3, [r7, #3]
 957:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 958:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 2116              		.loc 1 958 0
 2117 000c 7A68     		ldr	r2, [r7, #4]
 2118 000e 4FF40053 		mov	r3, #8192
 2119 0012 C4F20103 		movt	r3, 16385
 2120 0016 9A42     		cmp	r2, r3
 2121 0018 15D0     		beq	.L75
 2122              		.loc 1 958 0 is_stmt 0 discriminator 1
 2123 001a 7A68     		ldr	r2, [r7, #4]
 2124 001c 4FF40453 		mov	r3, #8448
 2125 0020 C4F20103 		movt	r3, 16385
 2126 0024 9A42     		cmp	r2, r3
 2127 0026 0ED0     		beq	.L75
 2128 0028 7A68     		ldr	r2, [r7, #4]
 2129 002a 4FF40853 		mov	r3, #8704
 2130 002e C4F20103 		movt	r3, 16385
 2131 0032 9A42     		cmp	r2, r3
 2132 0034 07D0     		beq	.L75
 2133 0036 40F20000 		movw	r0, #:lower16:.LC0
 2134 003a C0F20000 		movt	r0, #:upper16:.LC0
 2135 003e 40F2BE31 		movw	r1, #958
 2136 0042 FFF7FEFF 		bl	assert_failed
 2137              	.L75:
 959:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2138              		.loc 1 959 0 is_stmt 1
 2139 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2140 0048 002B     		cmp	r3, #0
 2141 004a 0AD0     		beq	.L76
 2142              		.loc 1 959 0 is_stmt 0 discriminator 1
 2143 004c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2144 004e 012B     		cmp	r3, #1
 2145 0050 07D0     		beq	.L76
 2146 0052 40F20000 		movw	r0, #:lower16:.LC0
 2147 0056 C0F20000 		movt	r0, #:upper16:.LC0
 2148 005a 40F2BF31 		movw	r1, #959
 2149 005e FFF7FEFF 		bl	assert_failed
 2150              	.L76:
 960:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 961:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 2151              		.loc 1 961 0 is_stmt 1
 2152 0062 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2153 0064 002B     		cmp	r3, #0
 2154 0066 06D0     		beq	.L77
 962:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 963:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Enable the selected ADC regular discontinuous mode */
 964:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 2155              		.loc 1 964 0
 2156 0068 7B68     		ldr	r3, [r7, #4]
 2157 006a 5B68     		ldr	r3, [r3, #4]
 2158 006c 43F40062 		orr	r2, r3, #2048
 2159 0070 7B68     		ldr	r3, [r7, #4]
 2160 0072 5A60     		str	r2, [r3, #4]
 2161 0074 05E0     		b	.L74
 2162              	.L77:
 965:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 966:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
 967:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 968:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Disable the selected ADC regular discontinuous mode */
 969:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR1 &= (uint32_t)(~ADC_CR1_DISCEN);
 2163              		.loc 1 969 0
 2164 0076 7B68     		ldr	r3, [r7, #4]
 2165 0078 5B68     		ldr	r3, [r3, #4]
 2166 007a 23F40062 		bic	r2, r3, #2048
 2167 007e 7B68     		ldr	r3, [r7, #4]
 2168 0080 5A60     		str	r2, [r3, #4]
 2169              	.L74:
 970:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 971:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 2170              		.loc 1 971 0
 2171 0082 0837     		adds	r7, r7, #8
 2172 0084 BD46     		mov	sp, r7
 2173              		@ sp needed
 2174 0086 80BD     		pop	{r7, pc}
 2175              		.cfi_endproc
 2176              	.LFE127:
 2178              		.section	.text.ADC_GetConversionValue,"ax",%progbits
 2179              		.align	2
 2180              		.global	ADC_GetConversionValue
 2181              		.thumb
 2182              		.thumb_func
 2184              	ADC_GetConversionValue:
 2185              	.LFB128:
 972:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 973:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 974:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Returns the last ADCx conversion result data for regular channel.
 975:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 976:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval The Data conversion value.
 977:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 978:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** uint16_t ADC_GetConversionValue(ADC_TypeDef* ADCx)
 979:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 2186              		.loc 1 979 0
 2187              		.cfi_startproc
 2188              		@ args = 0, pretend = 0, frame = 8
 2189              		@ frame_needed = 1, uses_anonymous_args = 0
 2190 0000 80B5     		push	{r7, lr}
 2191              	.LCFI53:
 2192              		.cfi_def_cfa_offset 8
 2193              		.cfi_offset 7, -8
 2194              		.cfi_offset 14, -4
 2195 0002 82B0     		sub	sp, sp, #8
 2196              	.LCFI54:
 2197              		.cfi_def_cfa_offset 16
 2198 0004 00AF     		add	r7, sp, #0
 2199              	.LCFI55:
 2200              		.cfi_def_cfa_register 7
 2201 0006 7860     		str	r0, [r7, #4]
 980:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 981:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 2202              		.loc 1 981 0
 2203 0008 7A68     		ldr	r2, [r7, #4]
 2204 000a 4FF40053 		mov	r3, #8192
 2205 000e C4F20103 		movt	r3, 16385
 2206 0012 9A42     		cmp	r2, r3
 2207 0014 15D0     		beq	.L80
 2208              		.loc 1 981 0 is_stmt 0 discriminator 1
 2209 0016 7A68     		ldr	r2, [r7, #4]
 2210 0018 4FF40453 		mov	r3, #8448
 2211 001c C4F20103 		movt	r3, 16385
 2212 0020 9A42     		cmp	r2, r3
 2213 0022 0ED0     		beq	.L80
 2214 0024 7A68     		ldr	r2, [r7, #4]
 2215 0026 4FF40853 		mov	r3, #8704
 2216 002a C4F20103 		movt	r3, 16385
 2217 002e 9A42     		cmp	r2, r3
 2218 0030 07D0     		beq	.L80
 2219 0032 40F20000 		movw	r0, #:lower16:.LC0
 2220 0036 C0F20000 		movt	r0, #:upper16:.LC0
 2221 003a 40F2D531 		movw	r1, #981
 2222 003e FFF7FEFF 		bl	assert_failed
 2223              	.L80:
 982:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 983:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Return the selected ADC conversion value */
 984:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   return (uint16_t) ADCx->DR;
 2224              		.loc 1 984 0 is_stmt 1
 2225 0042 7B68     		ldr	r3, [r7, #4]
 2226 0044 DB6C     		ldr	r3, [r3, #76]
 2227 0046 9BB2     		uxth	r3, r3
 985:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 2228              		.loc 1 985 0
 2229 0048 1846     		mov	r0, r3
 2230 004a 0837     		adds	r7, r7, #8
 2231 004c BD46     		mov	sp, r7
 2232              		@ sp needed
 2233 004e 80BD     		pop	{r7, pc}
 2234              		.cfi_endproc
 2235              	.LFE128:
 2237              		.section	.text.ADC_GetMultiModeConversionValue,"ax",%progbits
 2238              		.align	2
 2239              		.global	ADC_GetMultiModeConversionValue
 2240              		.thumb
 2241              		.thumb_func
 2243              	ADC_GetMultiModeConversionValue:
 2244              	.LFB129:
 986:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 987:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 988:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Returns the last ADC1, ADC2 and ADC3 regular conversions results 
 989:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         data in the selected multi mode.
 990:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  None  
 991:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval The Data conversion value.
 992:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @note   In dual mode, the value returned by this function is as following
 993:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *           Data[15:0] : these bits contain the regular data of ADC1.
 994:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *           Data[31:16]: these bits contain the regular data of ADC2.
 995:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @note   In triple mode, the value returned by this function is as following
 996:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *           Data[15:0] : these bits contain alternatively the regular data of ADC1, ADC3 and ADC2
 997:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *           Data[31:16]: these bits contain alternatively the regular data of ADC2, ADC1 and ADC3
 998:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 999:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** uint32_t ADC_GetMultiModeConversionValue(void)
1000:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 2245              		.loc 1 1000 0
 2246              		.cfi_startproc
 2247              		@ args = 0, pretend = 0, frame = 0
 2248              		@ frame_needed = 1, uses_anonymous_args = 0
 2249              		@ link register save eliminated.
 2250 0000 80B4     		push	{r7}
 2251              	.LCFI56:
 2252              		.cfi_def_cfa_offset 4
 2253              		.cfi_offset 7, -4
 2254 0002 00AF     		add	r7, sp, #0
 2255              	.LCFI57:
 2256              		.cfi_def_cfa_register 7
1001:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Return the multi mode conversion value */
1002:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   return (*(__IO uint32_t *) CDR_ADDRESS);
 2257              		.loc 1 1002 0
 2258 0004 42F20833 		movw	r3, #8968
 2259 0008 C4F20103 		movt	r3, 16385
 2260 000c 1B68     		ldr	r3, [r3]
1003:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 2261              		.loc 1 1003 0
 2262 000e 1846     		mov	r0, r3
 2263 0010 BD46     		mov	sp, r7
 2264              		@ sp needed
 2265 0012 5DF8047B 		ldr	r7, [sp], #4
 2266 0016 7047     		bx	lr
 2267              		.cfi_endproc
 2268              	.LFE129:
 2270              		.section	.text.ADC_DMACmd,"ax",%progbits
 2271              		.align	2
 2272              		.global	ADC_DMACmd
 2273              		.thumb
 2274              		.thumb_func
 2276              	ADC_DMACmd:
 2277              	.LFB130:
1004:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1005:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @}
1006:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1007:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1008:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /** @defgroup ADC_Group5 Regular Channels DMA Configuration functions
1009:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *  @brief   Regular Channels DMA Configuration functions 
1010:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *
1011:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @verbatim   
1012:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================
1013:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                    Regular Channels DMA Configuration functions
1014:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================  
1015:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1016:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   This section provides functions allowing to configure the DMA for ADC regular 
1017:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   channels.
1018:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   Since converted regular channel values are stored into a unique data register, 
1019:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   it is useful to use DMA for conversion of more than one regular channel. This 
1020:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   avoids the loss of the data already stored in the ADC Data register. 
1021:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1022:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   When the DMA mode is enabled (using the ADC_DMACmd() function), after each
1023:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   conversion of a regular channel, a DMA request is generated.
1024:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1025:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   Depending on the "DMA disable selection for Independent ADC mode" 
1026:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   configuration (using the ADC_DMARequestAfterLastTransferCmd() function), 
1027:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   at the end of the last DMA transfer, two possibilities are allowed:
1028:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   - No new DMA request is issued to the DMA controller (feature DISABLED) 
1029:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   - Requests can continue to be generated (feature ENABLED).
1030:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1031:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   Depending on the "DMA disable selection for multi ADC mode" configuration 
1032:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   (using the void ADC_MultiModeDMARequestAfterLastTransferCmd() function), 
1033:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   at the end of the last DMA transfer, two possibilities are allowed:
1034:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   - No new DMA request is issued to the DMA controller (feature DISABLED) 
1035:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   - Requests can continue to be generated (feature ENABLED).
1036:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1037:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @endverbatim
1038:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @{
1039:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1040:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1041:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  /**
1042:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the specified ADC DMA request.
1043:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1044:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC DMA transfer.
1045:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1046:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1047:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1048:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_DMACmd(ADC_TypeDef* ADCx, FunctionalState NewState)
1049:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 2278              		.loc 1 1049 0
 2279              		.cfi_startproc
 2280              		@ args = 0, pretend = 0, frame = 8
 2281              		@ frame_needed = 1, uses_anonymous_args = 0
 2282 0000 80B5     		push	{r7, lr}
 2283              	.LCFI58:
 2284              		.cfi_def_cfa_offset 8
 2285              		.cfi_offset 7, -8
 2286              		.cfi_offset 14, -4
 2287 0002 82B0     		sub	sp, sp, #8
 2288              	.LCFI59:
 2289              		.cfi_def_cfa_offset 16
 2290 0004 00AF     		add	r7, sp, #0
 2291              	.LCFI60:
 2292              		.cfi_def_cfa_register 7
 2293 0006 7860     		str	r0, [r7, #4]
 2294 0008 0B46     		mov	r3, r1
 2295 000a FB70     		strb	r3, [r7, #3]
1050:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1051:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 2296              		.loc 1 1051 0
 2297 000c 7A68     		ldr	r2, [r7, #4]
 2298 000e 4FF40053 		mov	r3, #8192
 2299 0012 C4F20103 		movt	r3, 16385
 2300 0016 9A42     		cmp	r2, r3
 2301 0018 15D0     		beq	.L85
 2302              		.loc 1 1051 0 is_stmt 0 discriminator 1
 2303 001a 7A68     		ldr	r2, [r7, #4]
 2304 001c 4FF40453 		mov	r3, #8448
 2305 0020 C4F20103 		movt	r3, 16385
 2306 0024 9A42     		cmp	r2, r3
 2307 0026 0ED0     		beq	.L85
 2308 0028 7A68     		ldr	r2, [r7, #4]
 2309 002a 4FF40853 		mov	r3, #8704
 2310 002e C4F20103 		movt	r3, 16385
 2311 0032 9A42     		cmp	r2, r3
 2312 0034 07D0     		beq	.L85
 2313 0036 40F20000 		movw	r0, #:lower16:.LC0
 2314 003a C0F20000 		movt	r0, #:upper16:.LC0
 2315 003e 40F21B41 		movw	r1, #1051
 2316 0042 FFF7FEFF 		bl	assert_failed
 2317              	.L85:
1052:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2318              		.loc 1 1052 0 is_stmt 1
 2319 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2320 0048 002B     		cmp	r3, #0
 2321 004a 0AD0     		beq	.L86
 2322              		.loc 1 1052 0 is_stmt 0 discriminator 1
 2323 004c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2324 004e 012B     		cmp	r3, #1
 2325 0050 07D0     		beq	.L86
 2326 0052 40F20000 		movw	r0, #:lower16:.LC0
 2327 0056 C0F20000 		movt	r0, #:upper16:.LC0
 2328 005a 40F21C41 		movw	r1, #1052
 2329 005e FFF7FEFF 		bl	assert_failed
 2330              	.L86:
1053:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 2331              		.loc 1 1053 0 is_stmt 1
 2332 0062 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2333 0064 002B     		cmp	r3, #0
 2334 0066 06D0     		beq	.L87
1054:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1055:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Enable the selected ADC DMA request */
1056:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_DMA;
 2335              		.loc 1 1056 0
 2336 0068 7B68     		ldr	r3, [r7, #4]
 2337 006a 9B68     		ldr	r3, [r3, #8]
 2338 006c 43F48072 		orr	r2, r3, #256
 2339 0070 7B68     		ldr	r3, [r7, #4]
 2340 0072 9A60     		str	r2, [r3, #8]
 2341 0074 05E0     		b	.L84
 2342              	.L87:
1057:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1058:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
1059:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1060:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Disable the selected ADC DMA request */
1061:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_DMA);
 2343              		.loc 1 1061 0
 2344 0076 7B68     		ldr	r3, [r7, #4]
 2345 0078 9B68     		ldr	r3, [r3, #8]
 2346 007a 23F48072 		bic	r2, r3, #256
 2347 007e 7B68     		ldr	r3, [r7, #4]
 2348 0080 9A60     		str	r2, [r3, #8]
 2349              	.L84:
1062:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1063:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 2350              		.loc 1 1063 0
 2351 0082 0837     		adds	r7, r7, #8
 2352 0084 BD46     		mov	sp, r7
 2353              		@ sp needed
 2354 0086 80BD     		pop	{r7, pc}
 2355              		.cfi_endproc
 2356              	.LFE130:
 2358              		.section	.text.ADC_DMARequestAfterLastTransferCmd,"ax",%progbits
 2359              		.align	2
 2360              		.global	ADC_DMARequestAfterLastTransferCmd
 2361              		.thumb
 2362              		.thumb_func
 2364              	ADC_DMARequestAfterLastTransferCmd:
 2365              	.LFB131:
1064:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1065:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1066:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the ADC DMA request after last transfer (Single-ADC mode)  
1067:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1068:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC DMA request after last transfer.
1069:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1070:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1071:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1072:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_DMARequestAfterLastTransferCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
1073:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 2366              		.loc 1 1073 0
 2367              		.cfi_startproc
 2368              		@ args = 0, pretend = 0, frame = 8
 2369              		@ frame_needed = 1, uses_anonymous_args = 0
 2370 0000 80B5     		push	{r7, lr}
 2371              	.LCFI61:
 2372              		.cfi_def_cfa_offset 8
 2373              		.cfi_offset 7, -8
 2374              		.cfi_offset 14, -4
 2375 0002 82B0     		sub	sp, sp, #8
 2376              	.LCFI62:
 2377              		.cfi_def_cfa_offset 16
 2378 0004 00AF     		add	r7, sp, #0
 2379              	.LCFI63:
 2380              		.cfi_def_cfa_register 7
 2381 0006 7860     		str	r0, [r7, #4]
 2382 0008 0B46     		mov	r3, r1
 2383 000a FB70     		strb	r3, [r7, #3]
1074:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1075:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 2384              		.loc 1 1075 0
 2385 000c 7A68     		ldr	r2, [r7, #4]
 2386 000e 4FF40053 		mov	r3, #8192
 2387 0012 C4F20103 		movt	r3, 16385
 2388 0016 9A42     		cmp	r2, r3
 2389 0018 15D0     		beq	.L90
 2390              		.loc 1 1075 0 is_stmt 0 discriminator 1
 2391 001a 7A68     		ldr	r2, [r7, #4]
 2392 001c 4FF40453 		mov	r3, #8448
 2393 0020 C4F20103 		movt	r3, 16385
 2394 0024 9A42     		cmp	r2, r3
 2395 0026 0ED0     		beq	.L90
 2396 0028 7A68     		ldr	r2, [r7, #4]
 2397 002a 4FF40853 		mov	r3, #8704
 2398 002e C4F20103 		movt	r3, 16385
 2399 0032 9A42     		cmp	r2, r3
 2400 0034 07D0     		beq	.L90
 2401 0036 40F20000 		movw	r0, #:lower16:.LC0
 2402 003a C0F20000 		movt	r0, #:upper16:.LC0
 2403 003e 40F23341 		movw	r1, #1075
 2404 0042 FFF7FEFF 		bl	assert_failed
 2405              	.L90:
1076:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2406              		.loc 1 1076 0 is_stmt 1
 2407 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2408 0048 002B     		cmp	r3, #0
 2409 004a 0AD0     		beq	.L91
 2410              		.loc 1 1076 0 is_stmt 0 discriminator 1
 2411 004c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2412 004e 012B     		cmp	r3, #1
 2413 0050 07D0     		beq	.L91
 2414 0052 40F20000 		movw	r0, #:lower16:.LC0
 2415 0056 C0F20000 		movt	r0, #:upper16:.LC0
 2416 005a 40F23441 		movw	r1, #1076
 2417 005e FFF7FEFF 		bl	assert_failed
 2418              	.L91:
1077:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 2419              		.loc 1 1077 0 is_stmt 1
 2420 0062 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2421 0064 002B     		cmp	r3, #0
 2422 0066 06D0     		beq	.L92
1078:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1079:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Enable the selected ADC DMA request after last transfer */
1080:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_DDS;
 2423              		.loc 1 1080 0
 2424 0068 7B68     		ldr	r3, [r7, #4]
 2425 006a 9B68     		ldr	r3, [r3, #8]
 2426 006c 43F40072 		orr	r2, r3, #512
 2427 0070 7B68     		ldr	r3, [r7, #4]
 2428 0072 9A60     		str	r2, [r3, #8]
 2429 0074 05E0     		b	.L89
 2430              	.L92:
1081:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1082:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
1083:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1084:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Disable the selected ADC DMA request after last transfer */
1085:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_DDS);
 2431              		.loc 1 1085 0
 2432 0076 7B68     		ldr	r3, [r7, #4]
 2433 0078 9B68     		ldr	r3, [r3, #8]
 2434 007a 23F40072 		bic	r2, r3, #512
 2435 007e 7B68     		ldr	r3, [r7, #4]
 2436 0080 9A60     		str	r2, [r3, #8]
 2437              	.L89:
1086:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1087:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 2438              		.loc 1 1087 0
 2439 0082 0837     		adds	r7, r7, #8
 2440 0084 BD46     		mov	sp, r7
 2441              		@ sp needed
 2442 0086 80BD     		pop	{r7, pc}
 2443              		.cfi_endproc
 2444              	.LFE131:
 2446              		.section	.text.ADC_MultiModeDMARequestAfterLastTransferCmd,"ax",%progbits
 2447              		.align	2
 2448              		.global	ADC_MultiModeDMARequestAfterLastTransferCmd
 2449              		.thumb
 2450              		.thumb_func
 2452              	ADC_MultiModeDMARequestAfterLastTransferCmd:
 2453              	.LFB132:
1088:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1089:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1090:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the ADC DMA request after last transfer in multi ADC mode       
1091:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC DMA request after last transfer.
1092:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1093:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @note   if Enabled, DMA requests are issued as long as data are converted and 
1094:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         DMA mode for multi ADC mode (selected using ADC_CommonInit() function 
1095:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         by ADC_CommonInitStruct.ADC_DMAAccessMode structure member) is 
1096:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          ADC_DMAAccessMode_1, ADC_DMAAccessMode_2 or ADC_DMAAccessMode_3.     
1097:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1098:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1099:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_MultiModeDMARequestAfterLastTransferCmd(FunctionalState NewState)
1100:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 2454              		.loc 1 1100 0
 2455              		.cfi_startproc
 2456              		@ args = 0, pretend = 0, frame = 8
 2457              		@ frame_needed = 1, uses_anonymous_args = 0
 2458 0000 80B5     		push	{r7, lr}
 2459              	.LCFI64:
 2460              		.cfi_def_cfa_offset 8
 2461              		.cfi_offset 7, -8
 2462              		.cfi_offset 14, -4
 2463 0002 82B0     		sub	sp, sp, #8
 2464              	.LCFI65:
 2465              		.cfi_def_cfa_offset 16
 2466 0004 00AF     		add	r7, sp, #0
 2467              	.LCFI66:
 2468              		.cfi_def_cfa_register 7
 2469 0006 0346     		mov	r3, r0
 2470 0008 FB71     		strb	r3, [r7, #7]
1101:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1102:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2471              		.loc 1 1102 0
 2472 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2473 000c 002B     		cmp	r3, #0
 2474 000e 0AD0     		beq	.L95
 2475              		.loc 1 1102 0 is_stmt 0 discriminator 1
 2476 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2477 0012 012B     		cmp	r3, #1
 2478 0014 07D0     		beq	.L95
 2479 0016 40F20000 		movw	r0, #:lower16:.LC0
 2480 001a C0F20000 		movt	r0, #:upper16:.LC0
 2481 001e 40F24E41 		movw	r1, #1102
 2482 0022 FFF7FEFF 		bl	assert_failed
 2483              	.L95:
1103:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 2484              		.loc 1 1103 0 is_stmt 1
 2485 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2486 0028 002B     		cmp	r3, #0
 2487 002a 0CD0     		beq	.L96
1104:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1105:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Enable the selected ADC DMA request after last transfer */
1106:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADC->CCR |= (uint32_t)ADC_CCR_DDS;
 2488              		.loc 1 1106 0
 2489 002c 4FF40C53 		mov	r3, #8960
 2490 0030 C4F20103 		movt	r3, 16385
 2491 0034 4FF40C52 		mov	r2, #8960
 2492 0038 C4F20102 		movt	r2, 16385
 2493 003c 5268     		ldr	r2, [r2, #4]
 2494 003e 42F40052 		orr	r2, r2, #8192
 2495 0042 5A60     		str	r2, [r3, #4]
 2496 0044 0BE0     		b	.L94
 2497              	.L96:
1107:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1108:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
1109:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1110:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Disable the selected ADC DMA request after last transfer */
1111:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADC->CCR &= (uint32_t)(~ADC_CCR_DDS);
 2498              		.loc 1 1111 0
 2499 0046 4FF40C53 		mov	r3, #8960
 2500 004a C4F20103 		movt	r3, 16385
 2501 004e 4FF40C52 		mov	r2, #8960
 2502 0052 C4F20102 		movt	r2, 16385
 2503 0056 5268     		ldr	r2, [r2, #4]
 2504 0058 22F40052 		bic	r2, r2, #8192
 2505 005c 5A60     		str	r2, [r3, #4]
 2506              	.L94:
1112:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1113:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 2507              		.loc 1 1113 0
 2508 005e 0837     		adds	r7, r7, #8
 2509 0060 BD46     		mov	sp, r7
 2510              		@ sp needed
 2511 0062 80BD     		pop	{r7, pc}
 2512              		.cfi_endproc
 2513              	.LFE132:
 2515              		.section	.text.ADC_InjectedChannelConfig,"ax",%progbits
 2516              		.align	2
 2517              		.global	ADC_InjectedChannelConfig
 2518              		.thumb
 2519              		.thumb_func
 2521              	ADC_InjectedChannelConfig:
 2522              	.LFB133:
1114:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1115:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @}
1116:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1117:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1118:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /** @defgroup ADC_Group6 Injected channels Configuration functions
1119:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *  @brief   Injected channels Configuration functions 
1120:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *
1121:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @verbatim   
1122:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================
1123:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                      Injected channels Configuration functions
1124:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================  
1125:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1126:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   This section provide functions allowing to configure the ADC Injected channels,
1127:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   it is composed of 2 sub sections : 
1128:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
1129:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   1. Configuration functions for Injected channels: This subsection provides 
1130:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      functions allowing to configure the ADC injected channels :    
1131:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     - Configure the rank in the injected group sequencer for each channel
1132:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     - Configure the sampling time for each channel    
1133:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     - Activate the Auto injected Mode  
1134:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     - Activate the Discontinuous Mode 
1135:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     - scan mode activation  
1136:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     - External/software trigger source   
1137:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     - External trigger edge 
1138:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     - injected channels sequencer.
1139:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
1140:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****    2. Get the Specified Injected channel conversion data: This subsection 
1141:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       provides an important function in the ADC peripheral since it returns the 
1142:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       converted data of the specific injected channel.
1143:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1144:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @endverbatim
1145:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @{
1146:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */ 
1147:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1148:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Configures for the selected ADC injected channel its corresponding
1149:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         rank in the sequencer and its sample time.
1150:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1151:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
1152:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1153:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_0: ADC Channel0 selected
1154:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_1: ADC Channel1 selected
1155:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_2: ADC Channel2 selected
1156:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_3: ADC Channel3 selected
1157:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_4: ADC Channel4 selected
1158:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_5: ADC Channel5 selected
1159:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_6: ADC Channel6 selected
1160:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_7: ADC Channel7 selected
1161:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_8: ADC Channel8 selected
1162:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_9: ADC Channel9 selected
1163:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_10: ADC Channel10 selected
1164:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_11: ADC Channel11 selected
1165:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_12: ADC Channel12 selected
1166:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_13: ADC Channel13 selected
1167:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_14: ADC Channel14 selected
1168:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_15: ADC Channel15 selected
1169:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_16: ADC Channel16 selected
1170:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_17: ADC Channel17 selected
1171:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_18: ADC Channel18 selected                       
1172:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  Rank: The rank in the injected group sequencer. 
1173:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter must be between 1 to 4.
1174:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
1175:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1176:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_3Cycles: Sample time equal to 3 cycles
1177:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_15Cycles: Sample time equal to 15 cycles
1178:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_28Cycles: Sample time equal to 28 cycles
1179:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_56Cycles: Sample time equal to 56 cycles	
1180:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_84Cycles: Sample time equal to 84 cycles	
1181:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_112Cycles: Sample time equal to 112 cycles	
1182:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_144Cycles: Sample time equal to 144 cycles	
1183:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_480Cycles: Sample time equal to 480 cycles	
1184:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1185:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1186:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_InjectedChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sa
1187:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 2523              		.loc 1 1187 0
 2524              		.cfi_startproc
 2525              		@ args = 0, pretend = 0, frame = 24
 2526              		@ frame_needed = 1, uses_anonymous_args = 0
 2527 0000 80B5     		push	{r7, lr}
 2528              	.LCFI67:
 2529              		.cfi_def_cfa_offset 8
 2530              		.cfi_offset 7, -8
 2531              		.cfi_offset 14, -4
 2532 0002 86B0     		sub	sp, sp, #24
 2533              	.LCFI68:
 2534              		.cfi_def_cfa_offset 32
 2535 0004 00AF     		add	r7, sp, #0
 2536              	.LCFI69:
 2537              		.cfi_def_cfa_register 7
 2538 0006 7860     		str	r0, [r7, #4]
 2539 0008 F970     		strb	r1, [r7, #3]
 2540 000a BA70     		strb	r2, [r7, #2]
 2541 000c 7B70     		strb	r3, [r7, #1]
1188:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0, tmpreg3 = 0;
 2542              		.loc 1 1188 0
 2543 000e 0023     		movs	r3, #0
 2544 0010 7B61     		str	r3, [r7, #20]
 2545 0012 0023     		movs	r3, #0
 2546 0014 3B61     		str	r3, [r7, #16]
 2547 0016 0023     		movs	r3, #0
 2548 0018 FB60     		str	r3, [r7, #12]
1189:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1190:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 2549              		.loc 1 1190 0
 2550 001a 7A68     		ldr	r2, [r7, #4]
 2551 001c 4FF40053 		mov	r3, #8192
 2552 0020 C4F20103 		movt	r3, 16385
 2553 0024 9A42     		cmp	r2, r3
 2554 0026 15D0     		beq	.L99
 2555              		.loc 1 1190 0 is_stmt 0 discriminator 1
 2556 0028 7A68     		ldr	r2, [r7, #4]
 2557 002a 4FF40453 		mov	r3, #8448
 2558 002e C4F20103 		movt	r3, 16385
 2559 0032 9A42     		cmp	r2, r3
 2560 0034 0ED0     		beq	.L99
 2561 0036 7A68     		ldr	r2, [r7, #4]
 2562 0038 4FF40853 		mov	r3, #8704
 2563 003c C4F20103 		movt	r3, 16385
 2564 0040 9A42     		cmp	r2, r3
 2565 0042 07D0     		beq	.L99
 2566 0044 40F20000 		movw	r0, #:lower16:.LC0
 2567 0048 C0F20000 		movt	r0, #:upper16:.LC0
 2568 004c 40F2A641 		movw	r1, #1190
 2569 0050 FFF7FEFF 		bl	assert_failed
 2570              	.L99:
1191:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 2571              		.loc 1 1191 0 is_stmt 1
 2572 0054 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2573 0056 002B     		cmp	r3, #0
 2574 0058 3DD0     		beq	.L100
 2575              		.loc 1 1191 0 is_stmt 0 discriminator 1
 2576 005a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2577 005c 012B     		cmp	r3, #1
 2578 005e 3AD0     		beq	.L100
 2579 0060 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2580 0062 022B     		cmp	r3, #2
 2581 0064 37D0     		beq	.L100
 2582 0066 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2583 0068 032B     		cmp	r3, #3
 2584 006a 34D0     		beq	.L100
 2585 006c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2586 006e 042B     		cmp	r3, #4
 2587 0070 31D0     		beq	.L100
 2588 0072 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2589 0074 052B     		cmp	r3, #5
 2590 0076 2ED0     		beq	.L100
 2591 0078 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2592 007a 062B     		cmp	r3, #6
 2593 007c 2BD0     		beq	.L100
 2594 007e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2595 0080 072B     		cmp	r3, #7
 2596 0082 28D0     		beq	.L100
 2597 0084 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2598 0086 082B     		cmp	r3, #8
 2599 0088 25D0     		beq	.L100
 2600 008a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2601 008c 092B     		cmp	r3, #9
 2602 008e 22D0     		beq	.L100
 2603 0090 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2604 0092 0A2B     		cmp	r3, #10
 2605 0094 1FD0     		beq	.L100
 2606 0096 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2607 0098 0B2B     		cmp	r3, #11
 2608 009a 1CD0     		beq	.L100
 2609 009c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2610 009e 0C2B     		cmp	r3, #12
 2611 00a0 19D0     		beq	.L100
 2612 00a2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2613 00a4 0D2B     		cmp	r3, #13
 2614 00a6 16D0     		beq	.L100
 2615 00a8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2616 00aa 0E2B     		cmp	r3, #14
 2617 00ac 13D0     		beq	.L100
 2618 00ae FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2619 00b0 0F2B     		cmp	r3, #15
 2620 00b2 10D0     		beq	.L100
 2621 00b4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2622 00b6 102B     		cmp	r3, #16
 2623 00b8 0DD0     		beq	.L100
 2624 00ba FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2625 00bc 112B     		cmp	r3, #17
 2626 00be 0AD0     		beq	.L100
 2627 00c0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2628 00c2 122B     		cmp	r3, #18
 2629 00c4 07D0     		beq	.L100
 2630 00c6 40F20000 		movw	r0, #:lower16:.LC0
 2631 00ca C0F20000 		movt	r0, #:upper16:.LC0
 2632 00ce 40F2A741 		movw	r1, #1191
 2633 00d2 FFF7FEFF 		bl	assert_failed
 2634              	.L100:
1192:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_INJECTED_RANK(Rank));
 2635              		.loc 1 1192 0 is_stmt 1
 2636 00d6 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2637 00d8 002B     		cmp	r3, #0
 2638 00da 02D0     		beq	.L101
 2639              		.loc 1 1192 0 is_stmt 0 discriminator 2
 2640 00dc BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2641 00de 042B     		cmp	r3, #4
 2642 00e0 07D9     		bls	.L102
 2643              	.L101:
 2644              		.loc 1 1192 0 discriminator 1
 2645 00e2 40F20000 		movw	r0, #:lower16:.LC0
 2646 00e6 C0F20000 		movt	r0, #:upper16:.LC0
 2647 00ea 4FF49561 		mov	r1, #1192
 2648 00ee FFF7FEFF 		bl	assert_failed
 2649              	.L102:
1193:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 2650              		.loc 1 1193 0 is_stmt 1
 2651 00f2 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2652 00f4 002B     		cmp	r3, #0
 2653 00f6 1CD0     		beq	.L103
 2654              		.loc 1 1193 0 is_stmt 0 discriminator 1
 2655 00f8 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2656 00fa 012B     		cmp	r3, #1
 2657 00fc 19D0     		beq	.L103
 2658 00fe 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2659 0100 022B     		cmp	r3, #2
 2660 0102 16D0     		beq	.L103
 2661 0104 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2662 0106 032B     		cmp	r3, #3
 2663 0108 13D0     		beq	.L103
 2664 010a 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2665 010c 042B     		cmp	r3, #4
 2666 010e 10D0     		beq	.L103
 2667 0110 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2668 0112 052B     		cmp	r3, #5
 2669 0114 0DD0     		beq	.L103
 2670 0116 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2671 0118 062B     		cmp	r3, #6
 2672 011a 0AD0     		beq	.L103
 2673 011c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2674 011e 072B     		cmp	r3, #7
 2675 0120 07D0     		beq	.L103
 2676 0122 40F20000 		movw	r0, #:lower16:.LC0
 2677 0126 C0F20000 		movt	r0, #:upper16:.LC0
 2678 012a 40F2A941 		movw	r1, #1193
 2679 012e FFF7FEFF 		bl	assert_failed
 2680              	.L103:
1194:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
1195:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 2681              		.loc 1 1195 0 is_stmt 1
 2682 0132 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2683 0134 092B     		cmp	r3, #9
 2684 0136 23D9     		bls	.L104
1196:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1197:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Get the old register value */
1198:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR1;
 2685              		.loc 1 1198 0
 2686 0138 7B68     		ldr	r3, [r7, #4]
 2687 013a DB68     		ldr	r3, [r3, #12]
 2688 013c 7B61     		str	r3, [r7, #20]
1199:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
1200:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = SMPR1_SMP_SET << (3*(ADC_Channel - 10));
 2689              		.loc 1 1200 0
 2690 013e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2691 0140 A3F10A02 		sub	r2, r3, #10
 2692 0144 1346     		mov	r3, r2
 2693 0146 5B00     		lsls	r3, r3, #1
 2694 0148 1344     		add	r3, r3, r2
 2695 014a 0722     		movs	r2, #7
 2696 014c 02FA03F3 		lsl	r3, r2, r3
 2697 0150 3B61     		str	r3, [r7, #16]
1201:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Clear the old sample time */
1202:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 2698              		.loc 1 1202 0
 2699 0152 3B69     		ldr	r3, [r7, #16]
 2700 0154 DB43     		mvns	r3, r3
 2701 0156 7A69     		ldr	r2, [r7, #20]
 2702 0158 1340     		ands	r3, r3, r2
 2703 015a 7B61     		str	r3, [r7, #20]
1203:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
1204:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3*(ADC_Channel - 10));
 2704              		.loc 1 1204 0
 2705 015c 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 2706 015e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2707 0160 A3F10A02 		sub	r2, r3, #10
 2708 0164 1346     		mov	r3, r2
 2709 0166 5B00     		lsls	r3, r3, #1
 2710 0168 1344     		add	r3, r3, r2
 2711 016a 01FA03F3 		lsl	r3, r1, r3
 2712 016e 3B61     		str	r3, [r7, #16]
1205:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Set the new sample time */
1206:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 2713              		.loc 1 1206 0
 2714 0170 7A69     		ldr	r2, [r7, #20]
 2715 0172 3B69     		ldr	r3, [r7, #16]
 2716 0174 1343     		orrs	r3, r3, r2
 2717 0176 7B61     		str	r3, [r7, #20]
1207:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Store the new register value */
1208:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->SMPR1 = tmpreg1;
 2718              		.loc 1 1208 0
 2719 0178 7B68     		ldr	r3, [r7, #4]
 2720 017a 7A69     		ldr	r2, [r7, #20]
 2721 017c DA60     		str	r2, [r3, #12]
 2722 017e 1EE0     		b	.L105
 2723              	.L104:
1209:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1210:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
1211:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1212:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Get the old register value */
1213:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR2;
 2724              		.loc 1 1213 0
 2725 0180 7B68     		ldr	r3, [r7, #4]
 2726 0182 1B69     		ldr	r3, [r3, #16]
 2727 0184 7B61     		str	r3, [r7, #20]
1214:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
1215:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = SMPR2_SMP_SET << (3 * ADC_Channel);
 2728              		.loc 1 1215 0
 2729 0186 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 2730 0188 1346     		mov	r3, r2
 2731 018a 5B00     		lsls	r3, r3, #1
 2732 018c 1344     		add	r3, r3, r2
 2733 018e 0722     		movs	r2, #7
 2734 0190 02FA03F3 		lsl	r3, r2, r3
 2735 0194 3B61     		str	r3, [r7, #16]
1216:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Clear the old sample time */
1217:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 2736              		.loc 1 1217 0
 2737 0196 3B69     		ldr	r3, [r7, #16]
 2738 0198 DB43     		mvns	r3, r3
 2739 019a 7A69     		ldr	r2, [r7, #20]
 2740 019c 1340     		ands	r3, r3, r2
 2741 019e 7B61     		str	r3, [r7, #20]
1218:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
1219:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 2742              		.loc 1 1219 0
 2743 01a0 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 2744 01a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 2745 01a4 1346     		mov	r3, r2
 2746 01a6 5B00     		lsls	r3, r3, #1
 2747 01a8 1344     		add	r3, r3, r2
 2748 01aa 01FA03F3 		lsl	r3, r1, r3
 2749 01ae 3B61     		str	r3, [r7, #16]
1220:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Set the new sample time */
1221:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 2750              		.loc 1 1221 0
 2751 01b0 7A69     		ldr	r2, [r7, #20]
 2752 01b2 3B69     		ldr	r3, [r7, #16]
 2753 01b4 1343     		orrs	r3, r3, r2
 2754 01b6 7B61     		str	r3, [r7, #20]
1222:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Store the new register value */
1223:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->SMPR2 = tmpreg1;
 2755              		.loc 1 1223 0
 2756 01b8 7B68     		ldr	r3, [r7, #4]
 2757 01ba 7A69     		ldr	r2, [r7, #20]
 2758 01bc 1A61     		str	r2, [r3, #16]
 2759              	.L105:
1224:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1225:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Rank configuration */
1226:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the old register value */
1227:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->JSQR;
 2760              		.loc 1 1227 0
 2761 01be 7B68     		ldr	r3, [r7, #4]
 2762 01c0 9B6B     		ldr	r3, [r3, #56]
 2763 01c2 7B61     		str	r3, [r7, #20]
1228:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get JL value: Number = JL+1 */
1229:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg3 =  (tmpreg1 & JSQR_JL_SET)>> 20;
 2764              		.loc 1 1229 0
 2765 01c4 7B69     		ldr	r3, [r7, #20]
 2766 01c6 03F44013 		and	r3, r3, #3145728
 2767 01ca 1B0D     		lsrs	r3, r3, #20
 2768 01cc FB60     		str	r3, [r7, #12]
1230:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Calculate the mask to clear: ((Rank-1)+(4-JL-1)) */
1231:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg2 = JSQR_JSQ_SET << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 2769              		.loc 1 1231 0
 2770 01ce FB68     		ldr	r3, [r7, #12]
 2771 01d0 DBB2     		uxtb	r3, r3
 2772 01d2 BA78     		ldrb	r2, [r7, #2]
 2773 01d4 D31A     		subs	r3, r2, r3
 2774 01d6 DBB2     		uxtb	r3, r3
 2775 01d8 0233     		adds	r3, r3, #2
 2776 01da DBB2     		uxtb	r3, r3
 2777 01dc 1A46     		mov	r2, r3
 2778 01de 1346     		mov	r3, r2
 2779 01e0 9B00     		lsls	r3, r3, #2
 2780 01e2 1344     		add	r3, r3, r2
 2781 01e4 1F22     		movs	r2, #31
 2782 01e6 02FA03F3 		lsl	r3, r2, r3
 2783 01ea 3B61     		str	r3, [r7, #16]
1232:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear the old JSQx bits for the selected rank */
1233:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 &= ~tmpreg2;
 2784              		.loc 1 1233 0
 2785 01ec 3B69     		ldr	r3, [r7, #16]
 2786 01ee DB43     		mvns	r3, r3
 2787 01f0 7A69     		ldr	r2, [r7, #20]
 2788 01f2 1340     		ands	r3, r3, r2
 2789 01f4 7B61     		str	r3, [r7, #20]
1234:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Calculate the mask to set: ((Rank-1)+(4-JL-1)) */
1235:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg2 = (uint32_t)ADC_Channel << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 2790              		.loc 1 1235 0
 2791 01f6 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 2792 01f8 FB68     		ldr	r3, [r7, #12]
 2793 01fa DBB2     		uxtb	r3, r3
 2794 01fc BA78     		ldrb	r2, [r7, #2]
 2795 01fe D31A     		subs	r3, r2, r3
 2796 0200 DBB2     		uxtb	r3, r3
 2797 0202 0233     		adds	r3, r3, #2
 2798 0204 DBB2     		uxtb	r3, r3
 2799 0206 1A46     		mov	r2, r3
 2800 0208 1346     		mov	r3, r2
 2801 020a 9B00     		lsls	r3, r3, #2
 2802 020c 1344     		add	r3, r3, r2
 2803 020e 01FA03F3 		lsl	r3, r1, r3
 2804 0212 3B61     		str	r3, [r7, #16]
1236:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set the JSQx bits for the selected rank */
1237:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 |= tmpreg2;
 2805              		.loc 1 1237 0
 2806 0214 7A69     		ldr	r2, [r7, #20]
 2807 0216 3B69     		ldr	r3, [r7, #16]
 2808 0218 1343     		orrs	r3, r3, r2
 2809 021a 7B61     		str	r3, [r7, #20]
1238:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Store the new register value */
1239:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->JSQR = tmpreg1;
 2810              		.loc 1 1239 0
 2811 021c 7B68     		ldr	r3, [r7, #4]
 2812 021e 7A69     		ldr	r2, [r7, #20]
 2813 0220 9A63     		str	r2, [r3, #56]
1240:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 2814              		.loc 1 1240 0
 2815 0222 1837     		adds	r7, r7, #24
 2816 0224 BD46     		mov	sp, r7
 2817              		@ sp needed
 2818 0226 80BD     		pop	{r7, pc}
 2819              		.cfi_endproc
 2820              	.LFE133:
 2822              		.section	.text.ADC_InjectedSequencerLengthConfig,"ax",%progbits
 2823              		.align	2
 2824              		.global	ADC_InjectedSequencerLengthConfig
 2825              		.thumb
 2826              		.thumb_func
 2828              	ADC_InjectedSequencerLengthConfig:
 2829              	.LFB134:
1241:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1242:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1243:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Configures the sequencer length for injected channels
1244:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1245:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  Length: The sequencer length. 
1246:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter must be a number between 1 to 4.
1247:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1248:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1249:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_InjectedSequencerLengthConfig(ADC_TypeDef* ADCx, uint8_t Length)
1250:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 2830              		.loc 1 1250 0
 2831              		.cfi_startproc
 2832              		@ args = 0, pretend = 0, frame = 16
 2833              		@ frame_needed = 1, uses_anonymous_args = 0
 2834 0000 80B5     		push	{r7, lr}
 2835              	.LCFI70:
 2836              		.cfi_def_cfa_offset 8
 2837              		.cfi_offset 7, -8
 2838              		.cfi_offset 14, -4
 2839 0002 84B0     		sub	sp, sp, #16
 2840              	.LCFI71:
 2841              		.cfi_def_cfa_offset 24
 2842 0004 00AF     		add	r7, sp, #0
 2843              	.LCFI72:
 2844              		.cfi_def_cfa_register 7
 2845 0006 7860     		str	r0, [r7, #4]
 2846 0008 0B46     		mov	r3, r1
 2847 000a FB70     		strb	r3, [r7, #3]
1251:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0;
 2848              		.loc 1 1251 0
 2849 000c 0023     		movs	r3, #0
 2850 000e FB60     		str	r3, [r7, #12]
1252:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg2 = 0;
 2851              		.loc 1 1252 0
 2852 0010 0023     		movs	r3, #0
 2853 0012 BB60     		str	r3, [r7, #8]
1253:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1254:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 2854              		.loc 1 1254 0
 2855 0014 7A68     		ldr	r2, [r7, #4]
 2856 0016 4FF40053 		mov	r3, #8192
 2857 001a C4F20103 		movt	r3, 16385
 2858 001e 9A42     		cmp	r2, r3
 2859 0020 15D0     		beq	.L107
 2860              		.loc 1 1254 0 is_stmt 0 discriminator 1
 2861 0022 7A68     		ldr	r2, [r7, #4]
 2862 0024 4FF40453 		mov	r3, #8448
 2863 0028 C4F20103 		movt	r3, 16385
 2864 002c 9A42     		cmp	r2, r3
 2865 002e 0ED0     		beq	.L107
 2866 0030 7A68     		ldr	r2, [r7, #4]
 2867 0032 4FF40853 		mov	r3, #8704
 2868 0036 C4F20103 		movt	r3, 16385
 2869 003a 9A42     		cmp	r2, r3
 2870 003c 07D0     		beq	.L107
 2871 003e 40F20000 		movw	r0, #:lower16:.LC0
 2872 0042 C0F20000 		movt	r0, #:upper16:.LC0
 2873 0046 40F2E641 		movw	r1, #1254
 2874 004a FFF7FEFF 		bl	assert_failed
 2875              	.L107:
1255:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_INJECTED_LENGTH(Length));
 2876              		.loc 1 1255 0 is_stmt 1
 2877 004e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2878 0050 002B     		cmp	r3, #0
 2879 0052 02D0     		beq	.L108
 2880              		.loc 1 1255 0 is_stmt 0 discriminator 2
 2881 0054 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2882 0056 042B     		cmp	r3, #4
 2883 0058 07D9     		bls	.L109
 2884              	.L108:
 2885              		.loc 1 1255 0 discriminator 1
 2886 005a 40F20000 		movw	r0, #:lower16:.LC0
 2887 005e C0F20000 		movt	r0, #:upper16:.LC0
 2888 0062 40F2E741 		movw	r1, #1255
 2889 0066 FFF7FEFF 		bl	assert_failed
 2890              	.L109:
1256:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1257:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the old register value */
1258:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->JSQR;
 2891              		.loc 1 1258 0 is_stmt 1
 2892 006a 7B68     		ldr	r3, [r7, #4]
 2893 006c 9B6B     		ldr	r3, [r3, #56]
 2894 006e FB60     		str	r3, [r7, #12]
1259:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1260:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear the old injected sequence length JL bits */
1261:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 &= JSQR_JL_RESET;
 2895              		.loc 1 1261 0
 2896 0070 FB68     		ldr	r3, [r7, #12]
 2897 0072 23F44013 		bic	r3, r3, #3145728
 2898 0076 FB60     		str	r3, [r7, #12]
1262:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1263:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set the injected sequence length JL bits */
1264:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg2 = Length - 1; 
 2899              		.loc 1 1264 0
 2900 0078 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2901 007a 013B     		subs	r3, r3, #1
 2902 007c BB60     		str	r3, [r7, #8]
1265:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 |= tmpreg2 << 20;
 2903              		.loc 1 1265 0
 2904 007e BB68     		ldr	r3, [r7, #8]
 2905 0080 1B05     		lsls	r3, r3, #20
 2906 0082 FA68     		ldr	r2, [r7, #12]
 2907 0084 1343     		orrs	r3, r3, r2
 2908 0086 FB60     		str	r3, [r7, #12]
1266:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1267:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Store the new register value */
1268:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->JSQR = tmpreg1;
 2909              		.loc 1 1268 0
 2910 0088 7B68     		ldr	r3, [r7, #4]
 2911 008a FA68     		ldr	r2, [r7, #12]
 2912 008c 9A63     		str	r2, [r3, #56]
1269:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 2913              		.loc 1 1269 0
 2914 008e 1037     		adds	r7, r7, #16
 2915 0090 BD46     		mov	sp, r7
 2916              		@ sp needed
 2917 0092 80BD     		pop	{r7, pc}
 2918              		.cfi_endproc
 2919              	.LFE134:
 2921              		.section	.text.ADC_SetInjectedOffset,"ax",%progbits
 2922              		.align	2
 2923              		.global	ADC_SetInjectedOffset
 2924              		.thumb
 2925              		.thumb_func
 2927              	ADC_SetInjectedOffset:
 2928              	.LFB135:
1270:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1271:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1272:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Set the injected channels conversion value offset
1273:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1274:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_InjectedChannel: the ADC injected channel to set its offset. 
1275:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1276:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_1: Injected Channel1 selected
1277:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_2: Injected Channel2 selected
1278:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_3: Injected Channel3 selected
1279:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_4: Injected Channel4 selected
1280:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  Offset: the offset value for the selected ADC injected channel
1281:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter must be a 12bit value.
1282:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1283:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1284:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_SetInjectedOffset(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel, uint16_t Offset)
1285:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 2929              		.loc 1 1285 0
 2930              		.cfi_startproc
 2931              		@ args = 0, pretend = 0, frame = 16
 2932              		@ frame_needed = 1, uses_anonymous_args = 0
 2933 0000 80B5     		push	{r7, lr}
 2934              	.LCFI73:
 2935              		.cfi_def_cfa_offset 8
 2936              		.cfi_offset 7, -8
 2937              		.cfi_offset 14, -4
 2938 0002 84B0     		sub	sp, sp, #16
 2939              	.LCFI74:
 2940              		.cfi_def_cfa_offset 24
 2941 0004 00AF     		add	r7, sp, #0
 2942              	.LCFI75:
 2943              		.cfi_def_cfa_register 7
 2944 0006 7860     		str	r0, [r7, #4]
 2945 0008 1346     		mov	r3, r2
 2946 000a 0A46     		mov	r2, r1
 2947 000c FA70     		strb	r2, [r7, #3]
 2948 000e 3B80     		strh	r3, [r7]	@ movhi
1286:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     __IO uint32_t tmp = 0;
 2949              		.loc 1 1286 0
 2950 0010 0023     		movs	r3, #0
 2951 0012 FB60     		str	r3, [r7, #12]
1287:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1288:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 2952              		.loc 1 1288 0
 2953 0014 7A68     		ldr	r2, [r7, #4]
 2954 0016 4FF40053 		mov	r3, #8192
 2955 001a C4F20103 		movt	r3, 16385
 2956 001e 9A42     		cmp	r2, r3
 2957 0020 15D0     		beq	.L111
 2958              		.loc 1 1288 0 is_stmt 0 discriminator 1
 2959 0022 7A68     		ldr	r2, [r7, #4]
 2960 0024 4FF40453 		mov	r3, #8448
 2961 0028 C4F20103 		movt	r3, 16385
 2962 002c 9A42     		cmp	r2, r3
 2963 002e 0ED0     		beq	.L111
 2964 0030 7A68     		ldr	r2, [r7, #4]
 2965 0032 4FF40853 		mov	r3, #8704
 2966 0036 C4F20103 		movt	r3, 16385
 2967 003a 9A42     		cmp	r2, r3
 2968 003c 07D0     		beq	.L111
 2969 003e 40F20000 		movw	r0, #:lower16:.LC0
 2970 0042 C0F20000 		movt	r0, #:upper16:.LC0
 2971 0046 4FF4A161 		mov	r1, #1288
 2972 004a FFF7FEFF 		bl	assert_failed
 2973              	.L111:
1289:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
 2974              		.loc 1 1289 0 is_stmt 1
 2975 004e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2976 0050 142B     		cmp	r3, #20
 2977 0052 10D0     		beq	.L112
 2978              		.loc 1 1289 0 is_stmt 0 discriminator 1
 2979 0054 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2980 0056 182B     		cmp	r3, #24
 2981 0058 0DD0     		beq	.L112
 2982 005a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2983 005c 1C2B     		cmp	r3, #28
 2984 005e 0AD0     		beq	.L112
 2985 0060 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2986 0062 202B     		cmp	r3, #32
 2987 0064 07D0     		beq	.L112
 2988 0066 40F20000 		movw	r0, #:lower16:.LC0
 2989 006a C0F20000 		movt	r0, #:upper16:.LC0
 2990 006e 40F20951 		movw	r1, #1289
 2991 0072 FFF7FEFF 		bl	assert_failed
 2992              	.L112:
1290:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_OFFSET(Offset));
 2993              		.loc 1 1290 0 is_stmt 1
 2994 0076 3B88     		ldrh	r3, [r7]
 2995 0078 B3F5805F 		cmp	r3, #4096
 2996 007c 07D3     		bcc	.L113
 2997              		.loc 1 1290 0 is_stmt 0 discriminator 1
 2998 007e 40F20000 		movw	r0, #:lower16:.LC0
 2999 0082 C0F20000 		movt	r0, #:upper16:.LC0
 3000 0086 40F20A51 		movw	r1, #1290
 3001 008a FFF7FEFF 		bl	assert_failed
 3002              	.L113:
1291:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1292:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmp = (uint32_t)ADCx;
 3003              		.loc 1 1292 0 is_stmt 1
 3004 008e 7B68     		ldr	r3, [r7, #4]
 3005 0090 FB60     		str	r3, [r7, #12]
1293:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmp += ADC_InjectedChannel;
 3006              		.loc 1 1293 0
 3007 0092 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 3008 0094 FB68     		ldr	r3, [r7, #12]
 3009 0096 1344     		add	r3, r3, r2
 3010 0098 FB60     		str	r3, [r7, #12]
1294:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1295:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set the selected injected channel data offset */
1296:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *(__IO uint32_t *) tmp = (uint32_t)Offset;
 3011              		.loc 1 1296 0
 3012 009a FB68     		ldr	r3, [r7, #12]
 3013 009c 3A88     		ldrh	r2, [r7]
 3014 009e 1A60     		str	r2, [r3]
1297:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 3015              		.loc 1 1297 0
 3016 00a0 1037     		adds	r7, r7, #16
 3017 00a2 BD46     		mov	sp, r7
 3018              		@ sp needed
 3019 00a4 80BD     		pop	{r7, pc}
 3020              		.cfi_endproc
 3021              	.LFE135:
 3023 00a6 00BF     		.section	.text.ADC_ExternalTrigInjectedConvConfig,"ax",%progbits
 3024              		.align	2
 3025              		.global	ADC_ExternalTrigInjectedConvConfig
 3026              		.thumb
 3027              		.thumb_func
 3029              	ADC_ExternalTrigInjectedConvConfig:
 3030              	.LFB136:
1298:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1299:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  /**
1300:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Configures the ADCx external trigger for injected channels conversion.
1301:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1302:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_ExternalTrigInjecConv: specifies the ADC trigger to start injected conversion.
1303:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:                    
1304:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T1_CC4: Timer1 capture compare4 selected 
1305:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T1_TRGO: Timer1 TRGO event selected 
1306:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T2_CC1: Timer2 capture compare1 selected 
1307:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T2_TRGO: Timer2 TRGO event selected 
1308:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T3_CC2: Timer3 capture compare2 selected 
1309:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T3_CC4: Timer3 capture compare4 selected 
1310:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T4_CC1: Timer4 capture compare1 selected             
1311:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T4_CC2: Timer4 capture compare2 selected 
1312:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T4_CC3: Timer4 capture compare3 selected             
1313:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T4_TRGO: Timer4 TRGO event selected 
1314:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T5_CC4: Timer5 capture compare4 selected             
1315:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T5_TRGO: Timer5 TRGO event selected                  
1316:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T8_CC2: Timer8 capture compare2 selected
1317:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T8_CC3: Timer8 capture compare3 selected             
1318:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T8_CC4: Timer8 capture compare4 selected 
1319:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_Ext_IT15: External interrupt line 15 event selected  
1320:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1321:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1322:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_ExternalTrigInjectedConvConfig(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConv)
1323:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 3031              		.loc 1 1323 0
 3032              		.cfi_startproc
 3033              		@ args = 0, pretend = 0, frame = 16
 3034              		@ frame_needed = 1, uses_anonymous_args = 0
 3035 0000 80B5     		push	{r7, lr}
 3036              	.LCFI76:
 3037              		.cfi_def_cfa_offset 8
 3038              		.cfi_offset 7, -8
 3039              		.cfi_offset 14, -4
 3040 0002 84B0     		sub	sp, sp, #16
 3041              	.LCFI77:
 3042              		.cfi_def_cfa_offset 24
 3043 0004 00AF     		add	r7, sp, #0
 3044              	.LCFI78:
 3045              		.cfi_def_cfa_register 7
 3046 0006 7860     		str	r0, [r7, #4]
 3047 0008 3960     		str	r1, [r7]
1324:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg = 0;
 3048              		.loc 1 1324 0
 3049 000a 0023     		movs	r3, #0
 3050 000c FB60     		str	r3, [r7, #12]
1325:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1326:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 3051              		.loc 1 1326 0
 3052 000e 7A68     		ldr	r2, [r7, #4]
 3053 0010 4FF40053 		mov	r3, #8192
 3054 0014 C4F20103 		movt	r3, 16385
 3055 0018 9A42     		cmp	r2, r3
 3056 001a 15D0     		beq	.L115
 3057              		.loc 1 1326 0 is_stmt 0 discriminator 1
 3058 001c 7A68     		ldr	r2, [r7, #4]
 3059 001e 4FF40453 		mov	r3, #8448
 3060 0022 C4F20103 		movt	r3, 16385
 3061 0026 9A42     		cmp	r2, r3
 3062 0028 0ED0     		beq	.L115
 3063 002a 7A68     		ldr	r2, [r7, #4]
 3064 002c 4FF40853 		mov	r3, #8704
 3065 0030 C4F20103 		movt	r3, 16385
 3066 0034 9A42     		cmp	r2, r3
 3067 0036 07D0     		beq	.L115
 3068 0038 40F20000 		movw	r0, #:lower16:.LC0
 3069 003c C0F20000 		movt	r0, #:upper16:.LC0
 3070 0040 40F22E51 		movw	r1, #1326
 3071 0044 FFF7FEFF 		bl	assert_failed
 3072              	.L115:
1327:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_EXT_INJEC_TRIG(ADC_ExternalTrigInjecConv));
 3073              		.loc 1 1327 0 is_stmt 1
 3074 0048 3B68     		ldr	r3, [r7]
 3075 004a 002B     		cmp	r3, #0
 3076 004c 43D0     		beq	.L116
 3077              		.loc 1 1327 0 is_stmt 0 discriminator 1
 3078 004e 3B68     		ldr	r3, [r7]
 3079 0050 B3F5803F 		cmp	r3, #65536
 3080 0054 3FD0     		beq	.L116
 3081 0056 3B68     		ldr	r3, [r7]
 3082 0058 B3F5003F 		cmp	r3, #131072
 3083 005c 3BD0     		beq	.L116
 3084 005e 3B68     		ldr	r3, [r7]
 3085 0060 B3F5403F 		cmp	r3, #196608
 3086 0064 37D0     		beq	.L116
 3087 0066 3B68     		ldr	r3, [r7]
 3088 0068 B3F5802F 		cmp	r3, #262144
 3089 006c 33D0     		beq	.L116
 3090 006e 3B68     		ldr	r3, [r7]
 3091 0070 B3F5A02F 		cmp	r3, #327680
 3092 0074 2FD0     		beq	.L116
 3093 0076 3B68     		ldr	r3, [r7]
 3094 0078 B3F5C02F 		cmp	r3, #393216
 3095 007c 2BD0     		beq	.L116
 3096 007e 3B68     		ldr	r3, [r7]
 3097 0080 B3F5E02F 		cmp	r3, #458752
 3098 0084 27D0     		beq	.L116
 3099 0086 3B68     		ldr	r3, [r7]
 3100 0088 B3F5002F 		cmp	r3, #524288
 3101 008c 23D0     		beq	.L116
 3102 008e 3B68     		ldr	r3, [r7]
 3103 0090 B3F5102F 		cmp	r3, #589824
 3104 0094 1FD0     		beq	.L116
 3105 0096 3B68     		ldr	r3, [r7]
 3106 0098 B3F5202F 		cmp	r3, #655360
 3107 009c 1BD0     		beq	.L116
 3108 009e 3B68     		ldr	r3, [r7]
 3109 00a0 B3F5302F 		cmp	r3, #720896
 3110 00a4 17D0     		beq	.L116
 3111 00a6 3B68     		ldr	r3, [r7]
 3112 00a8 B3F5402F 		cmp	r3, #786432
 3113 00ac 13D0     		beq	.L116
 3114 00ae 3B68     		ldr	r3, [r7]
 3115 00b0 B3F5502F 		cmp	r3, #851968
 3116 00b4 0FD0     		beq	.L116
 3117 00b6 3B68     		ldr	r3, [r7]
 3118 00b8 B3F5602F 		cmp	r3, #917504
 3119 00bc 0BD0     		beq	.L116
 3120 00be 3B68     		ldr	r3, [r7]
 3121 00c0 B3F5702F 		cmp	r3, #983040
 3122 00c4 07D0     		beq	.L116
 3123 00c6 40F20000 		movw	r0, #:lower16:.LC0
 3124 00ca C0F20000 		movt	r0, #:upper16:.LC0
 3125 00ce 40F22F51 		movw	r1, #1327
 3126 00d2 FFF7FEFF 		bl	assert_failed
 3127              	.L116:
1328:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1329:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the old register value */
1330:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg = ADCx->CR2;
 3128              		.loc 1 1330 0 is_stmt 1
 3129 00d6 7B68     		ldr	r3, [r7, #4]
 3130 00d8 9B68     		ldr	r3, [r3, #8]
 3131 00da FB60     		str	r3, [r7, #12]
1331:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1332:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear the old external event selection for injected group */
1333:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg &= CR2_JEXTSEL_RESET;
 3132              		.loc 1 1333 0
 3133 00dc FB68     		ldr	r3, [r7, #12]
 3134 00de 23F47023 		bic	r3, r3, #983040
 3135 00e2 FB60     		str	r3, [r7, #12]
1334:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1335:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set the external event selection for injected group */
1336:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg |= ADC_ExternalTrigInjecConv;
 3136              		.loc 1 1336 0
 3137 00e4 FA68     		ldr	r2, [r7, #12]
 3138 00e6 3B68     		ldr	r3, [r7]
 3139 00e8 1343     		orrs	r3, r3, r2
 3140 00ea FB60     		str	r3, [r7, #12]
1337:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1338:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Store the new register value */
1339:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->CR2 = tmpreg;
 3141              		.loc 1 1339 0
 3142 00ec 7B68     		ldr	r3, [r7, #4]
 3143 00ee FA68     		ldr	r2, [r7, #12]
 3144 00f0 9A60     		str	r2, [r3, #8]
1340:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 3145              		.loc 1 1340 0
 3146 00f2 1037     		adds	r7, r7, #16
 3147 00f4 BD46     		mov	sp, r7
 3148              		@ sp needed
 3149 00f6 80BD     		pop	{r7, pc}
 3150              		.cfi_endproc
 3151              	.LFE136:
 3153              		.section	.text.ADC_ExternalTrigInjectedConvEdgeConfig,"ax",%progbits
 3154              		.align	2
 3155              		.global	ADC_ExternalTrigInjectedConvEdgeConfig
 3156              		.thumb
 3157              		.thumb_func
 3159              	ADC_ExternalTrigInjectedConvEdgeConfig:
 3160              	.LFB137:
1341:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1342:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1343:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Configures the ADCx external trigger edge for injected channels conversion.
1344:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1345:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_ExternalTrigInjecConvEdge: specifies the ADC external trigger edge
1346:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         to start injected conversion. 
1347:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1348:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConvEdge_None: external trigger disabled for 
1349:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *                                                     injected conversion
1350:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConvEdge_Rising: detection on rising edge
1351:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConvEdge_Falling: detection on falling edge
1352:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConvEdge_RisingFalling: detection on both rising 
1353:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *                                                               and falling edge
1354:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1355:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1356:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_ExternalTrigInjectedConvEdgeConfig(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConvEd
1357:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 3161              		.loc 1 1357 0
 3162              		.cfi_startproc
 3163              		@ args = 0, pretend = 0, frame = 16
 3164              		@ frame_needed = 1, uses_anonymous_args = 0
 3165 0000 80B5     		push	{r7, lr}
 3166              	.LCFI79:
 3167              		.cfi_def_cfa_offset 8
 3168              		.cfi_offset 7, -8
 3169              		.cfi_offset 14, -4
 3170 0002 84B0     		sub	sp, sp, #16
 3171              	.LCFI80:
 3172              		.cfi_def_cfa_offset 24
 3173 0004 00AF     		add	r7, sp, #0
 3174              	.LCFI81:
 3175              		.cfi_def_cfa_register 7
 3176 0006 7860     		str	r0, [r7, #4]
 3177 0008 3960     		str	r1, [r7]
1358:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg = 0;
 3178              		.loc 1 1358 0
 3179 000a 0023     		movs	r3, #0
 3180 000c FB60     		str	r3, [r7, #12]
1359:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1360:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 3181              		.loc 1 1360 0
 3182 000e 7A68     		ldr	r2, [r7, #4]
 3183 0010 4FF40053 		mov	r3, #8192
 3184 0014 C4F20103 		movt	r3, 16385
 3185 0018 9A42     		cmp	r2, r3
 3186 001a 15D0     		beq	.L118
 3187              		.loc 1 1360 0 is_stmt 0 discriminator 1
 3188 001c 7A68     		ldr	r2, [r7, #4]
 3189 001e 4FF40453 		mov	r3, #8448
 3190 0022 C4F20103 		movt	r3, 16385
 3191 0026 9A42     		cmp	r2, r3
 3192 0028 0ED0     		beq	.L118
 3193 002a 7A68     		ldr	r2, [r7, #4]
 3194 002c 4FF40853 		mov	r3, #8704
 3195 0030 C4F20103 		movt	r3, 16385
 3196 0034 9A42     		cmp	r2, r3
 3197 0036 07D0     		beq	.L118
 3198 0038 40F20000 		movw	r0, #:lower16:.LC0
 3199 003c C0F20000 		movt	r0, #:upper16:.LC0
 3200 0040 4FF4AA61 		mov	r1, #1360
 3201 0044 FFF7FEFF 		bl	assert_failed
 3202              	.L118:
1361:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_EXT_INJEC_TRIG_EDGE(ADC_ExternalTrigInjecConvEdge));
 3203              		.loc 1 1361 0 is_stmt 1
 3204 0048 3B68     		ldr	r3, [r7]
 3205 004a 002B     		cmp	r3, #0
 3206 004c 13D0     		beq	.L119
 3207              		.loc 1 1361 0 is_stmt 0 discriminator 1
 3208 004e 3B68     		ldr	r3, [r7]
 3209 0050 B3F5801F 		cmp	r3, #1048576
 3210 0054 0FD0     		beq	.L119
 3211 0056 3B68     		ldr	r3, [r7]
 3212 0058 B3F5001F 		cmp	r3, #2097152
 3213 005c 0BD0     		beq	.L119
 3214 005e 3B68     		ldr	r3, [r7]
 3215 0060 B3F5401F 		cmp	r3, #3145728
 3216 0064 07D0     		beq	.L119
 3217 0066 40F20000 		movw	r0, #:lower16:.LC0
 3218 006a C0F20000 		movt	r0, #:upper16:.LC0
 3219 006e 40F25151 		movw	r1, #1361
 3220 0072 FFF7FEFF 		bl	assert_failed
 3221              	.L119:
1362:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the old register value */
1363:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg = ADCx->CR2;
 3222              		.loc 1 1363 0 is_stmt 1
 3223 0076 7B68     		ldr	r3, [r7, #4]
 3224 0078 9B68     		ldr	r3, [r3, #8]
 3225 007a FB60     		str	r3, [r7, #12]
1364:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear the old external trigger edge for injected group */
1365:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg &= CR2_JEXTEN_RESET;
 3226              		.loc 1 1365 0
 3227 007c FB68     		ldr	r3, [r7, #12]
 3228 007e 23F44013 		bic	r3, r3, #3145728
 3229 0082 FB60     		str	r3, [r7, #12]
1366:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set the new external trigger edge for injected group */
1367:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg |= ADC_ExternalTrigInjecConvEdge;
 3230              		.loc 1 1367 0
 3231 0084 FA68     		ldr	r2, [r7, #12]
 3232 0086 3B68     		ldr	r3, [r7]
 3233 0088 1343     		orrs	r3, r3, r2
 3234 008a FB60     		str	r3, [r7, #12]
1368:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Store the new register value */
1369:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->CR2 = tmpreg;
 3235              		.loc 1 1369 0
 3236 008c 7B68     		ldr	r3, [r7, #4]
 3237 008e FA68     		ldr	r2, [r7, #12]
 3238 0090 9A60     		str	r2, [r3, #8]
1370:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 3239              		.loc 1 1370 0
 3240 0092 1037     		adds	r7, r7, #16
 3241 0094 BD46     		mov	sp, r7
 3242              		@ sp needed
 3243 0096 80BD     		pop	{r7, pc}
 3244              		.cfi_endproc
 3245              	.LFE137:
 3247              		.section	.text.ADC_SoftwareStartInjectedConv,"ax",%progbits
 3248              		.align	2
 3249              		.global	ADC_SoftwareStartInjectedConv
 3250              		.thumb
 3251              		.thumb_func
 3253              	ADC_SoftwareStartInjectedConv:
 3254              	.LFB138:
1371:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1372:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1373:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables the selected ADC software start conversion of the injected channels.
1374:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1375:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1376:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1377:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_SoftwareStartInjectedConv(ADC_TypeDef* ADCx)
1378:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 3255              		.loc 1 1378 0
 3256              		.cfi_startproc
 3257              		@ args = 0, pretend = 0, frame = 8
 3258              		@ frame_needed = 1, uses_anonymous_args = 0
 3259 0000 80B5     		push	{r7, lr}
 3260              	.LCFI82:
 3261              		.cfi_def_cfa_offset 8
 3262              		.cfi_offset 7, -8
 3263              		.cfi_offset 14, -4
 3264 0002 82B0     		sub	sp, sp, #8
 3265              	.LCFI83:
 3266              		.cfi_def_cfa_offset 16
 3267 0004 00AF     		add	r7, sp, #0
 3268              	.LCFI84:
 3269              		.cfi_def_cfa_register 7
 3270 0006 7860     		str	r0, [r7, #4]
1379:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1380:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 3271              		.loc 1 1380 0
 3272 0008 7A68     		ldr	r2, [r7, #4]
 3273 000a 4FF40053 		mov	r3, #8192
 3274 000e C4F20103 		movt	r3, 16385
 3275 0012 9A42     		cmp	r2, r3
 3276 0014 15D0     		beq	.L121
 3277              		.loc 1 1380 0 is_stmt 0 discriminator 1
 3278 0016 7A68     		ldr	r2, [r7, #4]
 3279 0018 4FF40453 		mov	r3, #8448
 3280 001c C4F20103 		movt	r3, 16385
 3281 0020 9A42     		cmp	r2, r3
 3282 0022 0ED0     		beq	.L121
 3283 0024 7A68     		ldr	r2, [r7, #4]
 3284 0026 4FF40853 		mov	r3, #8704
 3285 002a C4F20103 		movt	r3, 16385
 3286 002e 9A42     		cmp	r2, r3
 3287 0030 07D0     		beq	.L121
 3288 0032 40F20000 		movw	r0, #:lower16:.LC0
 3289 0036 C0F20000 		movt	r0, #:upper16:.LC0
 3290 003a 40F26451 		movw	r1, #1380
 3291 003e FFF7FEFF 		bl	assert_failed
 3292              	.L121:
1381:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Enable the selected ADC conversion for injected group */
1382:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->CR2 |= (uint32_t)ADC_CR2_JSWSTART;
 3293              		.loc 1 1382 0 is_stmt 1
 3294 0042 7B68     		ldr	r3, [r7, #4]
 3295 0044 9B68     		ldr	r3, [r3, #8]
 3296 0046 43F48002 		orr	r2, r3, #4194304
 3297 004a 7B68     		ldr	r3, [r7, #4]
 3298 004c 9A60     		str	r2, [r3, #8]
1383:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 3299              		.loc 1 1383 0
 3300 004e 0837     		adds	r7, r7, #8
 3301 0050 BD46     		mov	sp, r7
 3302              		@ sp needed
 3303 0052 80BD     		pop	{r7, pc}
 3304              		.cfi_endproc
 3305              	.LFE138:
 3307              		.section	.text.ADC_GetSoftwareStartInjectedConvCmdStatus,"ax",%progbits
 3308              		.align	2
 3309              		.global	ADC_GetSoftwareStartInjectedConvCmdStatus
 3310              		.thumb
 3311              		.thumb_func
 3313              	ADC_GetSoftwareStartInjectedConvCmdStatus:
 3314              	.LFB139:
1384:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1385:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1386:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Gets the selected ADC Software start injected conversion Status.
1387:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1388:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval The new state of ADC software start injected conversion (SET or RESET).
1389:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1390:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** FlagStatus ADC_GetSoftwareStartInjectedConvCmdStatus(ADC_TypeDef* ADCx)
1391:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 3315              		.loc 1 1391 0
 3316              		.cfi_startproc
 3317              		@ args = 0, pretend = 0, frame = 16
 3318              		@ frame_needed = 1, uses_anonymous_args = 0
 3319 0000 80B5     		push	{r7, lr}
 3320              	.LCFI85:
 3321              		.cfi_def_cfa_offset 8
 3322              		.cfi_offset 7, -8
 3323              		.cfi_offset 14, -4
 3324 0002 84B0     		sub	sp, sp, #16
 3325              	.LCFI86:
 3326              		.cfi_def_cfa_offset 24
 3327 0004 00AF     		add	r7, sp, #0
 3328              	.LCFI87:
 3329              		.cfi_def_cfa_register 7
 3330 0006 7860     		str	r0, [r7, #4]
1392:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   FlagStatus bitstatus = RESET;
 3331              		.loc 1 1392 0
 3332 0008 0023     		movs	r3, #0
 3333 000a FB73     		strb	r3, [r7, #15]
1393:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1394:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 3334              		.loc 1 1394 0
 3335 000c 7A68     		ldr	r2, [r7, #4]
 3336 000e 4FF40053 		mov	r3, #8192
 3337 0012 C4F20103 		movt	r3, 16385
 3338 0016 9A42     		cmp	r2, r3
 3339 0018 15D0     		beq	.L123
 3340              		.loc 1 1394 0 is_stmt 0 discriminator 1
 3341 001a 7A68     		ldr	r2, [r7, #4]
 3342 001c 4FF40453 		mov	r3, #8448
 3343 0020 C4F20103 		movt	r3, 16385
 3344 0024 9A42     		cmp	r2, r3
 3345 0026 0ED0     		beq	.L123
 3346 0028 7A68     		ldr	r2, [r7, #4]
 3347 002a 4FF40853 		mov	r3, #8704
 3348 002e C4F20103 		movt	r3, 16385
 3349 0032 9A42     		cmp	r2, r3
 3350 0034 07D0     		beq	.L123
 3351 0036 40F20000 		movw	r0, #:lower16:.LC0
 3352 003a C0F20000 		movt	r0, #:upper16:.LC0
 3353 003e 40F27251 		movw	r1, #1394
 3354 0042 FFF7FEFF 		bl	assert_failed
 3355              	.L123:
1395:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1396:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the status of JSWSTART bit */
1397:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if ((ADCx->CR2 & ADC_CR2_JSWSTART) != (uint32_t)RESET)
 3356              		.loc 1 1397 0 is_stmt 1
 3357 0046 7B68     		ldr	r3, [r7, #4]
 3358 0048 9B68     		ldr	r3, [r3, #8]
 3359 004a 03F48003 		and	r3, r3, #4194304
 3360 004e 002B     		cmp	r3, #0
 3361 0050 02D0     		beq	.L124
1398:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1399:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* JSWSTART bit is set */
1400:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     bitstatus = SET;
 3362              		.loc 1 1400 0
 3363 0052 0123     		movs	r3, #1
 3364 0054 FB73     		strb	r3, [r7, #15]
 3365 0056 01E0     		b	.L125
 3366              	.L124:
1401:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1402:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
1403:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1404:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* JSWSTART bit is reset */
1405:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     bitstatus = RESET;
 3367              		.loc 1 1405 0
 3368 0058 0023     		movs	r3, #0
 3369 005a FB73     		strb	r3, [r7, #15]
 3370              	.L125:
1406:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1407:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Return the JSWSTART bit status */
1408:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   return  bitstatus;
 3371              		.loc 1 1408 0
 3372 005c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1409:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 3373              		.loc 1 1409 0
 3374 005e 1846     		mov	r0, r3
 3375 0060 1037     		adds	r7, r7, #16
 3376 0062 BD46     		mov	sp, r7
 3377              		@ sp needed
 3378 0064 80BD     		pop	{r7, pc}
 3379              		.cfi_endproc
 3380              	.LFE139:
 3382 0066 00BF     		.section	.text.ADC_AutoInjectedConvCmd,"ax",%progbits
 3383              		.align	2
 3384              		.global	ADC_AutoInjectedConvCmd
 3385              		.thumb
 3386              		.thumb_func
 3388              	ADC_AutoInjectedConvCmd:
 3389              	.LFB140:
1410:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1411:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1412:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the selected ADC automatic injected group 
1413:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         conversion after regular one.
1414:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1415:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC auto injected conversion
1416:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1417:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1418:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1419:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_AutoInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
1420:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 3390              		.loc 1 1420 0
 3391              		.cfi_startproc
 3392              		@ args = 0, pretend = 0, frame = 8
 3393              		@ frame_needed = 1, uses_anonymous_args = 0
 3394 0000 80B5     		push	{r7, lr}
 3395              	.LCFI88:
 3396              		.cfi_def_cfa_offset 8
 3397              		.cfi_offset 7, -8
 3398              		.cfi_offset 14, -4
 3399 0002 82B0     		sub	sp, sp, #8
 3400              	.LCFI89:
 3401              		.cfi_def_cfa_offset 16
 3402 0004 00AF     		add	r7, sp, #0
 3403              	.LCFI90:
 3404              		.cfi_def_cfa_register 7
 3405 0006 7860     		str	r0, [r7, #4]
 3406 0008 0B46     		mov	r3, r1
 3407 000a FB70     		strb	r3, [r7, #3]
1421:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1422:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 3408              		.loc 1 1422 0
 3409 000c 7A68     		ldr	r2, [r7, #4]
 3410 000e 4FF40053 		mov	r3, #8192
 3411 0012 C4F20103 		movt	r3, 16385
 3412 0016 9A42     		cmp	r2, r3
 3413 0018 15D0     		beq	.L128
 3414              		.loc 1 1422 0 is_stmt 0 discriminator 1
 3415 001a 7A68     		ldr	r2, [r7, #4]
 3416 001c 4FF40453 		mov	r3, #8448
 3417 0020 C4F20103 		movt	r3, 16385
 3418 0024 9A42     		cmp	r2, r3
 3419 0026 0ED0     		beq	.L128
 3420 0028 7A68     		ldr	r2, [r7, #4]
 3421 002a 4FF40853 		mov	r3, #8704
 3422 002e C4F20103 		movt	r3, 16385
 3423 0032 9A42     		cmp	r2, r3
 3424 0034 07D0     		beq	.L128
 3425 0036 40F20000 		movw	r0, #:lower16:.LC0
 3426 003a C0F20000 		movt	r0, #:upper16:.LC0
 3427 003e 40F28E51 		movw	r1, #1422
 3428 0042 FFF7FEFF 		bl	assert_failed
 3429              	.L128:
1423:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 3430              		.loc 1 1423 0 is_stmt 1
 3431 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3432 0048 002B     		cmp	r3, #0
 3433 004a 0AD0     		beq	.L129
 3434              		.loc 1 1423 0 is_stmt 0 discriminator 1
 3435 004c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3436 004e 012B     		cmp	r3, #1
 3437 0050 07D0     		beq	.L129
 3438 0052 40F20000 		movw	r0, #:lower16:.LC0
 3439 0056 C0F20000 		movt	r0, #:upper16:.LC0
 3440 005a 40F28F51 		movw	r1, #1423
 3441 005e FFF7FEFF 		bl	assert_failed
 3442              	.L129:
1424:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 3443              		.loc 1 1424 0 is_stmt 1
 3444 0062 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3445 0064 002B     		cmp	r3, #0
 3446 0066 06D0     		beq	.L130
1425:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1426:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Enable the selected ADC automatic injected group conversion */
1427:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR1 |= (uint32_t)ADC_CR1_JAUTO;
 3447              		.loc 1 1427 0
 3448 0068 7B68     		ldr	r3, [r7, #4]
 3449 006a 5B68     		ldr	r3, [r3, #4]
 3450 006c 43F48062 		orr	r2, r3, #1024
 3451 0070 7B68     		ldr	r3, [r7, #4]
 3452 0072 5A60     		str	r2, [r3, #4]
 3453 0074 05E0     		b	.L127
 3454              	.L130:
1428:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1429:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
1430:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1431:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Disable the selected ADC automatic injected group conversion */
1432:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR1 &= (uint32_t)(~ADC_CR1_JAUTO);
 3455              		.loc 1 1432 0
 3456 0076 7B68     		ldr	r3, [r7, #4]
 3457 0078 5B68     		ldr	r3, [r3, #4]
 3458 007a 23F48062 		bic	r2, r3, #1024
 3459 007e 7B68     		ldr	r3, [r7, #4]
 3460 0080 5A60     		str	r2, [r3, #4]
 3461              	.L127:
1433:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1434:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 3462              		.loc 1 1434 0
 3463 0082 0837     		adds	r7, r7, #8
 3464 0084 BD46     		mov	sp, r7
 3465              		@ sp needed
 3466 0086 80BD     		pop	{r7, pc}
 3467              		.cfi_endproc
 3468              	.LFE140:
 3470              		.section	.text.ADC_InjectedDiscModeCmd,"ax",%progbits
 3471              		.align	2
 3472              		.global	ADC_InjectedDiscModeCmd
 3473              		.thumb
 3474              		.thumb_func
 3476              	ADC_InjectedDiscModeCmd:
 3477              	.LFB141:
1435:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1436:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1437:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the discontinuous mode for injected group 
1438:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         channel for the specified ADC
1439:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1440:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode on injected
1441:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         group channel.
1442:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1443:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1444:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1445:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_InjectedDiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
1446:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 3478              		.loc 1 1446 0
 3479              		.cfi_startproc
 3480              		@ args = 0, pretend = 0, frame = 8
 3481              		@ frame_needed = 1, uses_anonymous_args = 0
 3482 0000 80B5     		push	{r7, lr}
 3483              	.LCFI91:
 3484              		.cfi_def_cfa_offset 8
 3485              		.cfi_offset 7, -8
 3486              		.cfi_offset 14, -4
 3487 0002 82B0     		sub	sp, sp, #8
 3488              	.LCFI92:
 3489              		.cfi_def_cfa_offset 16
 3490 0004 00AF     		add	r7, sp, #0
 3491              	.LCFI93:
 3492              		.cfi_def_cfa_register 7
 3493 0006 7860     		str	r0, [r7, #4]
 3494 0008 0B46     		mov	r3, r1
 3495 000a FB70     		strb	r3, [r7, #3]
1447:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1448:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 3496              		.loc 1 1448 0
 3497 000c 7A68     		ldr	r2, [r7, #4]
 3498 000e 4FF40053 		mov	r3, #8192
 3499 0012 C4F20103 		movt	r3, 16385
 3500 0016 9A42     		cmp	r2, r3
 3501 0018 15D0     		beq	.L133
 3502              		.loc 1 1448 0 is_stmt 0 discriminator 1
 3503 001a 7A68     		ldr	r2, [r7, #4]
 3504 001c 4FF40453 		mov	r3, #8448
 3505 0020 C4F20103 		movt	r3, 16385
 3506 0024 9A42     		cmp	r2, r3
 3507 0026 0ED0     		beq	.L133
 3508 0028 7A68     		ldr	r2, [r7, #4]
 3509 002a 4FF40853 		mov	r3, #8704
 3510 002e C4F20103 		movt	r3, 16385
 3511 0032 9A42     		cmp	r2, r3
 3512 0034 07D0     		beq	.L133
 3513 0036 40F20000 		movw	r0, #:lower16:.LC0
 3514 003a C0F20000 		movt	r0, #:upper16:.LC0
 3515 003e 4FF4B561 		mov	r1, #1448
 3516 0042 FFF7FEFF 		bl	assert_failed
 3517              	.L133:
1449:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 3518              		.loc 1 1449 0 is_stmt 1
 3519 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3520 0048 002B     		cmp	r3, #0
 3521 004a 0AD0     		beq	.L134
 3522              		.loc 1 1449 0 is_stmt 0 discriminator 1
 3523 004c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3524 004e 012B     		cmp	r3, #1
 3525 0050 07D0     		beq	.L134
 3526 0052 40F20000 		movw	r0, #:lower16:.LC0
 3527 0056 C0F20000 		movt	r0, #:upper16:.LC0
 3528 005a 40F2A951 		movw	r1, #1449
 3529 005e FFF7FEFF 		bl	assert_failed
 3530              	.L134:
1450:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 3531              		.loc 1 1450 0 is_stmt 1
 3532 0062 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3533 0064 002B     		cmp	r3, #0
 3534 0066 06D0     		beq	.L135
1451:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1452:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Enable the selected ADC injected discontinuous mode */
1453:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR1 |= (uint32_t)ADC_CR1_JDISCEN;
 3535              		.loc 1 1453 0
 3536 0068 7B68     		ldr	r3, [r7, #4]
 3537 006a 5B68     		ldr	r3, [r3, #4]
 3538 006c 43F48052 		orr	r2, r3, #4096
 3539 0070 7B68     		ldr	r3, [r7, #4]
 3540 0072 5A60     		str	r2, [r3, #4]
 3541 0074 05E0     		b	.L132
 3542              	.L135:
1454:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1455:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
1456:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1457:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Disable the selected ADC injected discontinuous mode */
1458:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR1 &= (uint32_t)(~ADC_CR1_JDISCEN);
 3543              		.loc 1 1458 0
 3544 0076 7B68     		ldr	r3, [r7, #4]
 3545 0078 5B68     		ldr	r3, [r3, #4]
 3546 007a 23F48052 		bic	r2, r3, #4096
 3547 007e 7B68     		ldr	r3, [r7, #4]
 3548 0080 5A60     		str	r2, [r3, #4]
 3549              	.L132:
1459:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1460:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 3550              		.loc 1 1460 0
 3551 0082 0837     		adds	r7, r7, #8
 3552 0084 BD46     		mov	sp, r7
 3553              		@ sp needed
 3554 0086 80BD     		pop	{r7, pc}
 3555              		.cfi_endproc
 3556              	.LFE141:
 3558              		.section	.text.ADC_GetInjectedConversionValue,"ax",%progbits
 3559              		.align	2
 3560              		.global	ADC_GetInjectedConversionValue
 3561              		.thumb
 3562              		.thumb_func
 3564              	ADC_GetInjectedConversionValue:
 3565              	.LFB142:
1461:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1462:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1463:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Returns the ADC injected channel conversion result
1464:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1465:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_InjectedChannel: the converted ADC injected channel.
1466:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1467:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_1: Injected Channel1 selected
1468:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_2: Injected Channel2 selected
1469:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_3: Injected Channel3 selected
1470:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_4: Injected Channel4 selected
1471:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval The Data conversion value.
1472:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1473:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** uint16_t ADC_GetInjectedConversionValue(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel)
1474:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 3566              		.loc 1 1474 0
 3567              		.cfi_startproc
 3568              		@ args = 0, pretend = 0, frame = 16
 3569              		@ frame_needed = 1, uses_anonymous_args = 0
 3570 0000 80B5     		push	{r7, lr}
 3571              	.LCFI94:
 3572              		.cfi_def_cfa_offset 8
 3573              		.cfi_offset 7, -8
 3574              		.cfi_offset 14, -4
 3575 0002 84B0     		sub	sp, sp, #16
 3576              	.LCFI95:
 3577              		.cfi_def_cfa_offset 24
 3578 0004 00AF     		add	r7, sp, #0
 3579              	.LCFI96:
 3580              		.cfi_def_cfa_register 7
 3581 0006 7860     		str	r0, [r7, #4]
 3582 0008 0B46     		mov	r3, r1
 3583 000a FB70     		strb	r3, [r7, #3]
1475:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   __IO uint32_t tmp = 0;
 3584              		.loc 1 1475 0
 3585 000c 0023     		movs	r3, #0
 3586 000e FB60     		str	r3, [r7, #12]
1476:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1477:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1478:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 3587              		.loc 1 1478 0
 3588 0010 7A68     		ldr	r2, [r7, #4]
 3589 0012 4FF40053 		mov	r3, #8192
 3590 0016 C4F20103 		movt	r3, 16385
 3591 001a 9A42     		cmp	r2, r3
 3592 001c 15D0     		beq	.L138
 3593              		.loc 1 1478 0 is_stmt 0 discriminator 1
 3594 001e 7A68     		ldr	r2, [r7, #4]
 3595 0020 4FF40453 		mov	r3, #8448
 3596 0024 C4F20103 		movt	r3, 16385
 3597 0028 9A42     		cmp	r2, r3
 3598 002a 0ED0     		beq	.L138
 3599 002c 7A68     		ldr	r2, [r7, #4]
 3600 002e 4FF40853 		mov	r3, #8704
 3601 0032 C4F20103 		movt	r3, 16385
 3602 0036 9A42     		cmp	r2, r3
 3603 0038 07D0     		beq	.L138
 3604 003a 40F20000 		movw	r0, #:lower16:.LC0
 3605 003e C0F20000 		movt	r0, #:upper16:.LC0
 3606 0042 40F2C651 		movw	r1, #1478
 3607 0046 FFF7FEFF 		bl	assert_failed
 3608              	.L138:
1479:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
 3609              		.loc 1 1479 0 is_stmt 1
 3610 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3611 004c 142B     		cmp	r3, #20
 3612 004e 10D0     		beq	.L139
 3613              		.loc 1 1479 0 is_stmt 0 discriminator 1
 3614 0050 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3615 0052 182B     		cmp	r3, #24
 3616 0054 0DD0     		beq	.L139
 3617 0056 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3618 0058 1C2B     		cmp	r3, #28
 3619 005a 0AD0     		beq	.L139
 3620 005c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3621 005e 202B     		cmp	r3, #32
 3622 0060 07D0     		beq	.L139
 3623 0062 40F20000 		movw	r0, #:lower16:.LC0
 3624 0066 C0F20000 		movt	r0, #:upper16:.LC0
 3625 006a 40F2C751 		movw	r1, #1479
 3626 006e FFF7FEFF 		bl	assert_failed
 3627              	.L139:
1480:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1481:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmp = (uint32_t)ADCx;
 3628              		.loc 1 1481 0 is_stmt 1
 3629 0072 7B68     		ldr	r3, [r7, #4]
 3630 0074 FB60     		str	r3, [r7, #12]
1482:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmp += ADC_InjectedChannel + JDR_OFFSET;
 3631              		.loc 1 1482 0
 3632 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 3633 0078 FB68     		ldr	r3, [r7, #12]
 3634 007a 1344     		add	r3, r3, r2
 3635 007c 2833     		adds	r3, r3, #40
 3636 007e FB60     		str	r3, [r7, #12]
1483:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1484:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Returns the selected injected channel conversion data value */
1485:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   return (uint16_t) (*(__IO uint32_t*)  tmp); 
 3637              		.loc 1 1485 0
 3638 0080 FB68     		ldr	r3, [r7, #12]
 3639 0082 1B68     		ldr	r3, [r3]
 3640 0084 9BB2     		uxth	r3, r3
1486:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 3641              		.loc 1 1486 0
 3642 0086 1846     		mov	r0, r3
 3643 0088 1037     		adds	r7, r7, #16
 3644 008a BD46     		mov	sp, r7
 3645              		@ sp needed
 3646 008c 80BD     		pop	{r7, pc}
 3647              		.cfi_endproc
 3648              	.LFE142:
 3650 008e 00BF     		.section	.text.ADC_ITConfig,"ax",%progbits
 3651              		.align	2
 3652              		.global	ADC_ITConfig
 3653              		.thumb
 3654              		.thumb_func
 3656              	ADC_ITConfig:
 3657              	.LFB143:
1487:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1488:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @}
1489:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1490:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1491:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /** @defgroup ADC_Group7 Interrupts and flags management functions
1492:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *  @brief   Interrupts and flags management functions
1493:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *
1494:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @verbatim   
1495:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================
1496:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                    Interrupts and flags management functions
1497:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================  
1498:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1499:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   This section provides functions allowing to configure the ADC Interrupts and 
1500:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   to get the status and clear flags and Interrupts pending bits.
1501:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1502:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   Each ADC provides 4 Interrupts sources and 6 Flags which can be divided into 
1503:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   3 groups:
1504:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1505:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   I. Flags and Interrupts for ADC regular channels
1506:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   =================================================
1507:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   Flags :
1508:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ---------- 
1509:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      1. ADC_FLAG_OVR : Overrun detection when regular converted data are lost
1510:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1511:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      2. ADC_FLAG_EOC : Regular channel end of conversion ==> to indicate (depending 
1512:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****               on EOCS bit, managed by ADC_EOCOnEachRegularChannelCmd() ) the end of:
1513:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                ==> a regular CHANNEL conversion 
1514:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                ==> sequence of regular GROUP conversions .
1515:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1516:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      3. ADC_FLAG_STRT: Regular channel start ==> to indicate when regular CHANNEL 
1517:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****               conversion starts.
1518:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1519:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   Interrupts :
1520:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ------------
1521:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      1. ADC_IT_OVR : specifies the interrupt source for Overrun detection event.  
1522:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      2. ADC_IT_EOC : specifies the interrupt source for Regular channel end of 
1523:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                      conversion event.
1524:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1525:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1526:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   II. Flags and Interrupts for ADC Injected channels
1527:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   =================================================
1528:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   Flags :
1529:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ---------- 
1530:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      1. ADC_FLAG_JEOC : Injected channel end of conversion ==> to indicate at 
1531:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                the end of injected GROUP conversion  
1532:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****               
1533:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      2. ADC_FLAG_JSTRT: Injected channel start ==> to indicate hardware when 
1534:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                injected GROUP conversion starts.
1535:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1536:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   Interrupts :
1537:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ------------
1538:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      1. ADC_IT_JEOC : specifies the interrupt source for Injected channel end of 
1539:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                       conversion event.     
1540:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1541:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   III. General Flags and Interrupts for the ADC
1542:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ================================================= 
1543:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   Flags :
1544:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ---------- 
1545:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      1. ADC_FLAG_AWD: Analog watchdog ==> to indicate if the converted voltage 
1546:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****               crosses the programmed thresholds values.
1547:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****               
1548:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   Interrupts :
1549:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ------------
1550:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      1. ADC_IT_AWD : specifies the interrupt source for Analog watchdog event. 
1551:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1552:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1553:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   The user should identify which mode will be used in his application to manage 
1554:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   the ADC controller events: Polling mode or Interrupt mode.
1555:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1556:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   In the Polling Mode it is advised to use the following functions:
1557:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       - ADC_GetFlagStatus() : to check if flags events occur. 
1558:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       - ADC_ClearFlag()     : to clear the flags events.
1559:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       
1560:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   In the Interrupt Mode it is advised to use the following functions:
1561:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      - ADC_ITConfig()          : to enable or disable the interrupt source.
1562:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      - ADC_GetITStatus()       : to check if Interrupt occurs.
1563:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      - ADC_ClearITPendingBit() : to clear the Interrupt pending Bit 
1564:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                                  (corresponding Flag). 
1565:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @endverbatim
1566:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @{
1567:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */ 
1568:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1569:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the specified ADC interrupts.
1570:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1571:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt sources to be enabled or disabled. 
1572:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1573:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_EOC: End of conversion interrupt mask
1574:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_AWD: Analog watchdog interrupt mask
1575:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1576:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_OVR: Overrun interrupt enable                       
1577:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the specified ADC interrupts.
1578:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1579:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1580:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1581:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_ITConfig(ADC_TypeDef* ADCx, uint16_t ADC_IT, FunctionalState NewState)  
1582:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 3658              		.loc 1 1582 0
 3659              		.cfi_startproc
 3660              		@ args = 0, pretend = 0, frame = 16
 3661              		@ frame_needed = 1, uses_anonymous_args = 0
 3662 0000 80B5     		push	{r7, lr}
 3663              	.LCFI97:
 3664              		.cfi_def_cfa_offset 8
 3665              		.cfi_offset 7, -8
 3666              		.cfi_offset 14, -4
 3667 0002 84B0     		sub	sp, sp, #16
 3668              	.LCFI98:
 3669              		.cfi_def_cfa_offset 24
 3670 0004 00AF     		add	r7, sp, #0
 3671              	.LCFI99:
 3672              		.cfi_def_cfa_register 7
 3673 0006 7860     		str	r0, [r7, #4]
 3674 0008 1346     		mov	r3, r2
 3675 000a 0A46     		mov	r2, r1	@ movhi
 3676 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 3677 000e 7B70     		strb	r3, [r7, #1]
1583:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t itmask = 0;
 3678              		.loc 1 1583 0
 3679 0010 0023     		movs	r3, #0
 3680 0012 FB60     		str	r3, [r7, #12]
1584:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1585:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 3681              		.loc 1 1585 0
 3682 0014 7A68     		ldr	r2, [r7, #4]
 3683 0016 4FF40053 		mov	r3, #8192
 3684 001a C4F20103 		movt	r3, 16385
 3685 001e 9A42     		cmp	r2, r3
 3686 0020 15D0     		beq	.L142
 3687              		.loc 1 1585 0 is_stmt 0 discriminator 1
 3688 0022 7A68     		ldr	r2, [r7, #4]
 3689 0024 4FF40453 		mov	r3, #8448
 3690 0028 C4F20103 		movt	r3, 16385
 3691 002c 9A42     		cmp	r2, r3
 3692 002e 0ED0     		beq	.L142
 3693 0030 7A68     		ldr	r2, [r7, #4]
 3694 0032 4FF40853 		mov	r3, #8704
 3695 0036 C4F20103 		movt	r3, 16385
 3696 003a 9A42     		cmp	r2, r3
 3697 003c 07D0     		beq	.L142
 3698 003e 40F20000 		movw	r0, #:lower16:.LC0
 3699 0042 C0F20000 		movt	r0, #:upper16:.LC0
 3700 0046 40F23161 		movw	r1, #1585
 3701 004a FFF7FEFF 		bl	assert_failed
 3702              	.L142:
1586:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 3703              		.loc 1 1586 0 is_stmt 1
 3704 004e 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3705 0050 002B     		cmp	r3, #0
 3706 0052 0AD0     		beq	.L143
 3707              		.loc 1 1586 0 is_stmt 0 discriminator 1
 3708 0054 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3709 0056 012B     		cmp	r3, #1
 3710 0058 07D0     		beq	.L143
 3711 005a 40F20000 		movw	r0, #:lower16:.LC0
 3712 005e C0F20000 		movt	r0, #:upper16:.LC0
 3713 0062 40F23261 		movw	r1, #1586
 3714 0066 FFF7FEFF 		bl	assert_failed
 3715              	.L143:
1587:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_IT(ADC_IT)); 
 3716              		.loc 1 1587 0 is_stmt 1
 3717 006a 7A88     		ldrh	r2, [r7, #2]
 3718 006c 40F20523 		movw	r3, #517
 3719 0070 9A42     		cmp	r2, r3
 3720 0072 15D0     		beq	.L144
 3721              		.loc 1 1587 0 is_stmt 0 discriminator 1
 3722 0074 7B88     		ldrh	r3, [r7, #2]
 3723 0076 B3F5837F 		cmp	r3, #262
 3724 007a 11D0     		beq	.L144
 3725 007c 7A88     		ldrh	r2, [r7, #2]
 3726 007e 40F20743 		movw	r3, #1031
 3727 0082 9A42     		cmp	r2, r3
 3728 0084 0CD0     		beq	.L144
 3729 0086 7A88     		ldrh	r2, [r7, #2]
 3730 0088 42F21A03 		movw	r3, #8218
 3731 008c 9A42     		cmp	r2, r3
 3732 008e 07D0     		beq	.L144
 3733 0090 40F20000 		movw	r0, #:lower16:.LC0
 3734 0094 C0F20000 		movt	r0, #:upper16:.LC0
 3735 0098 40F23361 		movw	r1, #1587
 3736 009c FFF7FEFF 		bl	assert_failed
 3737              	.L144:
1588:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1589:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the ADC IT index */
1590:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   itmask = (uint8_t)ADC_IT;
 3738              		.loc 1 1590 0 is_stmt 1
 3739 00a0 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3740 00a2 DBB2     		uxtb	r3, r3
 3741 00a4 FB60     		str	r3, [r7, #12]
1591:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   itmask = (uint32_t)0x01 << itmask;    
 3742              		.loc 1 1591 0
 3743 00a6 FB68     		ldr	r3, [r7, #12]
 3744 00a8 0122     		movs	r2, #1
 3745 00aa 02FA03F3 		lsl	r3, r2, r3
 3746 00ae FB60     		str	r3, [r7, #12]
1592:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1593:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 3747              		.loc 1 1593 0
 3748 00b0 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3749 00b2 002B     		cmp	r3, #0
 3750 00b4 06D0     		beq	.L145
1594:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1595:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Enable the selected ADC interrupts */
1596:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR1 |= itmask;
 3751              		.loc 1 1596 0
 3752 00b6 7B68     		ldr	r3, [r7, #4]
 3753 00b8 5A68     		ldr	r2, [r3, #4]
 3754 00ba FB68     		ldr	r3, [r7, #12]
 3755 00bc 1A43     		orrs	r2, r2, r3
 3756 00be 7B68     		ldr	r3, [r7, #4]
 3757 00c0 5A60     		str	r2, [r3, #4]
 3758 00c2 06E0     		b	.L141
 3759              	.L145:
1597:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1598:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
1599:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1600:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Disable the selected ADC interrupts */
1601:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR1 &= (~(uint32_t)itmask);
 3760              		.loc 1 1601 0
 3761 00c4 7B68     		ldr	r3, [r7, #4]
 3762 00c6 5A68     		ldr	r2, [r3, #4]
 3763 00c8 FB68     		ldr	r3, [r7, #12]
 3764 00ca DB43     		mvns	r3, r3
 3765 00cc 1A40     		ands	r2, r2, r3
 3766 00ce 7B68     		ldr	r3, [r7, #4]
 3767 00d0 5A60     		str	r2, [r3, #4]
 3768              	.L141:
1602:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1603:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 3769              		.loc 1 1603 0
 3770 00d2 1037     		adds	r7, r7, #16
 3771 00d4 BD46     		mov	sp, r7
 3772              		@ sp needed
 3773 00d6 80BD     		pop	{r7, pc}
 3774              		.cfi_endproc
 3775              	.LFE143:
 3777              		.section	.text.ADC_GetFlagStatus,"ax",%progbits
 3778              		.align	2
 3779              		.global	ADC_GetFlagStatus
 3780              		.thumb
 3781              		.thumb_func
 3783              	ADC_GetFlagStatus:
 3784              	.LFB144:
1604:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1605:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1606:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Checks whether the specified ADC flag is set or not.
1607:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1608:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_FLAG: specifies the flag to check. 
1609:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1610:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_AWD: Analog watchdog flag
1611:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_EOC: End of conversion flag
1612:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_JEOC: End of injected group conversion flag
1613:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1614:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_STRT: Start of regular group conversion flag
1615:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_OVR: Overrun flag                                                 
1616:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval The new state of ADC_FLAG (SET or RESET).
1617:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1618:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** FlagStatus ADC_GetFlagStatus(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1619:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 3785              		.loc 1 1619 0
 3786              		.cfi_startproc
 3787              		@ args = 0, pretend = 0, frame = 16
 3788              		@ frame_needed = 1, uses_anonymous_args = 0
 3789 0000 80B5     		push	{r7, lr}
 3790              	.LCFI100:
 3791              		.cfi_def_cfa_offset 8
 3792              		.cfi_offset 7, -8
 3793              		.cfi_offset 14, -4
 3794 0002 84B0     		sub	sp, sp, #16
 3795              	.LCFI101:
 3796              		.cfi_def_cfa_offset 24
 3797 0004 00AF     		add	r7, sp, #0
 3798              	.LCFI102:
 3799              		.cfi_def_cfa_register 7
 3800 0006 7860     		str	r0, [r7, #4]
 3801 0008 0B46     		mov	r3, r1
 3802 000a FB70     		strb	r3, [r7, #3]
1620:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   FlagStatus bitstatus = RESET;
 3803              		.loc 1 1620 0
 3804 000c 0023     		movs	r3, #0
 3805 000e FB73     		strb	r3, [r7, #15]
1621:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1622:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 3806              		.loc 1 1622 0
 3807 0010 7A68     		ldr	r2, [r7, #4]
 3808 0012 4FF40053 		mov	r3, #8192
 3809 0016 C4F20103 		movt	r3, 16385
 3810 001a 9A42     		cmp	r2, r3
 3811 001c 15D0     		beq	.L148
 3812              		.loc 1 1622 0 is_stmt 0 discriminator 1
 3813 001e 7A68     		ldr	r2, [r7, #4]
 3814 0020 4FF40453 		mov	r3, #8448
 3815 0024 C4F20103 		movt	r3, 16385
 3816 0028 9A42     		cmp	r2, r3
 3817 002a 0ED0     		beq	.L148
 3818 002c 7A68     		ldr	r2, [r7, #4]
 3819 002e 4FF40853 		mov	r3, #8704
 3820 0032 C4F20103 		movt	r3, 16385
 3821 0036 9A42     		cmp	r2, r3
 3822 0038 07D0     		beq	.L148
 3823 003a 40F20000 		movw	r0, #:lower16:.LC0
 3824 003e C0F20000 		movt	r0, #:upper16:.LC0
 3825 0042 40F25661 		movw	r1, #1622
 3826 0046 FFF7FEFF 		bl	assert_failed
 3827              	.L148:
1623:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_GET_FLAG(ADC_FLAG));
 3828              		.loc 1 1623 0 is_stmt 1
 3829 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3830 004c 012B     		cmp	r3, #1
 3831 004e 16D0     		beq	.L149
 3832              		.loc 1 1623 0 is_stmt 0 discriminator 1
 3833 0050 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3834 0052 022B     		cmp	r3, #2
 3835 0054 13D0     		beq	.L149
 3836 0056 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3837 0058 042B     		cmp	r3, #4
 3838 005a 10D0     		beq	.L149
 3839 005c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3840 005e 082B     		cmp	r3, #8
 3841 0060 0DD0     		beq	.L149
 3842 0062 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3843 0064 102B     		cmp	r3, #16
 3844 0066 0AD0     		beq	.L149
 3845 0068 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3846 006a 202B     		cmp	r3, #32
 3847 006c 07D0     		beq	.L149
 3848 006e 40F20000 		movw	r0, #:lower16:.LC0
 3849 0072 C0F20000 		movt	r0, #:upper16:.LC0
 3850 0076 40F25761 		movw	r1, #1623
 3851 007a FFF7FEFF 		bl	assert_failed
 3852              	.L149:
1624:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1625:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the status of the specified ADC flag */
1626:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if ((ADCx->SR & ADC_FLAG) != (uint8_t)RESET)
 3853              		.loc 1 1626 0 is_stmt 1
 3854 007e 7B68     		ldr	r3, [r7, #4]
 3855 0080 1A68     		ldr	r2, [r3]
 3856 0082 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3857 0084 1340     		ands	r3, r3, r2
 3858 0086 002B     		cmp	r3, #0
 3859 0088 02D0     		beq	.L150
1627:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1628:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* ADC_FLAG is set */
1629:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     bitstatus = SET;
 3860              		.loc 1 1629 0
 3861 008a 0123     		movs	r3, #1
 3862 008c FB73     		strb	r3, [r7, #15]
 3863 008e 01E0     		b	.L151
 3864              	.L150:
1630:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1631:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
1632:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1633:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* ADC_FLAG is reset */
1634:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     bitstatus = RESET;
 3865              		.loc 1 1634 0
 3866 0090 0023     		movs	r3, #0
 3867 0092 FB73     		strb	r3, [r7, #15]
 3868              	.L151:
1635:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1636:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Return the ADC_FLAG status */
1637:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   return  bitstatus;
 3869              		.loc 1 1637 0
 3870 0094 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1638:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 3871              		.loc 1 1638 0
 3872 0096 1846     		mov	r0, r3
 3873 0098 1037     		adds	r7, r7, #16
 3874 009a BD46     		mov	sp, r7
 3875              		@ sp needed
 3876 009c 80BD     		pop	{r7, pc}
 3877              		.cfi_endproc
 3878              	.LFE144:
 3880 009e 00BF     		.section	.text.ADC_ClearFlag,"ax",%progbits
 3881              		.align	2
 3882              		.global	ADC_ClearFlag
 3883              		.thumb
 3884              		.thumb_func
 3886              	ADC_ClearFlag:
 3887              	.LFB145:
1639:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1640:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1641:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Clears the ADCx's pending flags.
1642:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1643:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_FLAG: specifies the flag to clear. 
1644:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be any combination of the following values:
1645:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_AWD: Analog watchdog flag
1646:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_EOC: End of conversion flag
1647:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_JEOC: End of injected group conversion flag
1648:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1649:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_STRT: Start of regular group conversion flag
1650:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_OVR: Overrun flag                          
1651:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1652:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1653:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_ClearFlag(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1654:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 3888              		.loc 1 1654 0
 3889              		.cfi_startproc
 3890              		@ args = 0, pretend = 0, frame = 8
 3891              		@ frame_needed = 1, uses_anonymous_args = 0
 3892 0000 80B5     		push	{r7, lr}
 3893              	.LCFI103:
 3894              		.cfi_def_cfa_offset 8
 3895              		.cfi_offset 7, -8
 3896              		.cfi_offset 14, -4
 3897 0002 82B0     		sub	sp, sp, #8
 3898              	.LCFI104:
 3899              		.cfi_def_cfa_offset 16
 3900 0004 00AF     		add	r7, sp, #0
 3901              	.LCFI105:
 3902              		.cfi_def_cfa_register 7
 3903 0006 7860     		str	r0, [r7, #4]
 3904 0008 0B46     		mov	r3, r1
 3905 000a FB70     		strb	r3, [r7, #3]
1655:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1656:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 3906              		.loc 1 1656 0
 3907 000c 7A68     		ldr	r2, [r7, #4]
 3908 000e 4FF40053 		mov	r3, #8192
 3909 0012 C4F20103 		movt	r3, 16385
 3910 0016 9A42     		cmp	r2, r3
 3911 0018 15D0     		beq	.L154
 3912              		.loc 1 1656 0 is_stmt 0 discriminator 1
 3913 001a 7A68     		ldr	r2, [r7, #4]
 3914 001c 4FF40453 		mov	r3, #8448
 3915 0020 C4F20103 		movt	r3, 16385
 3916 0024 9A42     		cmp	r2, r3
 3917 0026 0ED0     		beq	.L154
 3918 0028 7A68     		ldr	r2, [r7, #4]
 3919 002a 4FF40853 		mov	r3, #8704
 3920 002e C4F20103 		movt	r3, 16385
 3921 0032 9A42     		cmp	r2, r3
 3922 0034 07D0     		beq	.L154
 3923 0036 40F20000 		movw	r0, #:lower16:.LC0
 3924 003a C0F20000 		movt	r0, #:upper16:.LC0
 3925 003e 4FF4CF61 		mov	r1, #1656
 3926 0042 FFF7FEFF 		bl	assert_failed
 3927              	.L154:
1657:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_CLEAR_FLAG(ADC_FLAG));
 3928              		.loc 1 1657 0 is_stmt 1
 3929 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3930 0048 03F0C003 		and	r3, r3, #192
 3931 004c 002B     		cmp	r3, #0
 3932 004e 02D1     		bne	.L155
 3933              		.loc 1 1657 0 is_stmt 0 discriminator 2
 3934 0050 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3935 0052 002B     		cmp	r3, #0
 3936 0054 07D1     		bne	.L156
 3937              	.L155:
 3938              		.loc 1 1657 0 discriminator 1
 3939 0056 40F20000 		movw	r0, #:lower16:.LC0
 3940 005a C0F20000 		movt	r0, #:upper16:.LC0
 3941 005e 40F27961 		movw	r1, #1657
 3942 0062 FFF7FEFF 		bl	assert_failed
 3943              	.L156:
1658:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1659:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear the selected ADC flags */
1660:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->SR = ~(uint32_t)ADC_FLAG;
 3944              		.loc 1 1660 0 is_stmt 1
 3945 0066 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3946 0068 DA43     		mvns	r2, r3
 3947 006a 7B68     		ldr	r3, [r7, #4]
 3948 006c 1A60     		str	r2, [r3]
1661:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 3949              		.loc 1 1661 0
 3950 006e 0837     		adds	r7, r7, #8
 3951 0070 BD46     		mov	sp, r7
 3952              		@ sp needed
 3953 0072 80BD     		pop	{r7, pc}
 3954              		.cfi_endproc
 3955              	.LFE145:
 3957              		.section	.text.ADC_GetITStatus,"ax",%progbits
 3958              		.align	2
 3959              		.global	ADC_GetITStatus
 3960              		.thumb
 3961              		.thumb_func
 3963              	ADC_GetITStatus:
 3964              	.LFB146:
1662:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1663:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1664:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Checks whether the specified ADC interrupt has occurred or not.
1665:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx:   where x can be 1, 2 or 3 to select the ADC peripheral.
1666:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt source to check. 
1667:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1668:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_EOC: End of conversion interrupt mask
1669:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_AWD: Analog watchdog interrupt mask
1670:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1671:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_OVR: Overrun interrupt mask                        
1672:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval The new state of ADC_IT (SET or RESET).
1673:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1674:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** ITStatus ADC_GetITStatus(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1675:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 3965              		.loc 1 1675 0
 3966              		.cfi_startproc
 3967              		@ args = 0, pretend = 0, frame = 24
 3968              		@ frame_needed = 1, uses_anonymous_args = 0
 3969 0000 80B5     		push	{r7, lr}
 3970              	.LCFI106:
 3971              		.cfi_def_cfa_offset 8
 3972              		.cfi_offset 7, -8
 3973              		.cfi_offset 14, -4
 3974 0002 86B0     		sub	sp, sp, #24
 3975              	.LCFI107:
 3976              		.cfi_def_cfa_offset 32
 3977 0004 00AF     		add	r7, sp, #0
 3978              	.LCFI108:
 3979              		.cfi_def_cfa_register 7
 3980 0006 7860     		str	r0, [r7, #4]
 3981 0008 0B46     		mov	r3, r1
 3982 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1676:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ITStatus bitstatus = RESET;
 3983              		.loc 1 1676 0
 3984 000c 0023     		movs	r3, #0
 3985 000e FB75     		strb	r3, [r7, #23]
1677:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t itmask = 0, enablestatus = 0;
 3986              		.loc 1 1677 0
 3987 0010 0023     		movs	r3, #0
 3988 0012 3B61     		str	r3, [r7, #16]
 3989 0014 0023     		movs	r3, #0
 3990 0016 FB60     		str	r3, [r7, #12]
1678:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1679:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1680:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 3991              		.loc 1 1680 0
 3992 0018 7A68     		ldr	r2, [r7, #4]
 3993 001a 4FF40053 		mov	r3, #8192
 3994 001e C4F20103 		movt	r3, 16385
 3995 0022 9A42     		cmp	r2, r3
 3996 0024 15D0     		beq	.L158
 3997              		.loc 1 1680 0 is_stmt 0 discriminator 1
 3998 0026 7A68     		ldr	r2, [r7, #4]
 3999 0028 4FF40453 		mov	r3, #8448
 4000 002c C4F20103 		movt	r3, 16385
 4001 0030 9A42     		cmp	r2, r3
 4002 0032 0ED0     		beq	.L158
 4003 0034 7A68     		ldr	r2, [r7, #4]
 4004 0036 4FF40853 		mov	r3, #8704
 4005 003a C4F20103 		movt	r3, 16385
 4006 003e 9A42     		cmp	r2, r3
 4007 0040 07D0     		beq	.L158
 4008 0042 40F20000 		movw	r0, #:lower16:.LC0
 4009 0046 C0F20000 		movt	r0, #:upper16:.LC0
 4010 004a 4FF4D261 		mov	r1, #1680
 4011 004e FFF7FEFF 		bl	assert_failed
 4012              	.L158:
1681:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_IT(ADC_IT));
 4013              		.loc 1 1681 0 is_stmt 1
 4014 0052 7A88     		ldrh	r2, [r7, #2]
 4015 0054 40F20523 		movw	r3, #517
 4016 0058 9A42     		cmp	r2, r3
 4017 005a 15D0     		beq	.L159
 4018              		.loc 1 1681 0 is_stmt 0 discriminator 1
 4019 005c 7B88     		ldrh	r3, [r7, #2]
 4020 005e B3F5837F 		cmp	r3, #262
 4021 0062 11D0     		beq	.L159
 4022 0064 7A88     		ldrh	r2, [r7, #2]
 4023 0066 40F20743 		movw	r3, #1031
 4024 006a 9A42     		cmp	r2, r3
 4025 006c 0CD0     		beq	.L159
 4026 006e 7A88     		ldrh	r2, [r7, #2]
 4027 0070 42F21A03 		movw	r3, #8218
 4028 0074 9A42     		cmp	r2, r3
 4029 0076 07D0     		beq	.L159
 4030 0078 40F20000 		movw	r0, #:lower16:.LC0
 4031 007c C0F20000 		movt	r0, #:upper16:.LC0
 4032 0080 40F29161 		movw	r1, #1681
 4033 0084 FFF7FEFF 		bl	assert_failed
 4034              	.L159:
1682:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1683:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the ADC IT index */
1684:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   itmask = ADC_IT >> 8;
 4035              		.loc 1 1684 0 is_stmt 1
 4036 0088 7B88     		ldrh	r3, [r7, #2]
 4037 008a 1B0A     		lsrs	r3, r3, #8
 4038 008c 9BB2     		uxth	r3, r3
 4039 008e 3B61     		str	r3, [r7, #16]
1685:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1686:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the ADC_IT enable bit status */
1687:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   enablestatus = (ADCx->CR1 & ((uint32_t)0x01 << (uint8_t)ADC_IT)) ;
 4040              		.loc 1 1687 0
 4041 0090 7B68     		ldr	r3, [r7, #4]
 4042 0092 5A68     		ldr	r2, [r3, #4]
 4043 0094 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4044 0096 DBB2     		uxtb	r3, r3
 4045 0098 0121     		movs	r1, #1
 4046 009a 01FA03F3 		lsl	r3, r1, r3
 4047 009e 1340     		ands	r3, r3, r2
 4048 00a0 FB60     		str	r3, [r7, #12]
1688:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1689:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the status of the specified ADC interrupt */
1690:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (((ADCx->SR & itmask) != (uint32_t)RESET) && enablestatus)
 4049              		.loc 1 1690 0
 4050 00a2 7B68     		ldr	r3, [r7, #4]
 4051 00a4 1A68     		ldr	r2, [r3]
 4052 00a6 3B69     		ldr	r3, [r7, #16]
 4053 00a8 1340     		ands	r3, r3, r2
 4054 00aa 002B     		cmp	r3, #0
 4055 00ac 05D0     		beq	.L160
 4056              		.loc 1 1690 0 is_stmt 0 discriminator 1
 4057 00ae FB68     		ldr	r3, [r7, #12]
 4058 00b0 002B     		cmp	r3, #0
 4059 00b2 02D0     		beq	.L160
1691:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1692:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* ADC_IT is set */
1693:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     bitstatus = SET;
 4060              		.loc 1 1693 0 is_stmt 1
 4061 00b4 0123     		movs	r3, #1
 4062 00b6 FB75     		strb	r3, [r7, #23]
 4063 00b8 01E0     		b	.L161
 4064              	.L160:
1694:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1695:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
1696:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1697:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* ADC_IT is reset */
1698:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     bitstatus = RESET;
 4065              		.loc 1 1698 0
 4066 00ba 0023     		movs	r3, #0
 4067 00bc FB75     		strb	r3, [r7, #23]
 4068              	.L161:
1699:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1700:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Return the ADC_IT status */
1701:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   return  bitstatus;
 4069              		.loc 1 1701 0
 4070 00be FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1702:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 4071              		.loc 1 1702 0
 4072 00c0 1846     		mov	r0, r3
 4073 00c2 1837     		adds	r7, r7, #24
 4074 00c4 BD46     		mov	sp, r7
 4075              		@ sp needed
 4076 00c6 80BD     		pop	{r7, pc}
 4077              		.cfi_endproc
 4078              	.LFE146:
 4080              		.section	.text.ADC_ClearITPendingBit,"ax",%progbits
 4081              		.align	2
 4082              		.global	ADC_ClearITPendingBit
 4083              		.thumb
 4084              		.thumb_func
 4086              	ADC_ClearITPendingBit:
 4087              	.LFB147:
1703:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1704:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1705:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Clears the ADCx's interrupt pending bits.
1706:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1707:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt pending bit to clear.
1708:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1709:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_EOC: End of conversion interrupt mask
1710:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_AWD: Analog watchdog interrupt mask
1711:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1712:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_OVR: Overrun interrupt mask                         
1713:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1714:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1715:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_ClearITPendingBit(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1716:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 4088              		.loc 1 1716 0
 4089              		.cfi_startproc
 4090              		@ args = 0, pretend = 0, frame = 16
 4091              		@ frame_needed = 1, uses_anonymous_args = 0
 4092 0000 80B5     		push	{r7, lr}
 4093              	.LCFI109:
 4094              		.cfi_def_cfa_offset 8
 4095              		.cfi_offset 7, -8
 4096              		.cfi_offset 14, -4
 4097 0002 84B0     		sub	sp, sp, #16
 4098              	.LCFI110:
 4099              		.cfi_def_cfa_offset 24
 4100 0004 00AF     		add	r7, sp, #0
 4101              	.LCFI111:
 4102              		.cfi_def_cfa_register 7
 4103 0006 7860     		str	r0, [r7, #4]
 4104 0008 0B46     		mov	r3, r1
 4105 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1717:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint8_t itmask = 0;
 4106              		.loc 1 1717 0
 4107 000c 0023     		movs	r3, #0
 4108 000e FB73     		strb	r3, [r7, #15]
1718:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1719:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 4109              		.loc 1 1719 0
 4110 0010 7A68     		ldr	r2, [r7, #4]
 4111 0012 4FF40053 		mov	r3, #8192
 4112 0016 C4F20103 		movt	r3, 16385
 4113 001a 9A42     		cmp	r2, r3
 4114 001c 15D0     		beq	.L164
 4115              		.loc 1 1719 0 is_stmt 0 discriminator 1
 4116 001e 7A68     		ldr	r2, [r7, #4]
 4117 0020 4FF40453 		mov	r3, #8448
 4118 0024 C4F20103 		movt	r3, 16385
 4119 0028 9A42     		cmp	r2, r3
 4120 002a 0ED0     		beq	.L164
 4121 002c 7A68     		ldr	r2, [r7, #4]
 4122 002e 4FF40853 		mov	r3, #8704
 4123 0032 C4F20103 		movt	r3, 16385
 4124 0036 9A42     		cmp	r2, r3
 4125 0038 07D0     		beq	.L164
 4126 003a 40F20000 		movw	r0, #:lower16:.LC0
 4127 003e C0F20000 		movt	r0, #:upper16:.LC0
 4128 0042 40F2B761 		movw	r1, #1719
 4129 0046 FFF7FEFF 		bl	assert_failed
 4130              	.L164:
1720:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_IT(ADC_IT)); 
 4131              		.loc 1 1720 0 is_stmt 1
 4132 004a 7A88     		ldrh	r2, [r7, #2]
 4133 004c 40F20523 		movw	r3, #517
 4134 0050 9A42     		cmp	r2, r3
 4135 0052 15D0     		beq	.L165
 4136              		.loc 1 1720 0 is_stmt 0 discriminator 1
 4137 0054 7B88     		ldrh	r3, [r7, #2]
 4138 0056 B3F5837F 		cmp	r3, #262
 4139 005a 11D0     		beq	.L165
 4140 005c 7A88     		ldrh	r2, [r7, #2]
 4141 005e 40F20743 		movw	r3, #1031
 4142 0062 9A42     		cmp	r2, r3
 4143 0064 0CD0     		beq	.L165
 4144 0066 7A88     		ldrh	r2, [r7, #2]
 4145 0068 42F21A03 		movw	r3, #8218
 4146 006c 9A42     		cmp	r2, r3
 4147 006e 07D0     		beq	.L165
 4148 0070 40F20000 		movw	r0, #:lower16:.LC0
 4149 0074 C0F20000 		movt	r0, #:upper16:.LC0
 4150 0078 4FF4D761 		mov	r1, #1720
 4151 007c FFF7FEFF 		bl	assert_failed
 4152              	.L165:
1721:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the ADC IT index */
1722:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   itmask = (uint8_t)(ADC_IT >> 8);
 4153              		.loc 1 1722 0 is_stmt 1
 4154 0080 7B88     		ldrh	r3, [r7, #2]
 4155 0082 1B0A     		lsrs	r3, r3, #8
 4156 0084 9BB2     		uxth	r3, r3
 4157 0086 FB73     		strb	r3, [r7, #15]
1723:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear the selected ADC interrupt pending bits */
1724:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->SR = ~(uint32_t)itmask;
 4158              		.loc 1 1724 0
 4159 0088 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4160 008a DA43     		mvns	r2, r3
 4161 008c 7B68     		ldr	r3, [r7, #4]
 4162 008e 1A60     		str	r2, [r3]
1725:lib/chip/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }                    
 4163              		.loc 1 1725 0
 4164 0090 1037     		adds	r7, r7, #16
 4165 0092 BD46     		mov	sp, r7
 4166              		@ sp needed
 4167 0094 80BD     		pop	{r7, pc}
 4168              		.cfi_endproc
 4169              	.LFE147:
 4171 0096 00BF     		.text
 4172              	.Letext0:
 4173              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 4174              		.file 3 "/usr/include/newlib/stdint.h"
 4175              		.file 4 "lib/chip/CMSIS/ST/STM32F4xx/Include/stm32f4xx.h"
 4176              		.file 5 "lib/chip/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
 4177              		.file 6 "lib/chip/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_adc.c
     /tmp/ccO6TJiD.s:20     .text.ADC_DeInit:00000000 $t
     /tmp/ccO6TJiD.s:25     .text.ADC_DeInit:00000000 ADC_DeInit
     /tmp/ccO6TJiD.s:54     .rodata:00000000 $d
     /tmp/ccO6TJiD.s:55     .rodata:00000000 .LC0
     /tmp/ccO6TJiD.s:59     .text.ADC_Init:00000000 $t
     /tmp/ccO6TJiD.s:64     .text.ADC_Init:00000000 ADC_Init
     /tmp/ccO6TJiD.s:386    .text.ADC_StructInit:00000000 $t
     /tmp/ccO6TJiD.s:391    .text.ADC_StructInit:00000000 ADC_StructInit
     /tmp/ccO6TJiD.s:447    .text.ADC_CommonInit:00000000 $t
     /tmp/ccO6TJiD.s:452    .text.ADC_CommonInit:00000000 ADC_CommonInit
     /tmp/ccO6TJiD.s:695    .text.ADC_CommonStructInit:00000000 $t
     /tmp/ccO6TJiD.s:700    .text.ADC_CommonStructInit:00000000 ADC_CommonStructInit
     /tmp/ccO6TJiD.s:744    .text.ADC_Cmd:00000000 $t
     /tmp/ccO6TJiD.s:749    .text.ADC_Cmd:00000000 ADC_Cmd
     /tmp/ccO6TJiD.s:832    .text.ADC_AnalogWatchdogCmd:00000000 $t
     /tmp/ccO6TJiD.s:837    .text.ADC_AnalogWatchdogCmd:00000000 ADC_AnalogWatchdogCmd
     /tmp/ccO6TJiD.s:942    .text.ADC_AnalogWatchdogThresholdsConfig:00000000 $t
     /tmp/ccO6TJiD.s:947    .text.ADC_AnalogWatchdogThresholdsConfig:00000000 ADC_AnalogWatchdogThresholdsConfig
     /tmp/ccO6TJiD.s:1028   .text.ADC_AnalogWatchdogSingleChannelConfig:00000000 $t
     /tmp/ccO6TJiD.s:1033   .text.ADC_AnalogWatchdogSingleChannelConfig:00000000 ADC_AnalogWatchdogSingleChannelConfig
     /tmp/ccO6TJiD.s:1168   .text.ADC_TempSensorVrefintCmd:00000000 $t
     /tmp/ccO6TJiD.s:1173   .text.ADC_TempSensorVrefintCmd:00000000 ADC_TempSensorVrefintCmd
     /tmp/ccO6TJiD.s:1237   .text.ADC_VBATCmd:00000000 $t
     /tmp/ccO6TJiD.s:1242   .text.ADC_VBATCmd:00000000 ADC_VBATCmd
     /tmp/ccO6TJiD.s:1306   .text.ADC_RegularChannelConfig:00000000 $t
     /tmp/ccO6TJiD.s:1311   .text.ADC_RegularChannelConfig:00000000 ADC_RegularChannelConfig
     /tmp/ccO6TJiD.s:1681   .text.ADC_SoftwareStartConv:00000000 $t
     /tmp/ccO6TJiD.s:1686   .text.ADC_SoftwareStartConv:00000000 ADC_SoftwareStartConv
     /tmp/ccO6TJiD.s:1741   .text.ADC_GetSoftwareStartConvStatus:00000000 $t
     /tmp/ccO6TJiD.s:1746   .text.ADC_GetSoftwareStartConvStatus:00000000 ADC_GetSoftwareStartConvStatus
     /tmp/ccO6TJiD.s:1816   .text.ADC_EOCOnEachRegularChannelCmd:00000000 $t
     /tmp/ccO6TJiD.s:1821   .text.ADC_EOCOnEachRegularChannelCmd:00000000 ADC_EOCOnEachRegularChannelCmd
     /tmp/ccO6TJiD.s:1904   .text.ADC_ContinuousModeCmd:00000000 $t
     /tmp/ccO6TJiD.s:1909   .text.ADC_ContinuousModeCmd:00000000 ADC_ContinuousModeCmd
     /tmp/ccO6TJiD.s:1992   .text.ADC_DiscModeChannelCountConfig:00000000 $t
     /tmp/ccO6TJiD.s:1997   .text.ADC_DiscModeChannelCountConfig:00000000 ADC_DiscModeChannelCountConfig
     /tmp/ccO6TJiD.s:2091   .text.ADC_DiscModeCmd:00000000 $t
     /tmp/ccO6TJiD.s:2096   .text.ADC_DiscModeCmd:00000000 ADC_DiscModeCmd
     /tmp/ccO6TJiD.s:2179   .text.ADC_GetConversionValue:00000000 $t
     /tmp/ccO6TJiD.s:2184   .text.ADC_GetConversionValue:00000000 ADC_GetConversionValue
     /tmp/ccO6TJiD.s:2238   .text.ADC_GetMultiModeConversionValue:00000000 $t
     /tmp/ccO6TJiD.s:2243   .text.ADC_GetMultiModeConversionValue:00000000 ADC_GetMultiModeConversionValue
     /tmp/ccO6TJiD.s:2271   .text.ADC_DMACmd:00000000 $t
     /tmp/ccO6TJiD.s:2276   .text.ADC_DMACmd:00000000 ADC_DMACmd
     /tmp/ccO6TJiD.s:2359   .text.ADC_DMARequestAfterLastTransferCmd:00000000 $t
     /tmp/ccO6TJiD.s:2364   .text.ADC_DMARequestAfterLastTransferCmd:00000000 ADC_DMARequestAfterLastTransferCmd
     /tmp/ccO6TJiD.s:2447   .text.ADC_MultiModeDMARequestAfterLastTransferCmd:00000000 $t
     /tmp/ccO6TJiD.s:2452   .text.ADC_MultiModeDMARequestAfterLastTransferCmd:00000000 ADC_MultiModeDMARequestAfterLastTransferCmd
     /tmp/ccO6TJiD.s:2516   .text.ADC_InjectedChannelConfig:00000000 $t
     /tmp/ccO6TJiD.s:2521   .text.ADC_InjectedChannelConfig:00000000 ADC_InjectedChannelConfig
     /tmp/ccO6TJiD.s:2823   .text.ADC_InjectedSequencerLengthConfig:00000000 $t
     /tmp/ccO6TJiD.s:2828   .text.ADC_InjectedSequencerLengthConfig:00000000 ADC_InjectedSequencerLengthConfig
     /tmp/ccO6TJiD.s:2922   .text.ADC_SetInjectedOffset:00000000 $t
     /tmp/ccO6TJiD.s:2927   .text.ADC_SetInjectedOffset:00000000 ADC_SetInjectedOffset
     /tmp/ccO6TJiD.s:3024   .text.ADC_ExternalTrigInjectedConvConfig:00000000 $t
     /tmp/ccO6TJiD.s:3029   .text.ADC_ExternalTrigInjectedConvConfig:00000000 ADC_ExternalTrigInjectedConvConfig
     /tmp/ccO6TJiD.s:3154   .text.ADC_ExternalTrigInjectedConvEdgeConfig:00000000 $t
     /tmp/ccO6TJiD.s:3159   .text.ADC_ExternalTrigInjectedConvEdgeConfig:00000000 ADC_ExternalTrigInjectedConvEdgeConfig
     /tmp/ccO6TJiD.s:3248   .text.ADC_SoftwareStartInjectedConv:00000000 $t
     /tmp/ccO6TJiD.s:3253   .text.ADC_SoftwareStartInjectedConv:00000000 ADC_SoftwareStartInjectedConv
     /tmp/ccO6TJiD.s:3308   .text.ADC_GetSoftwareStartInjectedConvCmdStatus:00000000 $t
     /tmp/ccO6TJiD.s:3313   .text.ADC_GetSoftwareStartInjectedConvCmdStatus:00000000 ADC_GetSoftwareStartInjectedConvCmdStatus
     /tmp/ccO6TJiD.s:3383   .text.ADC_AutoInjectedConvCmd:00000000 $t
     /tmp/ccO6TJiD.s:3388   .text.ADC_AutoInjectedConvCmd:00000000 ADC_AutoInjectedConvCmd
     /tmp/ccO6TJiD.s:3471   .text.ADC_InjectedDiscModeCmd:00000000 $t
     /tmp/ccO6TJiD.s:3476   .text.ADC_InjectedDiscModeCmd:00000000 ADC_InjectedDiscModeCmd
     /tmp/ccO6TJiD.s:3559   .text.ADC_GetInjectedConversionValue:00000000 $t
     /tmp/ccO6TJiD.s:3564   .text.ADC_GetInjectedConversionValue:00000000 ADC_GetInjectedConversionValue
     /tmp/ccO6TJiD.s:3651   .text.ADC_ITConfig:00000000 $t
     /tmp/ccO6TJiD.s:3656   .text.ADC_ITConfig:00000000 ADC_ITConfig
     /tmp/ccO6TJiD.s:3778   .text.ADC_GetFlagStatus:00000000 $t
     /tmp/ccO6TJiD.s:3783   .text.ADC_GetFlagStatus:00000000 ADC_GetFlagStatus
     /tmp/ccO6TJiD.s:3881   .text.ADC_ClearFlag:00000000 $t
     /tmp/ccO6TJiD.s:3886   .text.ADC_ClearFlag:00000000 ADC_ClearFlag
     /tmp/ccO6TJiD.s:3958   .text.ADC_GetITStatus:00000000 $t
     /tmp/ccO6TJiD.s:3963   .text.ADC_GetITStatus:00000000 ADC_GetITStatus
     /tmp/ccO6TJiD.s:4081   .text.ADC_ClearITPendingBit:00000000 $t
     /tmp/ccO6TJiD.s:4086   .text.ADC_ClearITPendingBit:00000000 ADC_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
assert_failed
